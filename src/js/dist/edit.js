!function(n){var t={};function e(c){if(t[c])return t[c].exports;var l=t[c]={i:c,l:!1,exports:{}};return n[c].call(l.exports,l,l.exports,e),l.l=!0,l.exports}e.m=n,e.c=t,e.d=function(n,t,c){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:c})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(e.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var l in n)e.d(c,l,function(t){return n[t]}.bind(null,l));return c},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=201)}([function(module,exports){eval('(function() { module.exports = this["React"]; }());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1widGhpc1wiOlwiUmVhY3RcIn0/YTFkOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLGdDQUFnQyxFQUFFIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7IG1vZHVsZS5leHBvcnRzID0gdGhpc1tcIlJlYWN0XCJdOyB9KCkpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export $ */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ALL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return logError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return CALL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return wrapSagaDispatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return FORK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return GET_CONTEXT; });\n/* unused harmony export H */\n/* unused harmony export I */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return JOIN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return take; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return fork; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return cancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return call; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return actionChannel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return PUT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return sliding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return RACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return SELECT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return TAKE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return delay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return race; });\n/* unused harmony export W */\n/* unused harmony export X */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return put; });\n/* unused harmony export Z */\n/* unused harmony export _ */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return CPS; });\n/* unused harmony export a0 */\n/* unused harmony export a1 */\n/* unused harmony export a2 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return select; });\n/* unused harmony export a4 */\n/* unused harmony export a5 */\n/* unused harmony export a6 */\n/* unused harmony export a7 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return CANCEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return check; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return ACTION_CHANNEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return expanding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return CANCELLED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return FLUSH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return SET_CONTEXT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return internalErr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return getMetaInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return kTrue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "H", function() { return createAllStyleChildCallbacks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I", function() { return createEmptyArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "J", function() { return none; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "K", function() { return once; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L", function() { return assignWithSymbols; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return makeIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "N", function() { return remove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return shouldComplete; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "P", function() { return noop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Q", function() { return flatMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R", function() { return getLocation; });\n/* unused harmony export w */\n/* unused harmony export x */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return shouldCancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "T", function() { return shouldTerminate; });\n/* harmony import */ var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);\n/* harmony import */ var _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/* harmony import */ var _redux_saga_delay_p__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35);\n\n\n\n\n\nvar konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nvar kTrue =\n/*#__PURE__*/\nkonst(true);\n\nvar noop = function noop() {};\n\nif (false) {}\nvar identity = function identity(v) {\n  return v;\n};\nvar hasSymbol = typeof Symbol === \'function\';\nvar asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : \'@@asyncIterator\';\nfunction check(value, predicate, error) {\n  if (!predicate(value)) {\n    throw new Error(error);\n  }\n}\nvar assignWithSymbols = function assignWithSymbols(target, source) {\n  Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(target, source);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(source).forEach(function (s) {\n      target[s] = source[s];\n    });\n  }\n};\nvar flatMap = function flatMap(mapper, arr) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, arr.map(mapper));\n};\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    fn();\n  };\n}\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\n\nvar kReturn = function kReturn(value) {\n  return {\n    value: value,\n    done: true\n  };\n};\n\nfunction makeIterator(next, thro, name) {\n  if (thro === void 0) {\n    thro = kThrow;\n  }\n\n  if (name === void 0) {\n    name = \'iterator\';\n  }\n\n  var iterator = {\n    meta: {\n      name: name\n    },\n    next: next,\n    throw: thro,\n    return: kReturn,\n    isSagaIterator: true\n  };\n\n  if (typeof Symbol !== \'undefined\') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\nfunction logError(error, _ref2) {\n  var sagaStack = _ref2.sagaStack;\n\n  /*eslint-disable no-console*/\n  console.error(error);\n  console.error(sagaStack);\n}\nvar internalErr = function internalErr(err) {\n  return new Error("\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project\'s github repo.\\n  Error: " + err + "\\n");\n};\nvar createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + \'.\' : \'\') + "setContext(props): argument " + props + " is not a plain object";\n};\nvar FROZEN_ACTION_ERROR = "You can\'t put (a.k.a. dispatch from saga) frozen actions.\\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\\nOtherwise you wouldn\'t be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\\nIf you are using redux and you care about this behaviour (frozen actions),\\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\\nExample implementation:\\n\\nconst freezeActions = store => next => action => next(Object.freeze(action))\\n"; // creates empty, but not-holey array\n\nvar createEmptyArray = function createEmptyArray(n) {\n  return Array.apply(null, new Array(n));\n};\nvar wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    if (false) {}\n\n    return dispatch(Object.defineProperty(action, _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_ACTION */ "f"], {\n      value: true\n    }));\n  };\n};\nvar shouldTerminate = function shouldTerminate(res) {\n  return res === _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TERMINATE */ "k"];\n};\nvar shouldCancel = function shouldCancel(res) {\n  return res === _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TASK_CANCEL */ "j"];\n};\nvar shouldComplete = function shouldComplete(res) {\n  return shouldTerminate(res) || shouldCancel(res);\n};\nfunction createAllStyleChildCallbacks(shape, parentCallback) {\n  var keys = Object.keys(shape);\n  var totalCount = keys.length;\n\n  if (false) {}\n\n  var completedCount = 0;\n  var completed;\n  var results = Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */ "a"])(shape) ? createEmptyArray(totalCount) : {};\n  var childCallbacks = {};\n\n  function checkEnd() {\n    if (completedCount === totalCount) {\n      completed = true;\n      parentCallback(results);\n    }\n  }\n\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        parentCallback.cancel();\n        parentCallback(res, isErr);\n      } else {\n        results[key] = res;\n        completedCount++;\n        checkEnd();\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCallbacks[key] = chCbAtKey;\n  });\n\n  parentCallback.cancel = function () {\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCallbacks[key].cancel();\n      });\n    }\n  };\n\n  return childCallbacks;\n}\nfunction getMetaInfo(fn) {\n  return {\n    name: fn.name || \'anonymous\',\n    location: getLocation(fn)\n  };\n}\nfunction getLocation(instrumented) {\n  return instrumented[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_LOCATION */ "g"]];\n}\n\nvar BUFFER_OVERFLOW = "Channel\'s Buffer overflow!";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\n\nfunction ringBuffer(limit, overflowAction) {\n  if (limit === void 0) {\n    limit = 10;\n  }\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar none = function none() {\n  return zeroBuffer;\n};\nvar fixed = function fixed(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_THROW);\n};\nvar dropping = function dropping(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_DROP);\n};\nvar sliding = function sliding(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n};\nvar expanding = function expanding(initialSize) {\n  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n};\n\nvar buffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  fixed: fixed,\n  dropping: dropping,\n  sliding: sliding,\n  expanding: expanding\n});\n\nvar TAKE = \'TAKE\';\nvar PUT = \'PUT\';\nvar ALL = \'ALL\';\nvar RACE = \'RACE\';\nvar CALL = \'CALL\';\nvar CPS = \'CPS\';\nvar FORK = \'FORK\';\nvar JOIN = \'JOIN\';\nvar CANCEL = \'CANCEL\';\nvar SELECT = \'SELECT\';\nvar ACTION_CHANNEL = \'ACTION_CHANNEL\';\nvar CANCELLED = \'CANCELLED\';\nvar FLUSH = \'FLUSH\';\nvar GET_CONTEXT = \'GET_CONTEXT\';\nvar SET_CONTEXT = \'SET_CONTEXT\';\n\nvar effectTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TAKE: TAKE,\n  PUT: PUT,\n  ALL: ALL,\n  RACE: RACE,\n  CALL: CALL,\n  CPS: CPS,\n  FORK: FORK,\n  JOIN: JOIN,\n  CANCEL: CANCEL,\n  SELECT: SELECT,\n  ACTION_CHANNEL: ACTION_CHANNEL,\n  CANCELLED: CANCELLED,\n  FLUSH: FLUSH,\n  GET_CONTEXT: GET_CONTEXT,\n  SET_CONTEXT: SET_CONTEXT\n});\n\nvar TEST_HINT = \'\\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)\';\n\nvar makeEffect = function makeEffect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* IO */ "c"]] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;\n};\n\nvar isForkEffect = function isForkEffect(eff) {\n  return Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* effect */ "c"])(eff) && eff.type === FORK;\n};\n\nvar detach = function detach(eff) {\n  if (false) {}\n\n  return makeEffect(FORK, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])({}, eff.payload, {\n    detached: true\n  }));\n};\nfunction take(patternOrChannel, multicastPattern) {\n  if (patternOrChannel === void 0) {\n    patternOrChannel = \'*\';\n  }\n\n  if (false) {}\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* pattern */ "i"])(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      pattern: patternOrChannel\n    });\n  }\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* multicast */ "f"])(patternOrChannel) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"])(multicastPattern) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* pattern */ "i"])(multicastPattern)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel,\n      pattern: multicastPattern\n    });\n  }\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* channel */ "b"])(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel\n    });\n  }\n\n  if (false) {}\n}\nvar takeMaybe = function takeMaybe() {\n  var eff = take.apply(void 0, arguments);\n  eff.payload.maybe = true;\n  return eff;\n};\nfunction put(channel$1, action) {\n  if (false) {}\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* undef */ "n"])(action)) {\n    action = channel$1; // `undefined` instead of `null` to make default parameter work\n\n    channel$1 = undefined;\n  }\n\n  return makeEffect(PUT, {\n    channel: channel$1,\n    action: action\n  });\n}\nvar putResolve = function putResolve() {\n  var eff = put.apply(void 0, arguments);\n  eff.payload.resolve = true;\n  return eff;\n};\nfunction all(effects) {\n  var eff = makeEffect(ALL, effects);\n  eff.combinator = true;\n  return eff;\n}\nfunction race(effects) {\n  var eff = makeEffect(RACE, effects);\n  eff.combinator = true;\n  return eff;\n} // this match getFnCallDescriptor logic\n\nvar validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {\n  check(fnDescriptor, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"], effectName + ": argument fn is undefined or null");\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"])(fnDescriptor)) {\n    return;\n  }\n\n  var context = null;\n  var fn;\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */ "a"])(fnDescriptor)) {\n    context = fnDescriptor[0];\n    fn = fnDescriptor[1];\n    check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"], effectName + ": argument of type [context, fn] has undefined or null `fn`");\n  } else if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* object */ "h"])(fnDescriptor)) {\n    context = fnDescriptor.context;\n    fn = fnDescriptor.fn;\n    check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"], effectName + ": argument of type {context, fn} has undefined or null `fn`");\n  } else {\n    check(fnDescriptor, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"], effectName + ": argument fn is not function");\n    return;\n  }\n\n  if (context && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* string */ "k"])(fn)) {\n    check(context[fn], _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"], effectName + ": context arguments has no such method - \\"" + fn + "\\"");\n    return;\n  }\n\n  check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"], effectName + ": unpacked fn argument (from [context, fn] or {context, fn}) is not a function");\n};\n\nfunction getFnCallDescriptor(fnDescriptor, args) {\n  var context = null;\n  var fn;\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"])(fnDescriptor)) {\n    fn = fnDescriptor;\n  } else {\n    if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */ "a"])(fnDescriptor)) {\n      context = fnDescriptor[0];\n      fn = fnDescriptor[1];\n    } else {\n      context = fnDescriptor.context;\n      fn = fnDescriptor.fn;\n    }\n\n    if (context && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* string */ "k"])(fn) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"])(context[fn])) {\n      fn = context[fn];\n    }\n  }\n\n  return {\n    context: context,\n    fn: fn,\n    args: args\n  };\n}\n\nvar isNotDelayEffect = function isNotDelayEffect(fn) {\n  return fn !== delay;\n};\n\nfunction call(fnDescriptor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (false) { var arg0; }\n\n  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction apply(context, fn, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  var fnDescriptor = [context, fn];\n\n  if (false) {}\n\n  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));\n}\nfunction cps(fnDescriptor) {\n  if (false) {}\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction fork(fnDescriptor) {\n  if (false) {}\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction spawn(fnDescriptor) {\n  if (false) {}\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));\n}\nfunction join(taskOrTasks) {\n  if (false) {}\n\n  return makeEffect(JOIN, taskOrTasks);\n}\nfunction cancel(taskOrTasks) {\n  if (taskOrTasks === void 0) {\n    taskOrTasks = _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SELF_CANCELLATION */ "h"];\n  }\n\n  if (false) {}\n\n  return makeEffect(CANCEL, taskOrTasks);\n}\nfunction select(selector) {\n  if (selector === void 0) {\n    selector = identity;\n  }\n\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  if (false) {}\n\n  return makeEffect(SELECT, {\n    selector: selector,\n    args: args\n  });\n}\n/**\n  channel(pattern, [buffer])    => creates a proxy channel for store actions\n**/\n\nfunction actionChannel(pattern$1, buffer$1) {\n  if (false) {}\n\n  return makeEffect(ACTION_CHANNEL, {\n    pattern: pattern$1,\n    buffer: buffer$1\n  });\n}\nfunction cancelled() {\n  return makeEffect(CANCELLED, {});\n}\nfunction flush(channel$1) {\n  if (false) {}\n\n  return makeEffect(FLUSH, channel$1);\n}\nfunction getContext(prop) {\n  if (false) {}\n\n  return makeEffect(GET_CONTEXT, prop);\n}\nfunction setContext(props) {\n  if (false) {}\n\n  return makeEffect(SET_CONTEXT, props);\n}\nvar delay =\n/*#__PURE__*/\ncall.bind(null, _redux_saga_delay_p__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"]);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) { var throwOnDirectAccess, ReactIs; } else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(46)();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcz9kN2JjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLEtBQXFDLEVBQUUscUNBTzFDO0FBQ0Q7QUFDQTtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLEVBQTRCO0FBQ3ZEIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return array; });\n/* unused harmony export buffer */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return channel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return effect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return func; });\n/* unused harmony export iterable */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return iterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return multicast; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return notUndef; });\n/* unused harmony export number */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return object; });\n/* unused harmony export observable */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return pattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return promise; });\n/* unused harmony export sagaAction */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return string; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return stringableFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return symbol; });\n/* unused harmony export task */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return undef; });\n/* harmony import */ var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\n\n\nvar undef = function undef(v) {\n  return v === null || v === undefined;\n};\nvar notUndef = function notUndef(v) {\n  return v !== null && v !== undefined;\n};\nvar func = function func(f) {\n  return typeof f === \'function\';\n};\nvar number = function number(n) {\n  return typeof n === \'number\';\n};\nvar string = function string(s) {\n  return typeof s === \'string\';\n};\nvar array = Array.isArray;\nvar object = function object(obj) {\n  return obj && !array(obj) && typeof obj === \'object\';\n};\nvar promise = function promise(p) {\n  return p && func(p.then);\n};\nvar iterator = function iterator(it) {\n  return it && func(it.next) && func(it.throw);\n};\nvar iterable = function iterable(it) {\n  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);\n};\nvar task = function task(t) {\n  return t && t[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TASK */ "i"]];\n};\nvar sagaAction = function sagaAction(a) {\n  return Boolean(a && a[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_ACTION */ "f"]]);\n};\nvar observable = function observable(ob) {\n  return ob && func(ob.subscribe);\n};\nvar buffer = function buffer(buf) {\n  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);\n};\nvar pattern = function pattern(pat) {\n  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));\n};\nvar channel = function channel(ch) {\n  return ch && func(ch.take) && func(ch.close);\n};\nvar stringableFunc = function stringableFunc(f) {\n  return func(f) && f.hasOwnProperty(\'toString\');\n};\nvar symbol = function symbol(sym) {\n  return Boolean(sym) && typeof Symbol === \'function\' && sym.constructor === Symbol && sym !== Symbol.prototype;\n};\nvar multicast = function multicast(ch) {\n  return channel(ch) && ch[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* MULTICAST */ "e"]];\n};\nvar effect = function effect(eff) {\n  return eff && eff[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* IO */ "c"]];\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlZHV4LXNhZ2EvaXMvZGlzdC9yZWR1eC1zYWdhLWlzLmVzbS5qcz9iOGZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF1RTs7QUFFdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnRUFBSTtBQUNwQjtBQUNBO0FBQ0Esd0JBQXdCLHVFQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUVBQVM7QUFDcEM7QUFDQTtBQUNBLG9CQUFvQiw4REFBRTtBQUN0Qjs7QUFFZ00iLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRBU0ssIFNBR0FfQUNUSU9OLCBNVUxUSUNBU1QsIElPIH0gZnJvbSAnQHJlZHV4LXNhZ2Evc3ltYm9scyc7XG5cbnZhciB1bmRlZiA9IGZ1bmN0aW9uIHVuZGVmKHYpIHtcbiAgcmV0dXJuIHYgPT09IG51bGwgfHwgdiA9PT0gdW5kZWZpbmVkO1xufTtcbnZhciBub3RVbmRlZiA9IGZ1bmN0aW9uIG5vdFVuZGVmKHYpIHtcbiAgcmV0dXJuIHYgIT09IG51bGwgJiYgdiAhPT0gdW5kZWZpbmVkO1xufTtcbnZhciBmdW5jID0gZnVuY3Rpb24gZnVuYyhmKSB7XG4gIHJldHVybiB0eXBlb2YgZiA9PT0gJ2Z1bmN0aW9uJztcbn07XG52YXIgbnVtYmVyID0gZnVuY3Rpb24gbnVtYmVyKG4pIHtcbiAgcmV0dXJuIHR5cGVvZiBuID09PSAnbnVtYmVyJztcbn07XG52YXIgc3RyaW5nID0gZnVuY3Rpb24gc3RyaW5nKHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBzID09PSAnc3RyaW5nJztcbn07XG52YXIgYXJyYXkgPSBBcnJheS5pc0FycmF5O1xudmFyIG9iamVjdCA9IGZ1bmN0aW9uIG9iamVjdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiAhYXJyYXkob2JqKSAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jztcbn07XG52YXIgcHJvbWlzZSA9IGZ1bmN0aW9uIHByb21pc2UocCkge1xuICByZXR1cm4gcCAmJiBmdW5jKHAudGhlbik7XG59O1xudmFyIGl0ZXJhdG9yID0gZnVuY3Rpb24gaXRlcmF0b3IoaXQpIHtcbiAgcmV0dXJuIGl0ICYmIGZ1bmMoaXQubmV4dCkgJiYgZnVuYyhpdC50aHJvdyk7XG59O1xudmFyIGl0ZXJhYmxlID0gZnVuY3Rpb24gaXRlcmFibGUoaXQpIHtcbiAgcmV0dXJuIGl0ICYmIGZ1bmMoU3ltYm9sKSA/IGZ1bmMoaXRbU3ltYm9sLml0ZXJhdG9yXSkgOiBhcnJheShpdCk7XG59O1xudmFyIHRhc2sgPSBmdW5jdGlvbiB0YXNrKHQpIHtcbiAgcmV0dXJuIHQgJiYgdFtUQVNLXTtcbn07XG52YXIgc2FnYUFjdGlvbiA9IGZ1bmN0aW9uIHNhZ2FBY3Rpb24oYSkge1xuICByZXR1cm4gQm9vbGVhbihhICYmIGFbU0FHQV9BQ1RJT05dKTtcbn07XG52YXIgb2JzZXJ2YWJsZSA9IGZ1bmN0aW9uIG9ic2VydmFibGUob2IpIHtcbiAgcmV0dXJuIG9iICYmIGZ1bmMob2Iuc3Vic2NyaWJlKTtcbn07XG52YXIgYnVmZmVyID0gZnVuY3Rpb24gYnVmZmVyKGJ1Zikge1xuICByZXR1cm4gYnVmICYmIGZ1bmMoYnVmLmlzRW1wdHkpICYmIGZ1bmMoYnVmLnRha2UpICYmIGZ1bmMoYnVmLnB1dCk7XG59O1xudmFyIHBhdHRlcm4gPSBmdW5jdGlvbiBwYXR0ZXJuKHBhdCkge1xuICByZXR1cm4gcGF0ICYmIChzdHJpbmcocGF0KSB8fCBzeW1ib2wocGF0KSB8fCBmdW5jKHBhdCkgfHwgYXJyYXkocGF0KSAmJiBwYXQuZXZlcnkocGF0dGVybikpO1xufTtcbnZhciBjaGFubmVsID0gZnVuY3Rpb24gY2hhbm5lbChjaCkge1xuICByZXR1cm4gY2ggJiYgZnVuYyhjaC50YWtlKSAmJiBmdW5jKGNoLmNsb3NlKTtcbn07XG52YXIgc3RyaW5nYWJsZUZ1bmMgPSBmdW5jdGlvbiBzdHJpbmdhYmxlRnVuYyhmKSB7XG4gIHJldHVybiBmdW5jKGYpICYmIGYuaGFzT3duUHJvcGVydHkoJ3RvU3RyaW5nJyk7XG59O1xudmFyIHN5bWJvbCA9IGZ1bmN0aW9uIHN5bWJvbChzeW0pIHtcbiAgcmV0dXJuIEJvb2xlYW4oc3ltKSAmJiB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIHN5bS5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIHN5bSAhPT0gU3ltYm9sLnByb3RvdHlwZTtcbn07XG52YXIgbXVsdGljYXN0ID0gZnVuY3Rpb24gbXVsdGljYXN0KGNoKSB7XG4gIHJldHVybiBjaGFubmVsKGNoKSAmJiBjaFtNVUxUSUNBU1RdO1xufTtcbnZhciBlZmZlY3QgPSBmdW5jdGlvbiBlZmZlY3QoZWZmKSB7XG4gIHJldHVybiBlZmYgJiYgZWZmW0lPXTtcbn07XG5cbmV4cG9ydCB7IGFycmF5LCBidWZmZXIsIGNoYW5uZWwsIGVmZmVjdCwgZnVuYywgaXRlcmFibGUsIGl0ZXJhdG9yLCBtdWx0aWNhc3QsIG5vdFVuZGVmLCBudW1iZXIsIG9iamVjdCwgb2JzZXJ2YWJsZSwgcGF0dGVybiwgcHJvbWlzZSwgc2FnYUFjdGlvbiwgc3RyaW5nLCBzdHJpbmdhYmxlRnVuYywgc3ltYm9sLCB0YXNrLCB1bmRlZiB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGlobalStyle\", function() { return createGlobalStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return css; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isStyledComponent\", function() { return isStyledComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyframes\", function() { return keyframes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServerStyleSheet\", function() { return ServerStyleSheet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StyleSheetConsumer\", function() { return StyleSheetConsumer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StyleSheetContext\", function() { return StyleSheetContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StyleSheetManager\", function() { return StyleSheetManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThemeConsumer\", function() { return ThemeConsumer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThemeContext\", function() { return ThemeContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThemeProvider\", function() { return ThemeProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withTheme\", function() { return withTheme; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS\", function() { return __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS; });\n/* harmony import */ var stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41);\n/* harmony import */ var stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);\n/* harmony import */ var stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(21);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var memoize_one__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(42);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(56);\n/* harmony import */ var merge_anything__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(57);\n\n\n\n\n\n\n\n\n\n\n// \n\nvar interleave = (function (strings, interpolations) {\n  var result = [strings[0]];\n\n  for (var i = 0, len = interpolations.length; i < len; i += 1) {\n    result.push(interpolations[i], strings[i + 1]);\n  }\n\n  return result;\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n// \nvar isPlainObject = (function (x) {\n  return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x.constructor === Object;\n});\n\n// \nvar EMPTY_ARRAY = Object.freeze([]);\nvar EMPTY_OBJECT = Object.freeze({});\n\n// \nfunction isFunction(test) {\n  return typeof test === 'function';\n}\n\n// \n\nfunction getComponentName(target) {\n  return ( false) || target.displayName || target.name || 'Component';\n}\n\n// \nfunction isStatelessFunction(test) {\n  return typeof test === 'function' && !(test.prototype && test.prototype.isReactComponent);\n}\n\n// \nfunction isStyledComponent(target) {\n  return target && typeof target.styledComponentId === 'string';\n}\n\n// \n\nvar SC_ATTR = typeof process !== 'undefined' && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || 'data-styled';\n\nvar SC_VERSION_ATTR = 'data-styled-version';\n\nvar SC_STREAM_ATTR = 'data-styled-streamed';\n\nvar IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nvar DISABLE_SPEEDY = typeof SC_DISABLE_SPEEDY === 'boolean' && SC_DISABLE_SPEEDY || typeof process !== 'undefined' && (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY) || \"production\" !== 'production';\n\n// Shared empty execution context when generating static styles\nvar STATIC_EXECUTION_CONTEXT = {};\n\n// \n\n\n/**\n * Parse errors.md and turn it into a simple hash of code: message\n */\nvar ERRORS =  false ? undefined : {};\n\n/**\n * super basic version of sprintf\n */\nfunction format() {\n  var a = arguments.length <= 0 ? undefined : arguments[0];\n  var b = [];\n\n  for (var c = 1, len = arguments.length; c < len; c += 1) {\n    b.push(arguments.length <= c ? undefined : arguments[c]);\n  }\n\n  b.forEach(function (d) {\n    a = a.replace(/%[a-z]/, d);\n  });\n\n  return a;\n}\n\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n */\n\nvar StyledComponentsError = function (_Error) {\n  inherits(StyledComponentsError, _Error);\n\n  function StyledComponentsError(code) {\n    classCallCheck(this, StyledComponentsError);\n\n    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    if (true) {\n      var _this = possibleConstructorReturn(this, _Error.call(this, 'An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#' + code + ' for more information.' + (interpolations.length > 0 ? ' Additional arguments: ' + interpolations.join(', ') : '')));\n    } else { var _this; }\n    return possibleConstructorReturn(_this);\n  }\n\n  return StyledComponentsError;\n}(Error);\n\n// \nvar SC_COMPONENT_ID = /^[^\\S\\n]*?\\/\\* sc-component-id:\\s*(\\S+)\\s+\\*\\//gm;\n\nvar extractComps = (function (maybeCSS) {\n  var css = '' + (maybeCSS || ''); // Definitely a string, and a clone\n  var existingComponents = [];\n  css.replace(SC_COMPONENT_ID, function (match, componentId, matchIndex) {\n    existingComponents.push({ componentId: componentId, matchIndex: matchIndex });\n    return match;\n  });\n  return existingComponents.map(function (_ref, i) {\n    var componentId = _ref.componentId,\n        matchIndex = _ref.matchIndex;\n\n    var nextComp = existingComponents[i + 1];\n    var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);\n    return { componentId: componentId, cssFromDOM: cssFromDOM };\n  });\n});\n\n// \n\nvar COMMENT_REGEX = /^\\s*\\/\\/.*$/gm;\n\n// NOTE: This stylis instance is only used to split rules from SSR'd style tags\nvar stylisSplitter = new stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0___default.a({\n  global: false,\n  cascade: true,\n  keyframe: false,\n  prefix: false,\n  compress: false,\n  semicolon: true\n});\n\nvar stylis = new stylis_stylis_min__WEBPACK_IMPORTED_MODULE_0___default.a({\n  global: false,\n  cascade: true,\n  keyframe: false,\n  prefix: true,\n  compress: false,\n  semicolon: false // NOTE: This means \"autocomplete missing semicolons\"\n});\n\n// Wrap `insertRulePlugin to build a list of rules,\n// and then make our own plugin to return the rules. This\n// makes it easier to hook into the existing SSR architecture\n\nvar parsingRules = [];\n\n// eslint-disable-next-line consistent-return\nvar returnRulesPlugin = function returnRulesPlugin(context) {\n  if (context === -2) {\n    var parsedRules = parsingRules;\n    parsingRules = [];\n    return parsedRules;\n  }\n};\n\nvar parseRulesPlugin = stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_1___default()(function (rule) {\n  parsingRules.push(rule);\n});\n\nvar _componentId = void 0;\nvar _selector = void 0;\nvar _selectorRegexp = void 0;\n\nvar selfReferenceReplacer = function selfReferenceReplacer(match, offset, string) {\n  if (\n  // the first self-ref is always untouched\n  offset > 0 &&\n  // there should be at least two self-refs to do a replacement (.b > .b)\n  string.slice(0, offset).indexOf(_selector) !== -1 &&\n  // no consecutive self refs (.b.b); that is a precedence boost and treated differently\n  string.slice(offset - _selector.length, offset) !== _selector) {\n    return '.' + _componentId;\n  }\n\n  return match;\n};\n\n/**\n * When writing a style like\n *\n * & + & {\n *   color: red;\n * }\n *\n * The second ampersand should be a reference to the static component class. stylis\n * has no knowledge of static class so we have to intelligently replace the base selector.\n */\nvar selfReferenceReplacementPlugin = function selfReferenceReplacementPlugin(context, _, selectors) {\n  if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {\n    // eslint-disable-next-line no-param-reassign\n    selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);\n  }\n};\n\nstylis.use([selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);\nstylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);\n\nvar splitByRules = function splitByRules(css) {\n  return stylisSplitter('', css);\n};\n\nfunction stringifyRules(rules, selector, prefix) {\n  var componentId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '&';\n\n  var flatCSS = rules.join('').replace(COMMENT_REGEX, ''); // replace JS comments\n\n  var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;\n\n  // stylis has no concept of state to be passed to plugins\n  // but since JS is single=threaded, we can rely on that to ensure\n  // these properties stay in sync with the current stylis run\n  _componentId = componentId;\n  _selector = selector;\n  _selectorRegexp = new RegExp('\\\\' + _selector + '\\\\b', 'g');\n\n  return stylis(prefix || !selector ? '' : selector, cssStr);\n}\n\n// \n/* eslint-disable camelcase, no-undef */\n\nvar getNonce = (function () {\n  return  true ? __webpack_require__.nc : undefined;\n});\n\n// \n/* These are helpers for the StyleTags to keep track of the injected\n * rule names for each (component) ID that they're keeping track of.\n * They're crucial for detecting whether a name has already been\n * injected.\n * (This excludes rehydrated names) */\n\n/* adds a new ID:name pairing to a names dictionary */\nvar addNameForId = function addNameForId(names, id, name) {\n  if (name) {\n    // eslint-disable-next-line no-param-reassign\n    var namesForId = names[id] || (names[id] = Object.create(null));\n    namesForId[name] = true;\n  }\n};\n\n/* resets an ID entirely by overwriting it in the dictionary */\nvar resetIdNames = function resetIdNames(names, id) {\n  // eslint-disable-next-line no-param-reassign\n  names[id] = Object.create(null);\n};\n\n/* factory for a names dictionary checking the existance of an ID:name pairing */\nvar hasNameForId = function hasNameForId(names) {\n  return function (id, name) {\n    return names[id] !== undefined && names[id][name];\n  };\n};\n\n/* stringifies names for the html/element output */\nvar stringifyNames = function stringifyNames(names) {\n  var str = '';\n  // eslint-disable-next-line guard-for-in\n  for (var id in names) {\n    str += Object.keys(names[id]).join(' ') + ' ';\n  }\n  return str.trim();\n};\n\n/* clones the nested names dictionary */\nvar cloneNames = function cloneNames(names) {\n  var clone = Object.create(null);\n  // eslint-disable-next-line guard-for-in\n  for (var id in names) {\n    clone[id] = _extends({}, names[id]);\n  }\n  return clone;\n};\n\n// \n\n/* These are helpers that deal with the insertRule (aka speedy) API\n * They are used in the StyleTags and specifically the speedy tag\n */\n\n/* retrieve a sheet for a given style tag */\nvar sheetForTag = function sheetForTag(tag) {\n  // $FlowFixMe\n  if (tag.sheet) return tag.sheet;\n\n  /* Firefox quirk requires us to step through all stylesheets to find one owned by the given tag */\n  var size = tag.ownerDocument.styleSheets.length;\n  for (var i = 0; i < size; i += 1) {\n    var sheet = tag.ownerDocument.styleSheets[i];\n    // $FlowFixMe\n    if (sheet.ownerNode === tag) return sheet;\n  }\n\n  /* we should always be able to find a tag */\n  throw new StyledComponentsError(10);\n};\n\n/* insert a rule safely and return whether it was actually injected */\nvar safeInsertRule = function safeInsertRule(sheet, cssRule, index) {\n  /* abort early if cssRule string is falsy */\n  if (!cssRule) return false;\n\n  var maxIndex = sheet.cssRules.length;\n\n  try {\n    /* use insertRule and cap passed index with maxIndex (no of cssRules) */\n    sheet.insertRule(cssRule, index <= maxIndex ? index : maxIndex);\n  } catch (err) {\n    /* any error indicates an invalid rule */\n    return false;\n  }\n\n  return true;\n};\n\n/* deletes `size` rules starting from `removalIndex` */\nvar deleteRules = function deleteRules(sheet, removalIndex, size) {\n  var lowerBound = removalIndex - size;\n  for (var i = removalIndex; i > lowerBound; i -= 1) {\n    sheet.deleteRule(i);\n  }\n};\n\n// \n\n/* this marker separates component styles and is important for rehydration */\nvar makeTextMarker = function makeTextMarker(id) {\n  return '\\n/* sc-component-id: ' + id + ' */\\n';\n};\n\n/* add up all numbers in array up until and including the index */\nvar addUpUntilIndex = function addUpUntilIndex(sizes, index) {\n  var totalUpToIndex = 0;\n  for (var i = 0; i <= index; i += 1) {\n    totalUpToIndex += sizes[i];\n  }\n\n  return totalUpToIndex;\n};\n\n/* create a new style tag after lastEl */\nvar makeStyleTag = function makeStyleTag(target, tagEl, insertBefore) {\n  var targetDocument = document;\n  if (target) targetDocument = target.ownerDocument;else if (tagEl) targetDocument = tagEl.ownerDocument;\n\n  var el = targetDocument.createElement('style');\n  el.setAttribute(SC_ATTR, '');\n  el.setAttribute(SC_VERSION_ATTR, \"4.4.1\");\n\n  var nonce = getNonce();\n  if (nonce) {\n    el.setAttribute('nonce', nonce);\n  }\n\n  /* Work around insertRule quirk in EdgeHTML */\n  el.appendChild(targetDocument.createTextNode(''));\n\n  if (target && !tagEl) {\n    /* Append to target when no previous element was passed */\n    target.appendChild(el);\n  } else {\n    if (!tagEl || !target || !tagEl.parentNode) {\n      throw new StyledComponentsError(6);\n    }\n\n    /* Insert new style tag after the previous one */\n    tagEl.parentNode.insertBefore(el, insertBefore ? tagEl : tagEl.nextSibling);\n  }\n\n  return el;\n};\n\n/* takes a css factory function and outputs an html styled tag factory */\nvar wrapAsHtmlTag = function wrapAsHtmlTag(css, names) {\n  return function (additionalAttrs) {\n    var nonce = getNonce();\n    var attrs = [nonce && 'nonce=\"' + nonce + '\"', SC_ATTR + '=\"' + stringifyNames(names) + '\"', SC_VERSION_ATTR + '=\"' + \"4.4.1\" + '\"', additionalAttrs];\n\n    var htmlAttr = attrs.filter(Boolean).join(' ');\n    return '<style ' + htmlAttr + '>' + css() + '</style>';\n  };\n};\n\n/* takes a css factory function and outputs an element factory */\nvar wrapAsElement = function wrapAsElement(css, names) {\n  return function () {\n    var _props;\n\n    var props = (_props = {}, _props[SC_ATTR] = stringifyNames(names), _props[SC_VERSION_ATTR] = \"4.4.1\", _props);\n\n    var nonce = getNonce();\n    if (nonce) {\n      // $FlowFixMe\n      props.nonce = nonce;\n    }\n\n    // eslint-disable-next-line react/no-danger\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement('style', _extends({}, props, { dangerouslySetInnerHTML: { __html: css() } }));\n  };\n};\n\nvar getIdsFromMarkersFactory = function getIdsFromMarkersFactory(markers) {\n  return function () {\n    return Object.keys(markers);\n  };\n};\n\n/* speedy tags utilise insertRule */\nvar makeSpeedyTag = function makeSpeedyTag(el, getImportRuleTag) {\n  var names = Object.create(null);\n  var markers = Object.create(null);\n  var sizes = [];\n\n  var extractImport = getImportRuleTag !== undefined;\n  /* indicates whether getImportRuleTag was called */\n  var usedImportRuleTag = false;\n\n  var insertMarker = function insertMarker(id) {\n    var prev = markers[id];\n    if (prev !== undefined) {\n      return prev;\n    }\n\n    markers[id] = sizes.length;\n    sizes.push(0);\n    resetIdNames(names, id);\n\n    return markers[id];\n  };\n\n  var insertRules = function insertRules(id, cssRules, name) {\n    var marker = insertMarker(id);\n    var sheet = sheetForTag(el);\n    var insertIndex = addUpUntilIndex(sizes, marker);\n\n    var injectedRules = 0;\n    var importRules = [];\n    var cssRulesSize = cssRules.length;\n\n    for (var i = 0; i < cssRulesSize; i += 1) {\n      var cssRule = cssRules[i];\n      var mayHaveImport = extractImport; /* @import rules are reordered to appear first */\n      if (mayHaveImport && cssRule.indexOf('@import') !== -1) {\n        importRules.push(cssRule);\n      } else if (safeInsertRule(sheet, cssRule, insertIndex + injectedRules)) {\n        mayHaveImport = false;\n        injectedRules += 1;\n      }\n    }\n\n    if (extractImport && importRules.length > 0) {\n      usedImportRuleTag = true;\n      // $FlowFixMe\n      getImportRuleTag().insertRules(id + '-import', importRules);\n    }\n\n    sizes[marker] += injectedRules; /* add up no of injected rules */\n    addNameForId(names, id, name);\n  };\n\n  var removeRules = function removeRules(id) {\n    var marker = markers[id];\n    if (marker === undefined) return;\n    // $FlowFixMe\n    if (el.isConnected === false) return;\n\n    var size = sizes[marker];\n    var sheet = sheetForTag(el);\n    var removalIndex = addUpUntilIndex(sizes, marker) - 1;\n    deleteRules(sheet, removalIndex, size);\n    sizes[marker] = 0;\n    resetIdNames(names, id);\n\n    if (extractImport && usedImportRuleTag) {\n      // $FlowFixMe\n      getImportRuleTag().removeRules(id + '-import');\n    }\n  };\n\n  var css = function css() {\n    var _sheetForTag = sheetForTag(el),\n        cssRules = _sheetForTag.cssRules;\n\n    var str = '';\n\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      str += makeTextMarker(id);\n      var marker = markers[id];\n      var end = addUpUntilIndex(sizes, marker);\n      var size = sizes[marker];\n      for (var i = end - size; i < end; i += 1) {\n        var rule = cssRules[i];\n        if (rule !== undefined) {\n          str += rule.cssText;\n        }\n      }\n    }\n\n    return str;\n  };\n\n  return {\n    clone: function clone() {\n      throw new StyledComponentsError(5);\n    },\n\n    css: css,\n    getIds: getIdsFromMarkersFactory(markers),\n    hasNameForId: hasNameForId(names),\n    insertMarker: insertMarker,\n    insertRules: insertRules,\n    removeRules: removeRules,\n    sealed: false,\n    styleTag: el,\n    toElement: wrapAsElement(css, names),\n    toHTML: wrapAsHtmlTag(css, names)\n  };\n};\n\nvar makeTextNode = function makeTextNode(targetDocument, id) {\n  return targetDocument.createTextNode(makeTextMarker(id));\n};\n\nvar makeBrowserTag = function makeBrowserTag(el, getImportRuleTag) {\n  var names = Object.create(null);\n  var markers = Object.create(null);\n\n  var extractImport = getImportRuleTag !== undefined;\n\n  /* indicates whether getImportRuleTag was called */\n  var usedImportRuleTag = false;\n\n  var insertMarker = function insertMarker(id) {\n    var prev = markers[id];\n    if (prev !== undefined) {\n      return prev;\n    }\n\n    markers[id] = makeTextNode(el.ownerDocument, id);\n    el.appendChild(markers[id]);\n    names[id] = Object.create(null);\n\n    return markers[id];\n  };\n\n  var insertRules = function insertRules(id, cssRules, name) {\n    var marker = insertMarker(id);\n    var importRules = [];\n    var cssRulesSize = cssRules.length;\n\n    for (var i = 0; i < cssRulesSize; i += 1) {\n      var rule = cssRules[i];\n      var mayHaveImport = extractImport;\n      if (mayHaveImport && rule.indexOf('@import') !== -1) {\n        importRules.push(rule);\n      } else {\n        mayHaveImport = false;\n        var separator = i === cssRulesSize - 1 ? '' : ' ';\n        marker.appendData('' + rule + separator);\n      }\n    }\n\n    addNameForId(names, id, name);\n\n    if (extractImport && importRules.length > 0) {\n      usedImportRuleTag = true;\n      // $FlowFixMe\n      getImportRuleTag().insertRules(id + '-import', importRules);\n    }\n  };\n\n  var removeRules = function removeRules(id) {\n    var marker = markers[id];\n    if (marker === undefined) return;\n\n    /* create new empty text node and replace the current one */\n    var newMarker = makeTextNode(el.ownerDocument, id);\n    el.replaceChild(newMarker, marker);\n    markers[id] = newMarker;\n    resetIdNames(names, id);\n\n    if (extractImport && usedImportRuleTag) {\n      // $FlowFixMe\n      getImportRuleTag().removeRules(id + '-import');\n    }\n  };\n\n  var css = function css() {\n    var str = '';\n\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      str += markers[id].data;\n    }\n\n    return str;\n  };\n\n  return {\n    clone: function clone() {\n      throw new StyledComponentsError(5);\n    },\n\n    css: css,\n    getIds: getIdsFromMarkersFactory(markers),\n    hasNameForId: hasNameForId(names),\n    insertMarker: insertMarker,\n    insertRules: insertRules,\n    removeRules: removeRules,\n    sealed: false,\n    styleTag: el,\n    toElement: wrapAsElement(css, names),\n    toHTML: wrapAsHtmlTag(css, names)\n  };\n};\n\nvar makeServerTag = function makeServerTag(namesArg, markersArg) {\n  var names = namesArg === undefined ? Object.create(null) : namesArg;\n  var markers = markersArg === undefined ? Object.create(null) : markersArg;\n\n  var insertMarker = function insertMarker(id) {\n    var prev = markers[id];\n    if (prev !== undefined) {\n      return prev;\n    }\n\n    return markers[id] = [''];\n  };\n\n  var insertRules = function insertRules(id, cssRules, name) {\n    var marker = insertMarker(id);\n    marker[0] += cssRules.join(' ');\n    addNameForId(names, id, name);\n  };\n\n  var removeRules = function removeRules(id) {\n    var marker = markers[id];\n    if (marker === undefined) return;\n    marker[0] = '';\n    resetIdNames(names, id);\n  };\n\n  var css = function css() {\n    var str = '';\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      var cssForId = markers[id][0];\n      if (cssForId) {\n        str += makeTextMarker(id) + cssForId;\n      }\n    }\n    return str;\n  };\n\n  var clone = function clone() {\n    var namesClone = cloneNames(names);\n    var markersClone = Object.create(null);\n\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      markersClone[id] = [markers[id][0]];\n    }\n\n    return makeServerTag(namesClone, markersClone);\n  };\n\n  var tag = {\n    clone: clone,\n    css: css,\n    getIds: getIdsFromMarkersFactory(markers),\n    hasNameForId: hasNameForId(names),\n    insertMarker: insertMarker,\n    insertRules: insertRules,\n    removeRules: removeRules,\n    sealed: false,\n    styleTag: null,\n    toElement: wrapAsElement(css, names),\n    toHTML: wrapAsHtmlTag(css, names)\n  };\n\n  return tag;\n};\n\nvar makeTag = function makeTag(target, tagEl, forceServer, insertBefore, getImportRuleTag) {\n  if (IS_BROWSER && !forceServer) {\n    var el = makeStyleTag(target, tagEl, insertBefore);\n\n    if (DISABLE_SPEEDY) {\n      return makeBrowserTag(el, getImportRuleTag);\n    } else {\n      return makeSpeedyTag(el, getImportRuleTag);\n    }\n  }\n\n  return makeServerTag();\n};\n\nvar rehydrate = function rehydrate(tag, els, extracted) {\n  /* add all extracted components to the new tag */\n  for (var i = 0, len = extracted.length; i < len; i += 1) {\n    var _extracted$i = extracted[i],\n        componentId = _extracted$i.componentId,\n        cssFromDOM = _extracted$i.cssFromDOM;\n\n    var cssRules = splitByRules(cssFromDOM);\n    tag.insertRules(componentId, cssRules);\n  }\n\n  /* remove old HTMLStyleElements, since they have been rehydrated */\n  for (var _i = 0, _len = els.length; _i < _len; _i += 1) {\n    var el = els[_i];\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n  }\n};\n\n// \n\nvar SPLIT_REGEX = /\\s+/;\n\n/* determine the maximum number of components before tags are sharded */\nvar MAX_SIZE = void 0;\nif (IS_BROWSER) {\n  /* in speedy mode we can keep a lot more rules in a sheet before a slowdown can be expected */\n  MAX_SIZE = DISABLE_SPEEDY ? 40 : 1000;\n} else {\n  /* for servers we do not need to shard at all */\n  MAX_SIZE = -1;\n}\n\nvar sheetRunningId = 0;\nvar master = void 0;\n\nvar StyleSheet = function () {\n\n  /* a map from ids to tags */\n\n  /* deferred rules for a given id */\n\n  /* this is used for not reinjecting rules via hasNameForId() */\n\n  /* when rules for an id are removed using remove() we have to ignore rehydratedNames for it */\n\n  /* a list of tags belonging to this StyleSheet */\n\n  /* a tag for import rules */\n\n  /* current capacity until a new tag must be created */\n\n  /* children (aka clones) of this StyleSheet inheriting all and future injections */\n\n  function StyleSheet() {\n    var _this = this;\n\n    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : IS_BROWSER ? document.head : null;\n    var forceServer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    classCallCheck(this, StyleSheet);\n\n    this.getImportRuleTag = function () {\n      var importRuleTag = _this.importRuleTag;\n\n      if (importRuleTag !== undefined) {\n        return importRuleTag;\n      }\n\n      var firstTag = _this.tags[0];\n      var insertBefore = true;\n\n      return _this.importRuleTag = makeTag(_this.target, firstTag ? firstTag.styleTag : null, _this.forceServer, insertBefore);\n    };\n\n    sheetRunningId += 1;\n    this.id = sheetRunningId;\n    this.forceServer = forceServer;\n    this.target = forceServer ? null : target;\n    this.tagMap = {};\n    this.deferred = {};\n    this.rehydratedNames = {};\n    this.ignoreRehydratedNames = {};\n    this.tags = [];\n    this.capacity = 1;\n    this.clones = [];\n  }\n\n  /* rehydrate all SSR'd style tags */\n\n\n  StyleSheet.prototype.rehydrate = function rehydrate$$1() {\n    if (!IS_BROWSER || this.forceServer) return this;\n\n    var els = [];\n    var extracted = [];\n    var isStreamed = false;\n\n    /* retrieve all of our SSR style elements from the DOM */\n    var nodes = document.querySelectorAll('style[' + SC_ATTR + '][' + SC_VERSION_ATTR + '=\"' + \"4.4.1\" + '\"]');\n\n    var nodesSize = nodes.length;\n\n    /* abort rehydration if no previous style tags were found */\n    if (!nodesSize) return this;\n\n    for (var i = 0; i < nodesSize; i += 1) {\n      var el = nodes[i];\n\n      /* check if style tag is a streamed tag */\n      if (!isStreamed) isStreamed = !!el.getAttribute(SC_STREAM_ATTR);\n\n      /* retrieve all component names */\n      var elNames = (el.getAttribute(SC_ATTR) || '').trim().split(SPLIT_REGEX);\n      var elNamesSize = elNames.length;\n      for (var j = 0, name; j < elNamesSize; j += 1) {\n        name = elNames[j];\n        /* add rehydrated name to sheet to avoid re-adding styles */\n        this.rehydratedNames[name] = true;\n      }\n\n      /* extract all components and their CSS */\n      extracted.push.apply(extracted, extractComps(el.textContent));\n\n      /* store original HTMLStyleElement */\n      els.push(el);\n    }\n\n    /* abort rehydration if nothing was extracted */\n    var extractedSize = extracted.length;\n    if (!extractedSize) return this;\n\n    /* create a tag to be used for rehydration */\n    var tag = this.makeTag(null);\n\n    rehydrate(tag, els, extracted);\n\n    /* reset capacity and adjust MAX_SIZE by the initial size of the rehydration */\n    this.capacity = Math.max(1, MAX_SIZE - extractedSize);\n    this.tags.push(tag);\n\n    /* retrieve all component ids */\n    for (var _j = 0; _j < extractedSize; _j += 1) {\n      this.tagMap[extracted[_j].componentId] = tag;\n    }\n\n    return this;\n  };\n\n  /* retrieve a \"master\" instance of StyleSheet which is typically used when no other is available\n   * The master StyleSheet is targeted by createGlobalStyle, keyframes, and components outside of any\n    * StyleSheetManager's context */\n\n\n  /* reset the internal \"master\" instance */\n  StyleSheet.reset = function reset() {\n    var forceServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    master = new StyleSheet(undefined, forceServer).rehydrate();\n  };\n\n  /* adds \"children\" to the StyleSheet that inherit all of the parents' rules\n   * while their own rules do not affect the parent */\n\n\n  StyleSheet.prototype.clone = function clone() {\n    var sheet = new StyleSheet(this.target, this.forceServer);\n\n    /* add to clone array */\n    this.clones.push(sheet);\n\n    /* clone all tags */\n    sheet.tags = this.tags.map(function (tag) {\n      var ids = tag.getIds();\n      var newTag = tag.clone();\n\n      /* reconstruct tagMap */\n      for (var i = 0; i < ids.length; i += 1) {\n        sheet.tagMap[ids[i]] = newTag;\n      }\n\n      return newTag;\n    });\n\n    /* clone other maps */\n    sheet.rehydratedNames = _extends({}, this.rehydratedNames);\n    sheet.deferred = _extends({}, this.deferred);\n\n    return sheet;\n  };\n\n  /* force StyleSheet to create a new tag on the next injection */\n\n\n  StyleSheet.prototype.sealAllTags = function sealAllTags() {\n    this.capacity = 1;\n\n    this.tags.forEach(function (tag) {\n      // eslint-disable-next-line no-param-reassign\n      tag.sealed = true;\n    });\n  };\n\n  StyleSheet.prototype.makeTag = function makeTag$$1(tag) {\n    var lastEl = tag ? tag.styleTag : null;\n    var insertBefore = false;\n\n    return makeTag(this.target, lastEl, this.forceServer, insertBefore, this.getImportRuleTag);\n  };\n\n  /* get a tag for a given componentId, assign the componentId to one, or shard */\n  StyleSheet.prototype.getTagForId = function getTagForId(id) {\n    /* simply return a tag, when the componentId was already assigned one */\n    var prev = this.tagMap[id];\n    if (prev !== undefined && !prev.sealed) {\n      return prev;\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    /* shard (create a new tag) if the tag is exhausted (See MAX_SIZE) */\n    this.capacity -= 1;\n\n    if (this.capacity === 0) {\n      this.capacity = MAX_SIZE;\n      tag = this.makeTag(tag);\n      this.tags.push(tag);\n    }\n\n    return this.tagMap[id] = tag;\n  };\n\n  /* mainly for createGlobalStyle to check for its id */\n\n\n  StyleSheet.prototype.hasId = function hasId(id) {\n    return this.tagMap[id] !== undefined;\n  };\n\n  /* caching layer checking id+name to already have a corresponding tag and injected rules */\n\n\n  StyleSheet.prototype.hasNameForId = function hasNameForId(id, name) {\n    /* exception for rehydrated names which are checked separately */\n    if (this.ignoreRehydratedNames[id] === undefined && this.rehydratedNames[name]) {\n      return true;\n    }\n\n    var tag = this.tagMap[id];\n    return tag !== undefined && tag.hasNameForId(id, name);\n  };\n\n  /* registers a componentId and registers it on its tag */\n\n\n  StyleSheet.prototype.deferredInject = function deferredInject(id, cssRules) {\n    /* don't inject when the id is already registered */\n    if (this.tagMap[id] !== undefined) return;\n\n    var clones = this.clones;\n\n    for (var i = 0; i < clones.length; i += 1) {\n      clones[i].deferredInject(id, cssRules);\n    }\n\n    this.getTagForId(id).insertMarker(id);\n    this.deferred[id] = cssRules;\n  };\n\n  /* injects rules for a given id with a name that will need to be cached */\n\n\n  StyleSheet.prototype.inject = function inject(id, cssRules, name) {\n    var clones = this.clones;\n\n\n    for (var i = 0; i < clones.length; i += 1) {\n      clones[i].inject(id, cssRules, name);\n    }\n\n    var tag = this.getTagForId(id);\n\n    /* add deferred rules for component */\n    if (this.deferred[id] !== undefined) {\n      // Combine passed cssRules with previously deferred CSS rules\n      // NOTE: We cannot mutate the deferred array itself as all clones\n      // do the same (see clones[i].inject)\n      var rules = this.deferred[id].concat(cssRules);\n      tag.insertRules(id, rules, name);\n\n      this.deferred[id] = undefined;\n    } else {\n      tag.insertRules(id, cssRules, name);\n    }\n  };\n\n  /* removes all rules for a given id, which doesn't remove its marker but resets it */\n\n\n  StyleSheet.prototype.remove = function remove(id) {\n    var tag = this.tagMap[id];\n    if (tag === undefined) return;\n\n    var clones = this.clones;\n\n    for (var i = 0; i < clones.length; i += 1) {\n      clones[i].remove(id);\n    }\n\n    /* remove all rules from the tag */\n    tag.removeRules(id);\n\n    /* ignore possible rehydrated names */\n    this.ignoreRehydratedNames[id] = true;\n\n    /* delete possible deferred rules */\n    this.deferred[id] = undefined;\n  };\n\n  StyleSheet.prototype.toHTML = function toHTML() {\n    return this.tags.map(function (tag) {\n      return tag.toHTML();\n    }).join('');\n  };\n\n  StyleSheet.prototype.toReactElements = function toReactElements() {\n    var id = this.id;\n\n\n    return this.tags.map(function (tag, i) {\n      var key = 'sc-' + id + '-' + i;\n      return Object(react__WEBPACK_IMPORTED_MODULE_2__[\"cloneElement\"])(tag.toElement(), { key: key });\n    });\n  };\n\n  createClass(StyleSheet, null, [{\n    key: 'master',\n    get: function get$$1() {\n      return master || (master = new StyleSheet().rehydrate());\n    }\n\n    /* NOTE: This is just for backwards-compatibility with jest-styled-components */\n\n  }, {\n    key: 'instance',\n    get: function get$$1() {\n      return StyleSheet.master;\n    }\n  }]);\n  return StyleSheet;\n}();\n\n// \n\nvar Keyframes = function () {\n  function Keyframes(name, rules) {\n    var _this = this;\n\n    classCallCheck(this, Keyframes);\n\n    this.inject = function (styleSheet) {\n      if (!styleSheet.hasNameForId(_this.id, _this.name)) {\n        styleSheet.inject(_this.id, _this.rules, _this.name);\n      }\n    };\n\n    this.toString = function () {\n      throw new StyledComponentsError(12, String(_this.name));\n    };\n\n    this.name = name;\n    this.rules = rules;\n\n    this.id = 'sc-keyframes-' + name;\n  }\n\n  Keyframes.prototype.getName = function getName() {\n    return this.name;\n  };\n\n  return Keyframes;\n}();\n\n// \n\n/**\n * inlined version of\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js\n */\n\nvar uppercasePattern = /([A-Z])/g;\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return string.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');\n}\n\n// \n\n// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js\nfunction addUnitIfNeeded(name, value) {\n  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133\n  // $FlowFixMe\n  if (value == null || typeof value === 'boolean' || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'number' && value !== 0 && !(name in _emotion_unitless__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"])) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return String(value).trim();\n}\n\n// \n\n/**\n * It's falsish not falsy because 0 is allowed.\n */\nvar isFalsish = function isFalsish(chunk) {\n  return chunk === undefined || chunk === null || chunk === false || chunk === '';\n};\n\nvar objToCssArray = function objToCssArray(obj, prevKey) {\n  var rules = [];\n  var keys = Object.keys(obj);\n\n  keys.forEach(function (key) {\n    if (!isFalsish(obj[key])) {\n      if (isPlainObject(obj[key])) {\n        rules.push.apply(rules, objToCssArray(obj[key], key));\n\n        return rules;\n      } else if (isFunction(obj[key])) {\n        rules.push(hyphenateStyleName(key) + ':', obj[key], ';');\n\n        return rules;\n      }\n      rules.push(hyphenateStyleName(key) + ': ' + addUnitIfNeeded(key, obj[key]) + ';');\n    }\n    return rules;\n  });\n\n  return prevKey ? [prevKey + ' {'].concat(rules, ['}']) : rules;\n};\n\nfunction flatten(chunk, executionContext, styleSheet) {\n  if (Array.isArray(chunk)) {\n    var ruleSet = [];\n\n    for (var i = 0, len = chunk.length, result; i < len; i += 1) {\n      result = flatten(chunk[i], executionContext, styleSheet);\n\n      if (result === null) continue;else if (Array.isArray(result)) ruleSet.push.apply(ruleSet, result);else ruleSet.push(result);\n    }\n\n    return ruleSet;\n  }\n\n  if (isFalsish(chunk)) {\n    return null;\n  }\n\n  /* Handle other components */\n  if (isStyledComponent(chunk)) {\n    return '.' + chunk.styledComponentId;\n  }\n\n  /* Either execute or defer the function */\n  if (isFunction(chunk)) {\n    if (isStatelessFunction(chunk) && executionContext) {\n      var _result = chunk(executionContext);\n\n      if (false) {}\n\n      return flatten(_result, executionContext, styleSheet);\n    } else return chunk;\n  }\n\n  if (chunk instanceof Keyframes) {\n    if (styleSheet) {\n      chunk.inject(styleSheet);\n      return chunk.getName();\n    } else return chunk;\n  }\n\n  /* Handle objects */\n  return isPlainObject(chunk) ? objToCssArray(chunk) : chunk.toString();\n}\n\n// \n\nfunction css(styles) {\n  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    interpolations[_key - 1] = arguments[_key];\n  }\n\n  if (isFunction(styles) || isPlainObject(styles)) {\n    // $FlowFixMe\n    return flatten(interleave(EMPTY_ARRAY, [styles].concat(interpolations)));\n  }\n\n  // $FlowFixMe\n  return flatten(interleave(styles, interpolations));\n}\n\n// \n\nfunction constructWithOptions(componentConstructor, tag) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  if (!Object(react_is__WEBPACK_IMPORTED_MODULE_4__[\"isValidElementType\"])(tag)) {\n    throw new StyledComponentsError(1, String(tag));\n  }\n\n  /* This is callable directly as a template function */\n  // $FlowFixMe: Not typed to avoid destructuring arguments\n  var templateFunction = function templateFunction() {\n    return componentConstructor(tag, options, css.apply(undefined, arguments));\n  };\n\n  /* If config methods are called, wrap up a new template function and merge options */\n  templateFunction.withConfig = function (config) {\n    return constructWithOptions(componentConstructor, tag, _extends({}, options, config));\n  };\n\n  /* Modify/inject new props at runtime */\n  templateFunction.attrs = function (attrs) {\n    return constructWithOptions(componentConstructor, tag, _extends({}, options, {\n      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean)\n    }));\n  };\n\n  return templateFunction;\n}\n\n// \n// Source: https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash(c) {\n  for (var e = c.length | 0, a = e | 0, d = 0, b; e >= 4;) {\n    b = c.charCodeAt(d) & 255 | (c.charCodeAt(++d) & 255) << 8 | (c.charCodeAt(++d) & 255) << 16 | (c.charCodeAt(++d) & 255) << 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), b ^= b >>> 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16) ^ b, e -= 4, ++d;\n  }\n  switch (e) {\n    case 3:\n      a ^= (c.charCodeAt(d + 2) & 255) << 16;\n    case 2:\n      a ^= (c.charCodeAt(d + 1) & 255) << 8;\n    case 1:\n      a ^= c.charCodeAt(d) & 255, a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);\n  }\n  a ^= a >>> 13;\n  a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);\n  return (a ^ a >>> 15) >>> 0;\n}\n\n// \n/* eslint-disable no-bitwise */\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nvar charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nvar getAlphabeticChar = function getAlphabeticChar(code) {\n  return String.fromCharCode(code + (code > 25 ? 39 : 97));\n};\n\n/* input a number, usually a hash and convert it to base-52 */\nfunction generateAlphabeticName(code) {\n  var name = '';\n  var x = void 0;\n\n  /* get a char and divide by alphabet-length */\n  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return getAlphabeticChar(x % charsLength) + name;\n}\n\n// \n\nfunction hasFunctionObjectKey(obj) {\n  // eslint-disable-next-line guard-for-in, no-restricted-syntax\n  for (var key in obj) {\n    if (isFunction(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isStaticRules(rules, attrs) {\n  for (var i = 0; i < rules.length; i += 1) {\n    var rule = rules[i];\n\n    // recursive case\n    if (Array.isArray(rule) && !isStaticRules(rule, attrs)) {\n      return false;\n    } else if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  if (attrs.some(function (x) {\n    return isFunction(x) || hasFunctionObjectKey(x);\n  })) return false;\n\n  return true;\n}\n\n// \n\n/* combines hashStr (murmurhash) and nameGenerator for convenience */\nvar hasher = function hasher(str) {\n  return generateAlphabeticName(murmurhash(str));\n};\n\n/*\n ComponentStyle is all the CSS-specific stuff, not\n the React-specific stuff.\n */\n\nvar ComponentStyle = function () {\n  function ComponentStyle(rules, attrs, componentId) {\n    classCallCheck(this, ComponentStyle);\n\n    this.rules = rules;\n    this.isStatic =  true && isStaticRules(rules, attrs);\n    this.componentId = componentId;\n\n    if (!StyleSheet.master.hasId(componentId)) {\n      StyleSheet.master.deferredInject(componentId, []);\n    }\n  }\n\n  /*\n   * Flattens a rule set into valid CSS\n   * Hashes it, wraps the whole chunk in a .hash1234 {}\n   * Returns the hash to be injected on render()\n   * */\n\n\n  ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {\n    var isStatic = this.isStatic,\n        componentId = this.componentId,\n        lastClassName = this.lastClassName;\n\n    if (IS_BROWSER && isStatic && typeof lastClassName === 'string' && styleSheet.hasNameForId(componentId, lastClassName)) {\n      return lastClassName;\n    }\n\n    var flatCSS = flatten(this.rules, executionContext, styleSheet);\n    var name = hasher(this.componentId + flatCSS.join(''));\n    if (!styleSheet.hasNameForId(componentId, name)) {\n      styleSheet.inject(this.componentId, stringifyRules(flatCSS, '.' + name, undefined, componentId), name);\n    }\n\n    this.lastClassName = name;\n    return name;\n  };\n\n  ComponentStyle.generateName = function generateName(str) {\n    return hasher(str);\n  };\n\n  return ComponentStyle;\n}();\n\n// \n\nvar LIMIT = 200;\n\nvar createWarnTooManyClasses = (function (displayName) {\n  var generatedClasses = {};\n  var warningSeen = false;\n\n  return function (className) {\n    if (!warningSeen) {\n      generatedClasses[className] = true;\n      if (Object.keys(generatedClasses).length >= LIMIT) {\n        // Unable to find latestRule in test environment.\n        /* eslint-disable no-console, prefer-template */\n        console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. \\n' + 'Consider using the attrs method, together with a style object for frequently changed styles.\\n' + 'Example:\\n' + '  const Component = styled.div.attrs(props => ({\\n' + '    style: {\\n' + '      background: props.background,\\n' + '    },\\n' + '  }))`width: 100%;`\\n\\n' + '  <Component />');\n        warningSeen = true;\n        generatedClasses = {};\n      }\n    }\n  };\n});\n\n// \n\nvar determineTheme = (function (props, fallbackTheme) {\n  var defaultProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  // Props should take precedence over ThemeProvider, which should take precedence over\n  // defaultProps, but React automatically puts defaultProps on props.\n\n  /* eslint-disable react/prop-types, flowtype-errors/show-errors */\n  var isDefaultTheme = defaultProps ? props.theme === defaultProps.theme : false;\n  var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme || defaultProps.theme;\n  /* eslint-enable */\n\n  return theme;\n});\n\n// \nvar escapeRegex = /[[\\].#*$><+~=|^:(),\"'`-]+/g;\nvar dashesAtEnds = /(^-|-$)/g;\n\n/**\n * TODO: Explore using CSS.escape when it becomes more available\n * in evergreen browsers.\n */\nfunction escape(str) {\n  return str\n  // Replace all possible CSS selectors\n  .replace(escapeRegex, '-')\n\n  // Remove extraneous hyphens at the start and end\n  .replace(dashesAtEnds, '');\n}\n\n// \n\nfunction isTag(target) {\n  return typeof target === 'string' && ( false ? undefined : true);\n}\n\n// \n\nfunction generateDisplayName(target) {\n  // $FlowFixMe\n  return isTag(target) ? 'styled.' + target : 'Styled(' + getComponentName(target) + ')';\n}\n\nvar _TYPE_STATICS;\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDerivedStateFromProps: true,\n  propTypes: true,\n  type: true\n};\n\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\n\nvar TYPE_STATICS = (_TYPE_STATICS = {}, _TYPE_STATICS[react_is__WEBPACK_IMPORTED_MODULE_4__[\"ForwardRef\"]] = {\n  $$typeof: true,\n  render: true\n}, _TYPE_STATICS);\n\nvar defineProperty$1 = Object.defineProperty,\n    getOwnPropertyNames = Object.getOwnPropertyNames,\n    _Object$getOwnPropert = Object.getOwnPropertySymbols,\n    getOwnPropertySymbols = _Object$getOwnPropert === undefined ? function () {\n  return [];\n} : _Object$getOwnPropert,\n    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,\n    getPrototypeOf = Object.getPrototypeOf,\n    objectPrototype = Object.prototype;\nvar arrayPrototype = Array.prototype;\n\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n\n    var inheritedComponent = getPrototypeOf(sourceComponent);\n\n    if (inheritedComponent && inheritedComponent !== objectPrototype) {\n      hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n    }\n\n    var keys = arrayPrototype.concat(getOwnPropertyNames(sourceComponent),\n    // $FlowFixMe\n    getOwnPropertySymbols(sourceComponent));\n\n    var targetStatics = TYPE_STATICS[targetComponent.$$typeof] || REACT_STATICS;\n\n    var sourceStatics = TYPE_STATICS[sourceComponent.$$typeof] || REACT_STATICS;\n\n    var i = keys.length;\n    var descriptor = void 0;\n    var key = void 0;\n\n    // eslint-disable-next-line no-plusplus\n    while (i--) {\n      key = keys[i];\n\n      if (\n      // $FlowFixMe\n      !KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) &&\n      // $FlowFixMe\n      !(targetStatics && targetStatics[key])) {\n        descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        if (descriptor) {\n          try {\n            // Avoid failures from read-only properties\n            defineProperty$1(targetComponent, key, descriptor);\n          } catch (e) {\n            /* fail silently */\n          }\n        }\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\n// \nfunction isDerivedReactComponent(fn) {\n  return !!(fn && fn.prototype && fn.prototype.isReactComponent);\n}\n\n// \n// Helper to call a given function, only once\nvar once = (function (cb) {\n  var called = false;\n\n  return function () {\n    if (!called) {\n      called = true;\n      cb.apply(undefined, arguments);\n    }\n  };\n});\n\n// \n\nvar ThemeContext = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createContext\"])();\n\nvar ThemeConsumer = ThemeContext.Consumer;\n\n/**\n * Provide a theme to an entire react component tree via context\n */\n\nvar ThemeProvider = function (_Component) {\n  inherits(ThemeProvider, _Component);\n\n  function ThemeProvider(props) {\n    classCallCheck(this, ThemeProvider);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.getContext = Object(memoize_one__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"])(_this.getContext.bind(_this));\n    _this.renderInner = _this.renderInner.bind(_this);\n    return _this;\n  }\n\n  ThemeProvider.prototype.render = function render() {\n    if (!this.props.children) return null;\n\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n      ThemeContext.Consumer,\n      null,\n      this.renderInner\n    );\n  };\n\n  ThemeProvider.prototype.renderInner = function renderInner(outerTheme) {\n    var context = this.getContext(this.props.theme, outerTheme);\n\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n      ThemeContext.Provider,\n      { value: context },\n      this.props.children\n    );\n  };\n\n  /**\n   * Get the theme from the props, supporting both (outerTheme) => {}\n   * as well as object notation\n   */\n\n\n  ThemeProvider.prototype.getTheme = function getTheme(theme, outerTheme) {\n    if (isFunction(theme)) {\n      var mergedTheme = theme(outerTheme);\n\n      if (false) {}\n\n      return mergedTheme;\n    }\n\n    if (theme === null || Array.isArray(theme) || (typeof theme === 'undefined' ? 'undefined' : _typeof(theme)) !== 'object') {\n      throw new StyledComponentsError(8);\n    }\n\n    return _extends({}, outerTheme, theme);\n  };\n\n  ThemeProvider.prototype.getContext = function getContext(theme, outerTheme) {\n    return this.getTheme(theme, outerTheme);\n  };\n\n  return ThemeProvider;\n}(react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"]);\n\n// \n\nvar CLOSING_TAG_R = /^\\s*<\\/[a-z]/i;\n\nvar ServerStyleSheet = function () {\n  function ServerStyleSheet() {\n    classCallCheck(this, ServerStyleSheet);\n\n    /* The master sheet might be reset, so keep a reference here */\n    this.masterSheet = StyleSheet.master;\n    this.instance = this.masterSheet.clone();\n    this.sealed = false;\n  }\n\n  /**\n   * Mark the ServerStyleSheet as being fully emitted and manually GC it from the\n   * StyleSheet singleton.\n   */\n\n\n  ServerStyleSheet.prototype.seal = function seal() {\n    if (!this.sealed) {\n      /* Remove sealed StyleSheets from the master sheet */\n      var index = this.masterSheet.clones.indexOf(this.instance);\n      this.masterSheet.clones.splice(index, 1);\n      this.sealed = true;\n    }\n  };\n\n  ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {\n    if (this.sealed) {\n      throw new StyledComponentsError(2);\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n      StyleSheetManager,\n      { sheet: this.instance },\n      children\n    );\n  };\n\n  ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {\n    this.seal();\n    return this.instance.toHTML();\n  };\n\n  ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {\n    this.seal();\n    return this.instance.toReactElements();\n  };\n\n  ServerStyleSheet.prototype.interleaveWithNodeStream = function interleaveWithNodeStream(readableStream) {\n    var _this = this;\n\n    {\n      throw new StyledComponentsError(3);\n    }\n\n    /* the tag index keeps track of which tags have already been emitted */\n    var instance = this.instance;\n\n    var instanceTagIndex = 0;\n\n    var streamAttr = SC_STREAM_ATTR + '=\"true\"';\n\n    var transformer = new stream.Transform({\n      transform: function appendStyleChunks(chunk, /* encoding */_, callback) {\n        var tags = instance.tags;\n\n        var html = '';\n\n        /* retrieve html for each new style tag */\n        for (; instanceTagIndex < tags.length; instanceTagIndex += 1) {\n          var tag = tags[instanceTagIndex];\n          html += tag.toHTML(streamAttr);\n        }\n\n        /* force our StyleSheets to emit entirely new tags */\n        instance.sealAllTags();\n\n        var renderedHtml = chunk.toString();\n\n        /* prepend style html to chunk, unless the start of the chunk is a closing tag in which case append right after that */\n        if (CLOSING_TAG_R.test(renderedHtml)) {\n          var endOfClosingTag = renderedHtml.indexOf('>');\n\n          this.push(renderedHtml.slice(0, endOfClosingTag + 1) + html + renderedHtml.slice(endOfClosingTag + 1));\n        } else this.push(html + renderedHtml);\n\n        callback();\n      }\n    });\n\n    readableStream.on('end', function () {\n      return _this.seal();\n    });\n\n    readableStream.on('error', function (err) {\n      _this.seal();\n\n      // forward the error to the transform stream\n      transformer.emit('error', err);\n    });\n\n    return readableStream.pipe(transformer);\n  };\n\n  return ServerStyleSheet;\n}();\n\n// \n\nvar StyleSheetContext = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createContext\"])();\nvar StyleSheetConsumer = StyleSheetContext.Consumer;\n\nvar StyleSheetManager = function (_Component) {\n  inherits(StyleSheetManager, _Component);\n\n  function StyleSheetManager(props) {\n    classCallCheck(this, StyleSheetManager);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.getContext = Object(memoize_one__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"])(_this.getContext);\n    return _this;\n  }\n\n  StyleSheetManager.prototype.getContext = function getContext(sheet, target) {\n    if (sheet) {\n      return sheet;\n    } else if (target) {\n      return new StyleSheet(target);\n    } else {\n      throw new StyledComponentsError(4);\n    }\n  };\n\n  StyleSheetManager.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        sheet = _props.sheet,\n        target = _props.target;\n\n\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n      StyleSheetContext.Provider,\n      { value: this.getContext(sheet, target) },\n       false ? undefined : children\n    );\n  };\n\n  return StyleSheetManager;\n}(react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"]);\n false ? undefined : void 0;\n\n// \n\nvar identifiers = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(_ComponentStyle, _displayName, parentComponentId) {\n  var displayName = typeof _displayName !== 'string' ? 'sc' : escape(_displayName);\n\n  /**\n   * This ensures uniqueness if two components happen to share\n   * the same displayName.\n   */\n  var nr = (identifiers[displayName] || 0) + 1;\n  identifiers[displayName] = nr;\n\n  var componentId = displayName + '-' + _ComponentStyle.generateName(displayName + nr);\n\n  return parentComponentId ? parentComponentId + '-' + componentId : componentId;\n}\n\n// $FlowFixMe\n\nvar StyledComponent = function (_Component) {\n  inherits(StyledComponent, _Component);\n\n  function StyledComponent() {\n    classCallCheck(this, StyledComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this));\n\n    _this.attrs = {};\n\n    _this.renderOuter = _this.renderOuter.bind(_this);\n    _this.renderInner = _this.renderInner.bind(_this);\n\n    if (false) {}\n    return _this;\n  }\n\n  StyledComponent.prototype.render = function render() {\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n      StyleSheetConsumer,\n      null,\n      this.renderOuter\n    );\n  };\n\n  StyledComponent.prototype.renderOuter = function renderOuter() {\n    var styleSheet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : StyleSheet.master;\n\n    this.styleSheet = styleSheet;\n\n    // No need to subscribe a static component to theme changes, it won't change anything\n    if (this.props.forwardedComponent.componentStyle.isStatic) return this.renderInner();\n\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n      ThemeConsumer,\n      null,\n      this.renderInner\n    );\n  };\n\n  StyledComponent.prototype.renderInner = function renderInner(theme) {\n    var _props$forwardedCompo = this.props.forwardedComponent,\n        componentStyle = _props$forwardedCompo.componentStyle,\n        defaultProps = _props$forwardedCompo.defaultProps,\n        displayName = _props$forwardedCompo.displayName,\n        foldedComponentIds = _props$forwardedCompo.foldedComponentIds,\n        styledComponentId = _props$forwardedCompo.styledComponentId,\n        target = _props$forwardedCompo.target;\n\n\n    var generatedClassName = void 0;\n    if (componentStyle.isStatic) {\n      generatedClassName = this.generateAndInjectStyles(EMPTY_OBJECT, this.props);\n    } else {\n      generatedClassName = this.generateAndInjectStyles(determineTheme(this.props, theme, defaultProps) || EMPTY_OBJECT, this.props);\n    }\n\n    var elementToBeCreated = this.props.as || this.attrs.as || target;\n    var isTargetTag = isTag(elementToBeCreated);\n\n    var propsForElement = {};\n    var computedProps = _extends({}, this.props, this.attrs);\n\n    var key = void 0;\n    // eslint-disable-next-line guard-for-in\n    for (key in computedProps) {\n      if (false) {}\n\n      if (key === 'forwardedComponent' || key === 'as') {\n        continue;\n      } else if (key === 'forwardedRef') propsForElement.ref = computedProps[key];else if (key === 'forwardedAs') propsForElement.as = computedProps[key];else if (!isTargetTag || Object(_emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"])(key)) {\n        // Don't pass through non HTML tags through to HTML elements\n        propsForElement[key] = computedProps[key];\n      }\n    }\n\n    if (this.props.style && this.attrs.style) {\n      propsForElement.style = _extends({}, this.attrs.style, this.props.style);\n    }\n\n    propsForElement.className = Array.prototype.concat(foldedComponentIds, styledComponentId, generatedClassName !== styledComponentId ? generatedClassName : null, this.props.className, this.attrs.className).filter(Boolean).join(' ');\n\n    return Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(elementToBeCreated, propsForElement);\n  };\n\n  StyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props, attrs) {\n    var _this2 = this;\n\n    var context = _extends({}, props, { theme: theme });\n\n    if (!attrs.length) return context;\n\n    this.attrs = {};\n\n    attrs.forEach(function (attrDef) {\n      var resolvedAttrDef = attrDef;\n      var attrDefWasFn = false;\n      var attr = void 0;\n      var key = void 0;\n\n      if (isFunction(resolvedAttrDef)) {\n        // $FlowFixMe\n        resolvedAttrDef = resolvedAttrDef(context);\n        attrDefWasFn = true;\n      }\n\n      /* eslint-disable guard-for-in */\n      // $FlowFixMe\n      for (key in resolvedAttrDef) {\n        attr = resolvedAttrDef[key];\n\n        if (!attrDefWasFn) {\n          if (isFunction(attr) && !isDerivedReactComponent(attr) && !isStyledComponent(attr)) {\n            if (false) {}\n\n            attr = attr(context);\n\n            if (false) {}\n          }\n        }\n\n        _this2.attrs[key] = attr;\n        context[key] = attr;\n      }\n      /* eslint-enable */\n    });\n\n    return context;\n  };\n\n  StyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {\n    var _props$forwardedCompo2 = props.forwardedComponent,\n        attrs = _props$forwardedCompo2.attrs,\n        componentStyle = _props$forwardedCompo2.componentStyle,\n        warnTooManyClasses = _props$forwardedCompo2.warnTooManyClasses;\n\n    // statically styled-components don't need to build an execution context object,\n    // and shouldn't be increasing the number of class names\n\n    if (componentStyle.isStatic && !attrs.length) {\n      return componentStyle.generateAndInjectStyles(EMPTY_OBJECT, this.styleSheet);\n    }\n\n    var className = componentStyle.generateAndInjectStyles(this.buildExecutionContext(theme, props, attrs), this.styleSheet);\n\n    if (false) {}\n\n    return className;\n  };\n\n  return StyledComponent;\n}(react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"]);\n\nfunction createStyledComponent(target, options, rules) {\n  var isTargetStyledComp = isStyledComponent(target);\n  var isClass = !isTag(target);\n\n  var _options$displayName = options.displayName,\n      displayName = _options$displayName === undefined ? generateDisplayName(target) : _options$displayName,\n      _options$componentId = options.componentId,\n      componentId = _options$componentId === undefined ? generateId(ComponentStyle, options.displayName, options.parentComponentId) : _options$componentId,\n      _options$ParentCompon = options.ParentComponent,\n      ParentComponent = _options$ParentCompon === undefined ? StyledComponent : _options$ParentCompon,\n      _options$attrs = options.attrs,\n      attrs = _options$attrs === undefined ? EMPTY_ARRAY : _options$attrs;\n\n\n  var styledComponentId = options.displayName && options.componentId ? escape(options.displayName) + '-' + options.componentId : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  var finalAttrs =\n  // $FlowFixMe\n  isTargetStyledComp && target.attrs ? Array.prototype.concat(target.attrs, attrs).filter(Boolean) : attrs;\n\n  var componentStyle = new ComponentStyle(isTargetStyledComp ? // fold the underlying StyledComponent rules up (implicit extend)\n  // $FlowFixMe\n  target.componentStyle.rules.concat(rules) : rules, finalAttrs, styledComponentId);\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  var WrappedStyledComponent = void 0;\n  var forwardRef = function forwardRef(props, ref) {\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(ParentComponent, _extends({}, props, { forwardedComponent: WrappedStyledComponent, forwardedRef: ref }));\n  };\n  forwardRef.displayName = displayName;\n  WrappedStyledComponent = react__WEBPACK_IMPORTED_MODULE_2___default.a.forwardRef(forwardRef);\n  WrappedStyledComponent.displayName = displayName;\n\n  // $FlowFixMe\n  WrappedStyledComponent.attrs = finalAttrs;\n  // $FlowFixMe\n  WrappedStyledComponent.componentStyle = componentStyle;\n\n  // $FlowFixMe\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp ? // $FlowFixMe\n  Array.prototype.concat(target.foldedComponentIds, target.styledComponentId) : EMPTY_ARRAY;\n\n  // $FlowFixMe\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  // $FlowFixMe\n  WrappedStyledComponent.target = isTargetStyledComp ? target.target : target;\n\n  // $FlowFixMe\n  WrappedStyledComponent.withComponent = function withComponent(tag) {\n    var previousComponentId = options.componentId,\n        optionsToCopy = objectWithoutProperties(options, ['componentId']);\n\n\n    var newComponentId = previousComponentId && previousComponentId + '-' + (isTag(tag) ? tag : escape(getComponentName(tag)));\n\n    var newOptions = _extends({}, optionsToCopy, {\n      attrs: finalAttrs,\n      componentId: newComponentId,\n      ParentComponent: ParentComponent\n    });\n\n    return createStyledComponent(tag, newOptions, rules);\n  };\n\n  // $FlowFixMe\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get: function get$$1() {\n      return this._foldedDefaultProps;\n    },\n    set: function set$$1(obj) {\n      // $FlowFixMe\n      this._foldedDefaultProps = isTargetStyledComp ? Object(merge_anything__WEBPACK_IMPORTED_MODULE_8__[/* default */ \"a\"])(target.defaultProps, obj) : obj;\n    }\n  });\n\n  if (false) {}\n\n  // $FlowFixMe\n  WrappedStyledComponent.toString = function () {\n    return '.' + WrappedStyledComponent.styledComponentId;\n  };\n\n  if (isClass) {\n    hoistNonReactStatics(WrappedStyledComponent, target, {\n      // all SC-specific things should not be hoisted\n      attrs: true,\n      componentStyle: true,\n      displayName: true,\n      foldedComponentIds: true,\n      styledComponentId: true,\n      target: true,\n      withComponent: true\n    });\n  }\n\n  return WrappedStyledComponent;\n}\n\n// \n// Thanks to ReactDOMFactories for this handy list!\n\nvar domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',\n\n// SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'marker', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\n// \n\nvar styled = function styled(tag) {\n  return constructWithOptions(createStyledComponent, tag);\n};\n\n// Shorthands for all valid HTML Elements\ndomElements.forEach(function (domElement) {\n  styled[domElement] = styled(domElement);\n});\n\n// \n\nvar GlobalStyle = function () {\n  function GlobalStyle(rules, componentId) {\n    classCallCheck(this, GlobalStyle);\n\n    this.rules = rules;\n    this.componentId = componentId;\n    this.isStatic = isStaticRules(rules, EMPTY_ARRAY);\n\n    if (!StyleSheet.master.hasId(componentId)) {\n      StyleSheet.master.deferredInject(componentId, []);\n    }\n  }\n\n  GlobalStyle.prototype.createStyles = function createStyles(executionContext, styleSheet) {\n    var flatCSS = flatten(this.rules, executionContext, styleSheet);\n    var css = stringifyRules(flatCSS, '');\n\n    styleSheet.inject(this.componentId, css);\n  };\n\n  GlobalStyle.prototype.removeStyles = function removeStyles(styleSheet) {\n    var componentId = this.componentId;\n\n    if (styleSheet.hasId(componentId)) {\n      styleSheet.remove(componentId);\n    }\n  };\n\n  // TODO: overwrite in-place instead of remove+create?\n\n\n  GlobalStyle.prototype.renderStyles = function renderStyles(executionContext, styleSheet) {\n    this.removeStyles(styleSheet);\n    this.createStyles(executionContext, styleSheet);\n  };\n\n  return GlobalStyle;\n}();\n\n// \n\n// place our cache into shared context so it'll persist between HMRs\nif (IS_BROWSER) {\n  window.scCGSHMRCache = {};\n}\n\nfunction createGlobalStyle(strings) {\n  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    interpolations[_key - 1] = arguments[_key];\n  }\n\n  var rules = css.apply(undefined, [strings].concat(interpolations));\n  var id = 'sc-global-' + murmurhash(JSON.stringify(rules));\n  var style = new GlobalStyle(rules, id);\n\n  var GlobalStyleComponent = function (_React$Component) {\n    inherits(GlobalStyleComponent, _React$Component);\n\n    function GlobalStyleComponent(props) {\n      classCallCheck(this, GlobalStyleComponent);\n\n      var _this = possibleConstructorReturn(this, _React$Component.call(this, props));\n\n      var _this$constructor = _this.constructor,\n          globalStyle = _this$constructor.globalStyle,\n          styledComponentId = _this$constructor.styledComponentId;\n\n\n      if (IS_BROWSER) {\n        window.scCGSHMRCache[styledComponentId] = (window.scCGSHMRCache[styledComponentId] || 0) + 1;\n      }\n\n      /**\n       * This fixes HMR compatibility. Don't ask me why, but this combination of\n       * caching the closure variables via statics and then persisting the statics in\n       * state works across HMR where no other combination did. ¯\\_(ツ)_/¯\n       */\n      _this.state = {\n        globalStyle: globalStyle,\n        styledComponentId: styledComponentId\n      };\n      return _this;\n    }\n\n    GlobalStyleComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (window.scCGSHMRCache[this.state.styledComponentId]) {\n        window.scCGSHMRCache[this.state.styledComponentId] -= 1;\n      }\n      /**\n       * Depending on the order \"render\" is called this can cause the styles to be lost\n       * until the next render pass of the remaining instance, which may\n       * not be immediate.\n       */\n      if (window.scCGSHMRCache[this.state.styledComponentId] === 0) {\n        this.state.globalStyle.removeStyles(this.styleSheet);\n      }\n    };\n\n    GlobalStyleComponent.prototype.render = function render() {\n      var _this2 = this;\n\n      if (false) {}\n\n      return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n        StyleSheetConsumer,\n        null,\n        function (styleSheet) {\n          _this2.styleSheet = styleSheet || StyleSheet.master;\n\n          var globalStyle = _this2.state.globalStyle;\n\n\n          if (globalStyle.isStatic) {\n            globalStyle.renderStyles(STATIC_EXECUTION_CONTEXT, _this2.styleSheet);\n\n            return null;\n          } else {\n            return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n              ThemeConsumer,\n              null,\n              function (theme) {\n                // $FlowFixMe\n                var defaultProps = _this2.constructor.defaultProps;\n\n\n                var context = _extends({}, _this2.props);\n\n                if (typeof theme !== 'undefined') {\n                  context.theme = determineTheme(_this2.props, theme, defaultProps);\n                }\n\n                globalStyle.renderStyles(context, _this2.styleSheet);\n\n                return null;\n              }\n            );\n          }\n        }\n      );\n    };\n\n    return GlobalStyleComponent;\n  }(react__WEBPACK_IMPORTED_MODULE_2___default.a.Component);\n\n  GlobalStyleComponent.globalStyle = style;\n  GlobalStyleComponent.styledComponentId = id;\n\n\n  return GlobalStyleComponent;\n}\n\n// \n\nvar replaceWhitespace = function replaceWhitespace(str) {\n  return str.replace(/\\s|\\\\n/g, '');\n};\n\nfunction keyframes(strings) {\n  /* Warning if you've used keyframes on React Native */\n  if (false) {}\n\n  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    interpolations[_key - 1] = arguments[_key];\n  }\n\n  var rules = css.apply(undefined, [strings].concat(interpolations));\n\n  var name = generateAlphabeticName(murmurhash(replaceWhitespace(JSON.stringify(rules))));\n\n  return new Keyframes(name, stringifyRules(rules, name, '@keyframes'));\n}\n\n// \n\nvar withTheme = (function (Component$$1) {\n  var WithTheme = react__WEBPACK_IMPORTED_MODULE_2___default.a.forwardRef(function (props, ref) {\n    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\n      ThemeConsumer,\n      null,\n      function (theme) {\n        // $FlowFixMe\n        var defaultProps = Component$$1.defaultProps;\n\n        var themeProp = determineTheme(props, theme, defaultProps);\n\n        if (false) {}\n\n        return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(Component$$1, _extends({}, props, { theme: themeProp, ref: ref }));\n      }\n    );\n  });\n\n  hoistNonReactStatics(WithTheme, Component$$1);\n\n  WithTheme.displayName = 'WithTheme(' + getComponentName(Component$$1) + ')';\n\n  return WithTheme;\n});\n\n// \n\n/* eslint-disable */\nvar __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS = {\n  StyleSheet: StyleSheet\n};\n\n// \n\n/* Warning if you've imported this file on React Native */\nif (false) {}\n\n/* Warning if there are several instances of styled-components */\nif (false) {}\n\n//\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (styled);\n\n//# sourceMappingURL=styled-components.browser.esm.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(69)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CANCEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return CHANNEL_END_TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return IO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return MATCH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return MULTICAST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return SAGA_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return SAGA_LOCATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return SELF_CANCELLATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return TASK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return TASK_CANCEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return TERMINATE; });\nvar createSymbol = function createSymbol(name) {\n  return "@@redux-saga/" + name;\n};\n\nvar CANCEL =\n/*#__PURE__*/\ncreateSymbol(\'CANCEL_PROMISE\');\nvar CHANNEL_END_TYPE =\n/*#__PURE__*/\ncreateSymbol(\'CHANNEL_END\');\nvar IO =\n/*#__PURE__*/\ncreateSymbol(\'IO\');\nvar MATCH =\n/*#__PURE__*/\ncreateSymbol(\'MATCH\');\nvar MULTICAST =\n/*#__PURE__*/\ncreateSymbol(\'MULTICAST\');\nvar SAGA_ACTION =\n/*#__PURE__*/\ncreateSymbol(\'SAGA_ACTION\');\nvar SELF_CANCELLATION =\n/*#__PURE__*/\ncreateSymbol(\'SELF_CANCELLATION\');\nvar TASK =\n/*#__PURE__*/\ncreateSymbol(\'TASK\');\nvar TASK_CANCEL =\n/*#__PURE__*/\ncreateSymbol(\'TASK_CANCEL\');\nvar TERMINATE =\n/*#__PURE__*/\ncreateSymbol(\'TERMINATE\');\nvar SAGA_LOCATION =\n/*#__PURE__*/\ncreateSymbol(\'LOCATION\');\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlZHV4LXNhZ2Evc3ltYm9scy9kaXN0L3JlZHV4LXNhZ2Etc3ltYm9scy5lc20uanM/ZjE4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUkiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBjcmVhdGVTeW1ib2wgPSBmdW5jdGlvbiBjcmVhdGVTeW1ib2wobmFtZSkge1xuICByZXR1cm4gXCJAQHJlZHV4LXNhZ2EvXCIgKyBuYW1lO1xufTtcblxudmFyIENBTkNFTCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ0NBTkNFTF9QUk9NSVNFJyk7XG52YXIgQ0hBTk5FTF9FTkRfVFlQRSA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ0NIQU5ORUxfRU5EJyk7XG52YXIgSU8gPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdJTycpO1xudmFyIE1BVENIID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZVN5bWJvbCgnTUFUQ0gnKTtcbnZhciBNVUxUSUNBU1QgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdNVUxUSUNBU1QnKTtcbnZhciBTQUdBX0FDVElPTiA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ1NBR0FfQUNUSU9OJyk7XG52YXIgU0VMRl9DQU5DRUxMQVRJT04gPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdTRUxGX0NBTkNFTExBVElPTicpO1xudmFyIFRBU0sgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdUQVNLJyk7XG52YXIgVEFTS19DQU5DRUwgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdUQVNLX0NBTkNFTCcpO1xudmFyIFRFUk1JTkFURSA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ1RFUk1JTkFURScpO1xudmFyIFNBR0FfTE9DQVRJT04gPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdMT0NBVElPTicpO1xuXG5leHBvcnQgeyBDQU5DRUwsIENIQU5ORUxfRU5EX1RZUEUsIElPLCBNQVRDSCwgTVVMVElDQVNULCBTQUdBX0FDVElPTiwgU0FHQV9MT0NBVElPTiwgU0VMRl9DQU5DRUxMQVRJT04sIFRBU0ssIFRBU0tfQ0FOQ0VMLCBURVJNSU5BVEUgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ io_6de156f3["l" /* N */]; });\n__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ io_6de156f3["s" /* U */]; });\n__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ io_6de156f3["j" /* L */]; });\n__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ io_6de156f3["u" /* Y */]; });\n__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ io_6de156f3["t" /* V */]; });\n__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ io_6de156f3["w" /* a3 */]; });\n__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ io_6de156f3["i" /* K */]; });\n__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ takeEvery$1; });\n__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ takeLatest$1; });\n\n// UNUSED EXPORTS: actionChannel, all, apply, cancel, cancelled, cps, effectTypes, flush, getContext, join, putResolve, setContext, spawn, takeMaybe, debounce, retry, takeLeading, throttle\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js\nvar redux_saga_symbols_esm = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/is/dist/redux-saga-is.esm.js\nvar redux_saga_is_esm = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/core/dist/io-6de156f3.js\nvar io_6de156f3 = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js\nvar redux_saga_delay_p_esm = __webpack_require__(35);\n\n// CONCATENATED MODULE: ./node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js\n\n\n\n\n\n\n\nvar done = function done(value) {\n  return {\n    done: true,\n    value: value\n  };\n};\n\nvar qEnd = {};\nfunction safeName(patternOrChannel) {\n  if (Object(redux_saga_is_esm["b" /* channel */])(patternOrChannel)) {\n    return \'channel\';\n  }\n\n  if (Object(redux_saga_is_esm["l" /* stringableFunc */])(patternOrChannel)) {\n    return String(patternOrChannel);\n  }\n\n  if (Object(redux_saga_is_esm["d" /* func */])(patternOrChannel)) {\n    return patternOrChannel.name;\n  }\n\n  return String(patternOrChannel);\n}\nfunction fsmIterator(fsm, startState, name) {\n  var stateUpdater,\n      errorState,\n      effect,\n      nextState = startState;\n\n  function next(arg, error) {\n    if (nextState === qEnd) {\n      return done(arg);\n    }\n\n    if (error && !errorState) {\n      nextState = qEnd;\n      throw error;\n    } else {\n      stateUpdater && stateUpdater(arg);\n      var currentState = error ? fsm[errorState](error) : fsm[nextState]();\n      nextState = currentState.nextState;\n      effect = currentState.effect;\n      stateUpdater = currentState.stateUpdater;\n      errorState = currentState.errorState;\n      return nextState === qEnd ? done(arg) : effect;\n    }\n  }\n\n  return Object(io_6de156f3["M" /* q */])(next, function (error) {\n    return next(null, error);\n  }, name);\n}\n\nfunction takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q1\',\n        effect: yFork(action)\n      };\n    }\n  }, \'q1\', "takeEvery(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nfunction takeLatest(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yCancel = function yCancel(task) {\n    return {\n      done: false,\n      value: Object(io_6de156f3["k" /* M */])(task)\n    };\n  };\n\n  var task, action;\n\n  var setTask = function setTask(t) {\n    return task = t;\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return task ? {\n        nextState: \'q3\',\n        effect: yCancel(task)\n      } : {\n        nextState: \'q1\',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: \'q1\',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    }\n  }, \'q1\', "takeLatest(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nfunction takeLeading(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n\n  var yCall = function yCall(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["l" /* N */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action;\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q1\',\n        effect: yCall(action)\n      };\n    }\n  }, \'q1\', "takeLeading(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nfunction throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, channel;\n  var yActionChannel = {\n    done: false,\n    value: Object(io_6de156f3["m" /* O */])(pattern, Object(io_6de156f3["o" /* Q */])(1))\n  };\n\n  var yTake = function yTake() {\n    return {\n      done: false,\n      value: Object(io_6de156f3["i" /* K */])(channel)\n    };\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yDelay = {\n    done: false,\n    value: Object(io_6de156f3["s" /* U */])(delayLength)\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yActionChannel,\n        stateUpdater: setChannel\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q3\',\n        effect: yTake(),\n        stateUpdater: setAction\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: \'q4\',\n        effect: yFork(action)\n      };\n    },\n    q4: function q4() {\n      return {\n        nextState: \'q2\',\n        effect: yDelay\n      };\n    }\n  }, \'q1\', "throttle(" + safeName(pattern) + ", " + worker.name + ")");\n}\n\nfunction retry(maxTries, delayLength, fn) {\n  var counter = maxTries;\n\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var yCall = {\n    done: false,\n    value: io_6de156f3["l" /* N */].apply(void 0, [fn].concat(args))\n  };\n  var yDelay = {\n    done: false,\n    value: Object(io_6de156f3["s" /* U */])(delayLength)\n  };\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yCall,\n        errorState: \'q10\'\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: qEnd\n      };\n    },\n    q10: function q10(error) {\n      counter -= 1;\n\n      if (counter <= 0) {\n        throw error;\n      }\n\n      return {\n        nextState: \'q1\',\n        effect: yDelay\n      };\n    }\n  }, \'q1\', "retry(" + fn.name + ")");\n}\n\nfunction debounceHelper(delayLength, patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, raceOutput;\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n  var yRace = {\n    done: false,\n    value: Object(io_6de156f3["t" /* V */])({\n      action: Object(io_6de156f3["i" /* K */])(patternOrChannel),\n      debounce: Object(io_6de156f3["s" /* U */])(delayLength)\n    })\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yNoop = function yNoop(value) {\n    return {\n      done: false,\n      value: value\n    };\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setRaceOutput = function setRaceOutput(ro) {\n    return raceOutput = ro;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q3\',\n        effect: yRace,\n        stateUpdater: setRaceOutput\n      };\n    },\n    q3: function q3() {\n      return raceOutput.debounce ? {\n        nextState: \'q1\',\n        effect: yFork(action)\n      } : {\n        nextState: \'q2\',\n        effect: yNoop(raceOutput.action),\n        stateUpdater: setAction\n      };\n    }\n  }, \'q1\', "debounce(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nvar redux_saga_effects_esm_validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {\n  Object(io_6de156f3["y" /* c */])(patternOrChannel, redux_saga_is_esm["g" /* notUndef */], fn.name + " requires a pattern or channel");\n  Object(io_6de156f3["y" /* c */])(worker, redux_saga_is_esm["g" /* notUndef */], fn.name + " requires a saga parameter");\n};\n\nfunction takeEvery$1(patternOrChannel, worker) {\n  if (false) {}\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));\n}\nfunction takeLatest$1(patternOrChannel, worker) {\n  if (false) {}\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));\n}\nfunction takeLeading$1(patternOrChannel, worker) {\n  if (false) {}\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));\n}\nfunction throttle$1(ms, pattern, worker) {\n  if (false) {}\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n    args[_key4 - 3] = arguments[_key4];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [throttle, ms, pattern, worker].concat(args));\n}\nfunction retry$1(maxTries, delayLength, worker) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n    args[_key5 - 3] = arguments[_key5];\n  }\n\n  return io_6de156f3["l" /* N */].apply(void 0, [retry, maxTries, delayLength, worker].concat(args));\n}\nfunction debounce(delayLength, pattern, worker) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n    args[_key6 - 3] = arguments[_key6];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));\n}\n\n\n\n// CONCATENATED MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ components_Provider; });\n__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ connect_connect; });\n\n// UNUSED EXPORTS: createProvider, connectAdvanced\n\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(2);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/PropTypes.js\n\nvar subscriptionShape = prop_types_default.a.shape({\n  trySubscribe: prop_types_default.a.func.isRequired,\n  tryUnsubscribe: prop_types_default.a.func.isRequired,\n  notifyNestedSubs: prop_types_default.a.func.isRequired,\n  isSubscribed: prop_types_default.a.func.isRequired\n});\nvar storeShape = prop_types_default.a.shape({\n  subscribe: prop_types_default.a.func.isRequired,\n  dispatch: prop_types_default.a.func.isRequired,\n  getState: prop_types_default.a.func.isRequired\n});\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/warning.js\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== \'undefined\' && typeof console.error === \'function\') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // "break on all exceptions" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Provider.js\n\n\n\n\n\nvar prefixUnsafeLifecycleMethods = typeof external_this_React_default.a.forwardRef !== "undefined";\nvar didWarnAboutReceivingStore = false;\n\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n\n  didWarnAboutReceivingStore = true;\n  warning(\'<Provider> does not support changing `store` on the fly. \' + \'It is most likely that you see this error because you updated to \' + \'Redux 2.x and React Redux 2.x which no longer hot reload reducers \' + \'automatically. See https://github.com/reduxjs/react-redux/releases/\' + \'tag/v2.0.0 for the migration instructions.\');\n}\n\nfunction createProvider(storeKey) {\n  var _Provider$childContex;\n\n  if (storeKey === void 0) {\n    storeKey = \'store\';\n  }\n\n  var subscriptionKey = storeKey + "Subscription";\n\n  var Provider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;\n    };\n\n    function Provider(props, context) {\n      var _this;\n\n      _this = _Component.call(this, props, context) || this;\n      _this[storeKey] = props.store;\n      return _this;\n    }\n\n    _proto.render = function render() {\n      return external_this_React_["Children"].only(this.props.children);\n    };\n\n    return Provider;\n  }(external_this_React_["Component"]);\n\n  if (false) { var eventName; }\n\n  Provider.propTypes = {\n    store: storeShape.isRequired,\n    children: prop_types_default.a.element.isRequired\n  };\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = storeShape.isRequired, _Provider$childContex[subscriptionKey] = subscriptionShape, _Provider$childContex);\n  return Provider;\n}\n/* harmony default export */ var components_Provider = (createProvider());\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(25);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(38);\nvar hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);\n\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(15);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/react-is/index.js\nvar react_is = __webpack_require__(21);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/Subscription.js\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux\'s createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(store, parentSub, onStateChange) {\n    this.store = store;\n    this.parentSub = parentSub;\n    this.onStateChange = onStateChange;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  _proto.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  _proto.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  _proto.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  _proto.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/components/connectAdvanced.js\n\n\n\n\n\n\n\n\n\n\nvar connectAdvanced_prefixUnsafeLifecycleMethods = typeof external_this_React_default.a.forwardRef !== "undefined";\nvar hotReloadingVersion = 0;\nvar dummyState = {};\n\nfunction noop() {}\n\nfunction makeSelectorStateful(sourceSelector, store) {\n  // wrap the selector in an object that tracks its results between runs.\n  var selector = {\n    run: function runComponentSelector(props) {\n      try {\n        var nextProps = sourceSelector(store.getState(), props);\n\n        if (nextProps !== selector.props || selector.error) {\n          selector.shouldComponentUpdate = true;\n          selector.props = nextProps;\n          selector.error = null;\n        }\n      } catch (error) {\n        selector.shouldComponentUpdate = true;\n        selector.error = error;\n      }\n    }\n  };\n  return selector;\n}\n\nfunction connectAdvanced(\n/*\n  selectorFactory is a func that is responsible for returning the selector function used to\n  compute new props from state, props, and dispatch. For example:\n     export default connectAdvanced((dispatch, options) => (state, props) => ({\n      thing: state.things[props.thingId],\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n    }))(YourComponent)\n   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\n  selector, otherwise the Connect component will re-render on every state or props change.\n*/\nselectorFactory, // options object:\n_ref) {\n  var _contextTypes, _childContextTypes;\n\n  if (_ref === void 0) {\n    _ref = {};\n  }\n\n  var _ref2 = _ref,\n      _ref2$getDisplayName = _ref2.getDisplayName,\n      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {\n    return "ConnectAdvanced(" + name + ")";\n  } : _ref2$getDisplayName,\n      _ref2$methodName = _ref2.methodName,\n      methodName = _ref2$methodName === void 0 ? \'connectAdvanced\' : _ref2$methodName,\n      _ref2$renderCountProp = _ref2.renderCountProp,\n      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,\n      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,\n      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,\n      _ref2$storeKey = _ref2.storeKey,\n      storeKey = _ref2$storeKey === void 0 ? \'store\' : _ref2$storeKey,\n      _ref2$withRef = _ref2.withRef,\n      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,\n      connectOptions = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef"]);\n\n  var subscriptionKey = storeKey + \'Subscription\';\n  var version = hotReloadingVersion++;\n  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = storeShape, _contextTypes[subscriptionKey] = subscriptionShape, _contextTypes);\n  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = subscriptionShape, _childContextTypes);\n  return function wrapWithConnect(WrappedComponent) {\n    browser_default()(Object(react_is["isValidElementType"])(WrappedComponent), "You must pass a component to the function returned by " + (methodName + ". Instead received " + JSON.stringify(WrappedComponent)));\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \'Component\';\n    var displayName = getDisplayName(wrappedComponentName);\n\n    var selectorFactoryOptions = Object(esm_extends["a" /* default */])({}, connectOptions, {\n      getDisplayName: getDisplayName,\n      methodName: methodName,\n      renderCountProp: renderCountProp,\n      shouldHandleStateChanges: shouldHandleStateChanges,\n      storeKey: storeKey,\n      withRef: withRef,\n      displayName: displayName,\n      wrappedComponentName: wrappedComponentName,\n      WrappedComponent: WrappedComponent // TODO Actually fix our use of componentWillReceiveProps\n\n      /* eslint-disable react/no-deprecated */\n\n    });\n\n    var Connect =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(Connect, _Component);\n\n      function Connect(props, context) {\n        var _this;\n\n        _this = _Component.call(this, props, context) || this;\n        _this.version = version;\n        _this.state = {};\n        _this.renderCount = 0;\n        _this.store = props[storeKey] || context[storeKey];\n        _this.propsMode = Boolean(props[storeKey]);\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(Object(assertThisInitialized["a" /* default */])(Object(assertThisInitialized["a" /* default */])(_this)));\n        browser_default()(_this.store, "Could not find \\"" + storeKey + "\\" in either the context or props of " + ("\\"" + displayName + "\\". Either wrap the root component in a <Provider>, ") + ("or explicitly pass \\"" + storeKey + "\\" as a prop to \\"" + displayName + "\\"."));\n\n        _this.initSelector();\n\n        _this.initSubscription();\n\n        return _this;\n      }\n\n      var _proto = Connect.prototype;\n\n      _proto.getChildContext = function getChildContext() {\n        var _ref3;\n\n        // If this component received store from props, its subscription should be transparent\n        // to any descendants receiving store+subscription from context; it passes along\n        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n        // Connect to control ordering of notifications to flow top-down.\n        var subscription = this.propsMode ? null : this.subscription;\n        return _ref3 = {}, _ref3[subscriptionKey] = subscription || this.context[subscriptionKey], _ref3;\n      };\n\n      _proto.componentDidMount = function componentDidMount() {\n        if (!shouldHandleStateChanges) return; // componentWillMount fires during server side rendering, but componentDidMount and\n        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n        // To handle the case where a child component may have triggered a state change by\n        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n        // re-render.\n\n        this.subscription.trySubscribe();\n        this.selector.run(this.props);\n        if (this.selector.shouldComponentUpdate) this.forceUpdate();\n      }; // Note: this is renamed below to the UNSAFE_ version in React >=16.3.0\n\n\n      _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        this.selector.run(nextProps);\n      };\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate() {\n        return this.selector.shouldComponentUpdate;\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        if (this.subscription) this.subscription.tryUnsubscribe();\n        this.subscription = null;\n        this.notifyNestedSubs = noop;\n        this.store = null;\n        this.selector.run = noop;\n        this.selector.shouldComponentUpdate = false;\n      };\n\n      _proto.getWrappedInstance = function getWrappedInstance() {\n        browser_default()(withRef, "To access the wrapped instance, you need to specify " + ("{ withRef: true } in the options argument of the " + methodName + "() call."));\n        return this.wrappedInstance;\n      };\n\n      _proto.setWrappedInstance = function setWrappedInstance(ref) {\n        this.wrappedInstance = ref;\n      };\n\n      _proto.initSelector = function initSelector() {\n        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);\n        this.selector = makeSelectorStateful(sourceSelector, this.store);\n        this.selector.run(this.props);\n      };\n\n      _proto.initSubscription = function initSubscription() {\n        if (!shouldHandleStateChanges) return; // parentSub\'s source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn\'t use subscription from context, or vice versa.\n\n        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];\n        this.subscription = new Subscription(this.store, parentSub, this.onStateChange.bind(this)); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `this.subscription` will then be null. An\n        // extra null check every change can be avoided by copying the method onto `this` and then\n        // replacing it with a no-op on unmount. This can probably be avoided if Subscription\'s\n        // listeners logic is changed to not call listeners that have been unsubscribed in the\n        // middle of the notification loop.\n\n        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);\n      };\n\n      _proto.onStateChange = function onStateChange() {\n        this.selector.run(this.props);\n\n        if (!this.selector.shouldComponentUpdate) {\n          this.notifyNestedSubs();\n        } else {\n          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;\n          this.setState(dummyState);\n        }\n      };\n\n      _proto.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {\n        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n        // needs to notify nested subs. Once called, it unimplements itself until further state\n        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n        // a boolean check every time avoids an extra method call most of the time, resulting\n        // in some perf boost.\n        this.componentDidUpdate = undefined;\n        this.notifyNestedSubs();\n      };\n\n      _proto.isSubscribed = function isSubscribed() {\n        return Boolean(this.subscription) && this.subscription.isSubscribed();\n      };\n\n      _proto.addExtraProps = function addExtraProps(props) {\n        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props; // make a shallow copy so that fields added don\'t leak to the original selector.\n        // this is especially important for \'ref\' since that\'s a reference back to the component\n        // instance. a singleton memoized selector would then be holding a reference to the\n        // instance, preventing the instance from being garbage collected, and that would be bad\n\n        var withExtras = Object(esm_extends["a" /* default */])({}, props);\n\n        if (withRef) withExtras.ref = this.setWrappedInstance;\n        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;\n        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;\n        return withExtras;\n      };\n\n      _proto.render = function render() {\n        var selector = this.selector;\n        selector.shouldComponentUpdate = false;\n\n        if (selector.error) {\n          throw selector.error;\n        } else {\n          return Object(external_this_React_["createElement"])(WrappedComponent, this.addExtraProps(selector.props));\n        }\n      };\n\n      return Connect;\n    }(external_this_React_["Component"]);\n\n    if (connectAdvanced_prefixUnsafeLifecycleMethods) {\n      // Use UNSAFE_ event name where supported\n      Connect.prototype.UNSAFE_componentWillReceiveProps = Connect.prototype.componentWillReceiveProps;\n      delete Connect.prototype.componentWillReceiveProps;\n    }\n    /* eslint-enable react/no-deprecated */\n\n\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = displayName;\n    Connect.childContextTypes = childContextTypes;\n    Connect.contextTypes = contextTypes;\n    Connect.propTypes = contextTypes;\n\n    if (false) { var eventName; }\n\n    return hoist_non_react_statics_cjs_default()(Connect, WrappedComponent);\n  };\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/shallowEqual.js\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== \'object\' || objA === null || typeof objB !== \'object\' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(9);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/isPlainObject.js\n/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false;\n  var proto = Object.getPrototypeOf(obj);\n  if (proto === null) return true;\n  var baseProto = proto;\n\n  while (Object.getPrototypeOf(baseProto) !== null) {\n    baseProto = Object.getPrototypeOf(baseProto);\n  }\n\n  return proto === baseProto;\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/verifyPlainObject.js\n\n\nfunction verifyPlainObject(value, displayName, methodName) {\n  if (!isPlainObject(value)) {\n    warning(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");\n  }\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/wrapMapToProps.js\n\nfunction wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    var constant = getConstant(dispatch, options);\n\n    function constantSelector() {\n      return constant;\n    }\n\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n// \n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n\nfunction getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n// \n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//    \n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//    \n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//    \n\nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, _ref) {\n    var displayName = _ref.displayName;\n\n    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n    }; // allow detectFactoryAndVerify to get ownProps\n\n\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      var props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === \'function\') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (false) {}\n      return props;\n    };\n\n    return proxy;\n  };\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapDispatchToProps.js\n\n\nfunction whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === \'function\' ? wrapMapToPropsFunc(mapDispatchToProps, \'mapDispatchToProps\') : undefined;\n}\nfunction whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : undefined;\n}\nfunction whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === \'object\' ? wrapMapToPropsConstant(function (dispatch) {\n    return Object(redux["b" /* bindActionCreators */])(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\n/* harmony default export */ var connect_mapDispatchToProps = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapStateToProps.js\n\nfunction whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === \'function\' ? wrapMapToPropsFunc(mapStateToProps, \'mapStateToProps\') : undefined;\n}\nfunction whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\n/* harmony default export */ var connect_mapStateToProps = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mergeProps.js\n\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return Object(esm_extends["a" /* default */])({}, ownProps, stateProps, dispatchProps);\n}\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (false) {}\n      }\n\n      return mergedProps;\n    };\n  };\n}\nfunction whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === \'function\' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nfunction whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n/* harmony default export */ var connect_mergeProps = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/verifySubselectors.js\n\n\nfunction verify(selector, methodName, displayName) {\n  if (!selector) {\n    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");\n  } else if (methodName === \'mapStateToProps\' || methodName === \'mapDispatchToProps\') {\n    if (!selector.hasOwnProperty(\'dependsOnOwnProps\')) {\n      warning("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");\n    }\n  }\n}\n\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {\n  verify(mapStateToProps, \'mapStateToProps\', displayName);\n  verify(mapDispatchToProps, \'mapDispatchToProps\', displayName);\n  verify(mergeProps, \'mergeProps\', displayName);\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/selectorFactory.js\n\n\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n  var hasRunAtLeastOnce = false;\n  var state;\n  var ownProps;\n  var stateProps;\n  var dispatchProps;\n  var mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n} // TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced\'s shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (false) {}\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/connect.js\n\n\n\n\n\n\n\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the \'official\' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nfunction createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? connect_mapStateToProps : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? connect_mapDispatchToProps : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? connect_mergeProps : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, \'mapStateToProps\');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, \'mapDispatchToProps\');\n    var initMergeProps = match(mergeProps, mergePropsFactories, \'mergeProps\');\n    return connectHOC(selectorFactory, Object(esm_extends["a" /* default */])({\n      // used in error messages\n      methodName: \'connect\',\n      // used to compute Connect\'s displayName from the wrapped component\'s displayName.\n      getDisplayName: function getDisplayName(name) {\n        return "Connect(" + name + ")";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn\'t subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\n/* harmony default export */ var connect_connect = (createConnect());\n// CONCATENATED MODULE: ./node_modules/react-redux/es/index.js\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcz83NDhlIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9Qcm9wVHlwZXMuanM/YTc4ZCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvd2FybmluZy5qcz9kOTVmIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzPzExZjgiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcz83OWQ2Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZC5qcz9mZTMzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9zaGFsbG93RXF1YWwuanM/MWEwOCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvaXNQbGFpbk9iamVjdC5qcz81NjJjIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy92ZXJpZnlQbGFpbk9iamVjdC5qcz80Y2IyIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3dyYXBNYXBUb1Byb3BzLmpzPzI0MjUiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwRGlzcGF0Y2hUb1Byb3BzLmpzPzJmNWQiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzLmpzP2U0NTciLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWVyZ2VQcm9wcy5qcz9iZjRjIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3ZlcmlmeVN1YnNlbGVjdG9ycy5qcz8xMGZjIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3NlbGVjdG9yRmFjdG9yeS5qcz83OTA2Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L2Nvbm5lY3QuanM/M2I1MSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaW5kZXguanM/ZmNjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsQzs7Ozs7Ozs7OztBQ0ptQztBQUM1Qix3QkFBd0Isb0JBQVM7QUFDeEMsZ0JBQWdCLG9CQUFTO0FBQ3pCLGtCQUFrQixvQkFBUztBQUMzQixvQkFBb0Isb0JBQVM7QUFDN0IsZ0JBQWdCLG9CQUFTO0FBQ3pCLENBQUM7QUFDTSxpQkFBaUIsb0JBQVM7QUFDakMsYUFBYSxvQkFBUztBQUN0QixZQUFZLG9CQUFTO0FBQ3JCLFlBQVksb0JBQVM7QUFDckIsQ0FBQyxFOztBQ1hEO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSxDOztBQ3ZCc0U7QUFDbkI7QUFDaEI7QUFDZ0M7QUFDNUI7QUFDdkMsMENBQTBDLDZCQUFLO0FBQy9DOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRSxPQUFPO0FBQ1Q7O0FBRU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSSxjQUFjOztBQUVsQjs7QUFFQTtBQUNBOztBQUVBLHNCQUFzQjtBQUN0Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxnQ0FBUTtBQUNyQjs7QUFFQTtBQUNBLEdBQUcsQ0FBQyxpQ0FBUzs7QUFFYixNQUFNLEtBQXFDLEVBQUUsa0JBUzFDOztBQUVIO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLGNBQWMsb0JBQVM7QUFDdkI7QUFDQSwwREFBMEQsb0NBQW9DLFVBQVUsc0RBQXNELGlCQUFpQjtBQUMvSztBQUNBO0FBQ2Usd0VBQWdCLEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN4RS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLHFCQUFxQixzQkFBc0I7QUFDM0M7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOzs7O0FDckZxRTtBQUNnQjtBQUM1QjtBQUMwQztBQUNqRDtBQUNqQjtBQUNzQjtBQUNWO0FBQ0c7QUFDa0I7QUFDbkUsSUFBSSw0Q0FBNEIsVUFBVSw2QkFBSztBQUMvQztBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1REFBNkI7O0FBRXBEO0FBQ0E7QUFDQSx3Q0FBd0MsNEJBQTRCLFVBQVUsbUNBQW1DLGlCQUFpQjtBQUNsSSxrREFBa0Qsd0NBQXdDLGlCQUFpQjtBQUMzRztBQUNBLElBQUksaUJBQVMsQ0FBQyxzQ0FBa0I7QUFDaEM7QUFDQTs7QUFFQSxpQ0FBaUMsc0NBQVEsR0FBRztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxNQUFNLGNBQWM7O0FBRXBCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLGdEQUFzQixDQUFDLGdEQUFzQjtBQUM5RyxRQUFRLGlCQUFTOztBQUVqQjs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCOztBQUVBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7O0FBR1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSxpQkFBUyxzRUFBc0UsZ0JBQWdCO0FBQ3ZHO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBOEM7QUFDOUM7O0FBRUE7QUFDQSxnQ0FBZ0MsWUFBWSx1REFBdUQ7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUdBQWlHO0FBQ2pHO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsc0NBQVEsR0FBRzs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVCxpQkFBaUIsNkNBQWE7QUFDOUI7QUFDQTs7QUFFQTtBQUNBLEtBQUssQ0FBQyxpQ0FBUzs7QUFFZixRQUFRLDRDQUE0QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsS0FBcUMsRUFBRSxrQkFpQzFDOztBQUVMLFdBQVcscUNBQVk7QUFDdkI7QUFDQSxDOztBQy9TQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQzs7Ozs7QUM1QkE7QUFDQSxXQUFXLElBQUk7QUFDZixhQUFhLFFBQVE7QUFDckI7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEM7O0FDZjRDO0FBQ1o7QUFDakI7QUFDZixPQUFPLGFBQWE7QUFDcEIsSUFBSSxPQUFPO0FBQ1g7QUFDQSxDOztBQ04yRDtBQUNwRDtBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTs7O0FBR047O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxVQUFVLEtBQXFDLEVBQUUsRUFBa0Q7QUFDbkc7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQzs7QUMvRDJDO0FBQ21DO0FBQ3ZFO0FBQ1Asb0RBQW9ELGtCQUFrQjtBQUN0RTtBQUNPO0FBQ1AsK0JBQStCLHNCQUFzQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDTztBQUNQLHdFQUF3RSxzQkFBc0I7QUFDOUYsV0FBVywyQ0FBa0I7QUFDN0IsR0FBRztBQUNIO0FBQ2Usa0tBQW1HLEU7O0FDakJwQztBQUN2RTtBQUNQLGlEQUFpRCxrQkFBa0I7QUFDbkU7QUFDTztBQUNQLDRCQUE0QixzQkFBc0I7QUFDbEQ7QUFDQSxHQUFHO0FBQ0g7QUFDZSx5SEFBNkQsRTs7QUNUbEI7QUFDQztBQUNwRDtBQUNQLFNBQVMsc0NBQVEsR0FBRztBQUNwQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxZQUFZLEtBQXFDLEVBQUUsRUFBMEQ7QUFDN0c7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDZSwwR0FBbUQsRTs7QUNuQzNCOztBQUV2QztBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxNQUFNLE9BQU87QUFDYjtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxDOztBQ2hCb0c7QUFDOUM7QUFDL0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7QUFFZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1REFBNkI7O0FBRTdDO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLEtBQXFDLEVBQUUsRUFFMUM7O0FBRUg7QUFDQTtBQUNBLEM7O0FDdEYwRDtBQUMwQztBQUN4QztBQUNYO0FBQ3FCO0FBQ047QUFDVjtBQUNDO0FBQ3ZEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDs7O0FBR087QUFDUCxrQ0FBa0M7QUFDbEM7QUFDQSxnREFBZ0QsZUFBZTtBQUMvRDtBQUNBLG9FQUFvRSx1QkFBK0I7QUFDbkc7QUFDQSx1RUFBdUUsMEJBQWtDO0FBQ3pHO0FBQ0EsK0RBQStELGtCQUEwQjtBQUN6RjtBQUNBLDBEQUEwRCx5QkFBc0I7O0FBRWhGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxZQUFZO0FBQzFFO0FBQ0EsZ0VBQWdFLFlBQVk7QUFDNUU7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RSx1QkFBdUIsdURBQTZCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsc0NBQVE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDZSxtRUFBZSxFOztBQ2pHbUM7QUFDTjtBQUNuQiIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufSIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5leHBvcnQgdmFyIHN1YnNjcmlwdGlvblNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgdHJ5U3Vic2NyaWJlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB0cnlVbnN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgbm90aWZ5TmVzdGVkU3ViczogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXNTdWJzY3JpYmVkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59KTtcbmV4cG9ydCB2YXIgc3RvcmVTaGFwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIHN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgZGlzcGF0Y2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGdldFN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59KTsiLCIvKipcbiAqIFByaW50cyBhIHdhcm5pbmcgaW4gdGhlIGNvbnNvbGUgaWYgaXQgZXhpc3RzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIFRoZSB3YXJuaW5nIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWVtcHR5ICovXG4gIH0gY2F0Y2ggKGUpIHt9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tZW1wdHkgKi9cblxufSIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgQ2hpbGRyZW4gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgc3RvcmVTaGFwZSwgc3Vic2NyaXB0aW9uU2hhcGUgfSBmcm9tICcuLi91dGlscy9Qcm9wVHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi4vdXRpbHMvd2FybmluZyc7XG52YXIgcHJlZml4VW5zYWZlTGlmZWN5Y2xlTWV0aG9kcyA9IHR5cGVvZiBSZWFjdC5mb3J3YXJkUmVmICE9PSBcInVuZGVmaW5lZFwiO1xudmFyIGRpZFdhcm5BYm91dFJlY2VpdmluZ1N0b3JlID0gZmFsc2U7XG5cbmZ1bmN0aW9uIHdhcm5BYm91dFJlY2VpdmluZ1N0b3JlKCkge1xuICBpZiAoZGlkV2FybkFib3V0UmVjZWl2aW5nU3RvcmUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBkaWRXYXJuQWJvdXRSZWNlaXZpbmdTdG9yZSA9IHRydWU7XG4gIHdhcm5pbmcoJzxQcm92aWRlcj4gZG9lcyBub3Qgc3VwcG9ydCBjaGFuZ2luZyBgc3RvcmVgIG9uIHRoZSBmbHkuICcgKyAnSXQgaXMgbW9zdCBsaWtlbHkgdGhhdCB5b3Ugc2VlIHRoaXMgZXJyb3IgYmVjYXVzZSB5b3UgdXBkYXRlZCB0byAnICsgJ1JlZHV4IDIueCBhbmQgUmVhY3QgUmVkdXggMi54IHdoaWNoIG5vIGxvbmdlciBob3QgcmVsb2FkIHJlZHVjZXJzICcgKyAnYXV0b21hdGljYWxseS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZWR1eGpzL3JlYWN0LXJlZHV4L3JlbGVhc2VzLycgKyAndGFnL3YyLjAuMCBmb3IgdGhlIG1pZ3JhdGlvbiBpbnN0cnVjdGlvbnMuJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm92aWRlcihzdG9yZUtleSkge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4O1xuXG4gIGlmIChzdG9yZUtleSA9PT0gdm9pZCAwKSB7XG4gICAgc3RvcmVLZXkgPSAnc3RvcmUnO1xuICB9XG5cbiAgdmFyIHN1YnNjcmlwdGlvbktleSA9IHN0b3JlS2V5ICsgXCJTdWJzY3JpcHRpb25cIjtcblxuICB2YXIgUHJvdmlkZXIgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltzdG9yZUtleV0gPSB0aGlzW3N0b3JlS2V5XSwgX3JlZltzdWJzY3JpcHRpb25LZXldID0gbnVsbCwgX3JlZjtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIocHJvcHMsIGNvbnRleHQpIHtcbiAgICAgIHZhciBfdGhpcztcblxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpIHx8IHRoaXM7XG4gICAgICBfdGhpc1tzdG9yZUtleV0gPSBwcm9wcy5zdG9yZTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIENoaWxkcmVuLm9ubHkodGhpcy5wcm9wcy5jaGlsZHJlbik7XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVXNlIFVOU0FGRV8gZXZlbnQgbmFtZSB3aGVyZSBzdXBwb3J0ZWRcbiAgICB2YXIgZXZlbnROYW1lID0gcHJlZml4VW5zYWZlTGlmZWN5Y2xlTWV0aG9kcyA/ICdVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcycgOiAnY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyc7XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGVbZXZlbnROYW1lXSA9IGZ1bmN0aW9uIChuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzW3N0b3JlS2V5XSAhPT0gbmV4dFByb3BzLnN0b3JlKSB7XG4gICAgICAgIHdhcm5BYm91dFJlY2VpdmluZ1N0b3JlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIFByb3ZpZGVyLnByb3BUeXBlcyA9IHtcbiAgICBzdG9yZTogc3RvcmVTaGFwZS5pc1JlcXVpcmVkLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuZWxlbWVudC5pc1JlcXVpcmVkXG4gIH07XG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbc3RvcmVLZXldID0gc3RvcmVTaGFwZS5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbc3Vic2NyaXB0aW9uS2V5XSA9IHN1YnNjcmlwdGlvblNoYXBlLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuICByZXR1cm4gUHJvdmlkZXI7XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVQcm92aWRlcigpOyIsIi8vIGVuY2Fwc3VsYXRlcyB0aGUgc3Vic2NyaXB0aW9uIGxvZ2ljIGZvciBjb25uZWN0aW5nIGEgY29tcG9uZW50IHRvIHRoZSByZWR1eCBzdG9yZSwgYXNcbi8vIHdlbGwgYXMgbmVzdGluZyBzdWJzY3JpcHRpb25zIG9mIGRlc2NlbmRhbnQgY29tcG9uZW50cywgc28gdGhhdCB3ZSBjYW4gZW5zdXJlIHRoZVxuLy8gYW5jZXN0b3IgY29tcG9uZW50cyByZS1yZW5kZXIgYmVmb3JlIGRlc2NlbmRhbnRzXG52YXIgQ0xFQVJFRCA9IG51bGw7XG52YXIgbnVsbExpc3RlbmVycyA9IHtcbiAgbm90aWZ5OiBmdW5jdGlvbiBub3RpZnkoKSB7fVxufTtcblxuZnVuY3Rpb24gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCkge1xuICAvLyB0aGUgY3VycmVudC9uZXh0IHBhdHRlcm4gaXMgY29waWVkIGZyb20gcmVkdXgncyBjcmVhdGVTdG9yZSBjb2RlLlxuICAvLyBUT0RPOiByZWZhY3RvcitleHBvc2UgdGhhdCBjb2RlIHRvIGJlIHJldXNhYmxlIGhlcmU/XG4gIHZhciBjdXJyZW50ID0gW107XG4gIHZhciBuZXh0ID0gW107XG4gIHJldHVybiB7XG4gICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgbmV4dCA9IENMRUFSRUQ7XG4gICAgICBjdXJyZW50ID0gQ0xFQVJFRDtcbiAgICB9LFxuICAgIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge1xuICAgICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnQgPSBuZXh0O1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICBsaXN0ZW5lcnNbaV0oKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfSxcbiAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICBpZiAobmV4dCA9PT0gY3VycmVudCkgbmV4dCA9IGN1cnJlbnQuc2xpY2UoKTtcbiAgICAgIG5leHQucHVzaChsaXN0ZW5lcik7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICghaXNTdWJzY3JpYmVkIHx8IGN1cnJlbnQgPT09IENMRUFSRUQpIHJldHVybjtcbiAgICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG4gICAgICAgIGlmIChuZXh0ID09PSBjdXJyZW50KSBuZXh0ID0gY3VycmVudC5zbGljZSgpO1xuICAgICAgICBuZXh0LnNwbGljZShuZXh0LmluZGV4T2YobGlzdGVuZXIpLCAxKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIsIG9uU3RhdGVDaGFuZ2UpIHtcbiAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgdGhpcy5wYXJlbnRTdWIgPSBwYXJlbnRTdWI7XG4gICAgdGhpcy5vblN0YXRlQ2hhbmdlID0gb25TdGF0ZUNoYW5nZTtcbiAgICB0aGlzLnVuc3Vic2NyaWJlID0gbnVsbDtcbiAgICB0aGlzLmxpc3RlbmVycyA9IG51bGxMaXN0ZW5lcnM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3Vic2NyaXB0aW9uLnByb3RvdHlwZTtcblxuICBfcHJvdG8uYWRkTmVzdGVkU3ViID0gZnVuY3Rpb24gYWRkTmVzdGVkU3ViKGxpc3RlbmVyKSB7XG4gICAgdGhpcy50cnlTdWJzY3JpYmUoKTtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMuc3Vic2NyaWJlKGxpc3RlbmVyKTtcbiAgfTtcblxuICBfcHJvdG8ubm90aWZ5TmVzdGVkU3VicyA9IGZ1bmN0aW9uIG5vdGlmeU5lc3RlZFN1YnMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMubm90aWZ5KCk7XG4gIH07XG5cbiAgX3Byb3RvLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih0aGlzLnVuc3Vic2NyaWJlKTtcbiAgfTtcblxuICBfcHJvdG8udHJ5U3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5U3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IHRoaXMucGFyZW50U3ViID8gdGhpcy5wYXJlbnRTdWIuYWRkTmVzdGVkU3ViKHRoaXMub25TdGF0ZUNoYW5nZSkgOiB0aGlzLnN0b3JlLnN1YnNjcmliZSh0aGlzLm9uU3RhdGVDaGFuZ2UpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnRyeVVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUgPSBudWxsO1xuICAgICAgdGhpcy5saXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIHRoaXMubGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFN1YnNjcmlwdGlvbjtcbn0oKTtcblxuZXhwb3J0IHsgU3Vic2NyaXB0aW9uIGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgU3Vic2NyaXB0aW9uIGZyb20gJy4uL3V0aWxzL1N1YnNjcmlwdGlvbic7XG5pbXBvcnQgeyBzdG9yZVNoYXBlLCBzdWJzY3JpcHRpb25TaGFwZSB9IGZyb20gJy4uL3V0aWxzL1Byb3BUeXBlcyc7XG52YXIgcHJlZml4VW5zYWZlTGlmZWN5Y2xlTWV0aG9kcyA9IHR5cGVvZiBSZWFjdC5mb3J3YXJkUmVmICE9PSBcInVuZGVmaW5lZFwiO1xudmFyIGhvdFJlbG9hZGluZ1ZlcnNpb24gPSAwO1xudmFyIGR1bW15U3RhdGUgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbmZ1bmN0aW9uIG1ha2VTZWxlY3RvclN0YXRlZnVsKHNvdXJjZVNlbGVjdG9yLCBzdG9yZSkge1xuICAvLyB3cmFwIHRoZSBzZWxlY3RvciBpbiBhbiBvYmplY3QgdGhhdCB0cmFja3MgaXRzIHJlc3VsdHMgYmV0d2VlbiBydW5zLlxuICB2YXIgc2VsZWN0b3IgPSB7XG4gICAgcnVuOiBmdW5jdGlvbiBydW5Db21wb25lbnRTZWxlY3Rvcihwcm9wcykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG5leHRQcm9wcyA9IHNvdXJjZVNlbGVjdG9yKHN0b3JlLmdldFN0YXRlKCksIHByb3BzKTtcblxuICAgICAgICBpZiAobmV4dFByb3BzICE9PSBzZWxlY3Rvci5wcm9wcyB8fCBzZWxlY3Rvci5lcnJvcikge1xuICAgICAgICAgIHNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IHRydWU7XG4gICAgICAgICAgc2VsZWN0b3IucHJvcHMgPSBuZXh0UHJvcHM7XG4gICAgICAgICAgc2VsZWN0b3IuZXJyb3IgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBzZWxlY3Rvci5zaG91bGRDb21wb25lbnRVcGRhdGUgPSB0cnVlO1xuICAgICAgICBzZWxlY3Rvci5lcnJvciA9IGVycm9yO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHNlbGVjdG9yO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb25uZWN0QWR2YW5jZWQoXG4vKlxuICBzZWxlY3RvckZhY3RvcnkgaXMgYSBmdW5jIHRoYXQgaXMgcmVzcG9uc2libGUgZm9yIHJldHVybmluZyB0aGUgc2VsZWN0b3IgZnVuY3Rpb24gdXNlZCB0b1xuICBjb21wdXRlIG5ldyBwcm9wcyBmcm9tIHN0YXRlLCBwcm9wcywgYW5kIGRpc3BhdGNoLiBGb3IgZXhhbXBsZTpcbiAgICAgZXhwb3J0IGRlZmF1bHQgY29ubmVjdEFkdmFuY2VkKChkaXNwYXRjaCwgb3B0aW9ucykgPT4gKHN0YXRlLCBwcm9wcykgPT4gKHtcbiAgICAgIHRoaW5nOiBzdGF0ZS50aGluZ3NbcHJvcHMudGhpbmdJZF0sXG4gICAgICBzYXZlVGhpbmc6IGZpZWxkcyA9PiBkaXNwYXRjaChhY3Rpb25DcmVhdG9ycy5zYXZlVGhpbmcocHJvcHMudGhpbmdJZCwgZmllbGRzKSksXG4gICAgfSkpKFlvdXJDb21wb25lbnQpXG4gICBBY2Nlc3MgdG8gZGlzcGF0Y2ggaXMgcHJvdmlkZWQgdG8gdGhlIGZhY3Rvcnkgc28gc2VsZWN0b3JGYWN0b3JpZXMgY2FuIGJpbmQgYWN0aW9uQ3JlYXRvcnNcbiAgb3V0c2lkZSBvZiB0aGVpciBzZWxlY3RvciBhcyBhbiBvcHRpbWl6YXRpb24uIE9wdGlvbnMgcGFzc2VkIHRvIGNvbm5lY3RBZHZhbmNlZCBhcmUgcGFzc2VkIHRvXG4gIHRoZSBzZWxlY3RvckZhY3RvcnksIGFsb25nIHdpdGggZGlzcGxheU5hbWUgYW5kIFdyYXBwZWRDb21wb25lbnQsIGFzIHRoZSBzZWNvbmQgYXJndW1lbnQuXG4gICBOb3RlIHRoYXQgc2VsZWN0b3JGYWN0b3J5IGlzIHJlc3BvbnNpYmxlIGZvciBhbGwgY2FjaGluZy9tZW1vaXphdGlvbiBvZiBpbmJvdW5kIGFuZCBvdXRib3VuZFxuICBwcm9wcy4gRG8gbm90IHVzZSBjb25uZWN0QWR2YW5jZWQgZGlyZWN0bHkgd2l0aG91dCBtZW1vaXppbmcgcmVzdWx0cyBiZXR3ZWVuIGNhbGxzIHRvIHlvdXJcbiAgc2VsZWN0b3IsIG90aGVyd2lzZSB0aGUgQ29ubmVjdCBjb21wb25lbnQgd2lsbCByZS1yZW5kZXIgb24gZXZlcnkgc3RhdGUgb3IgcHJvcHMgY2hhbmdlLlxuKi9cbnNlbGVjdG9yRmFjdG9yeSwgLy8gb3B0aW9ucyBvYmplY3Q6XG5fcmVmKSB7XG4gIHZhciBfY29udGV4dFR5cGVzLCBfY2hpbGRDb250ZXh0VHlwZXM7XG5cbiAgaWYgKF9yZWYgPT09IHZvaWQgMCkge1xuICAgIF9yZWYgPSB7fTtcbiAgfVxuXG4gIHZhciBfcmVmMiA9IF9yZWYsXG4gICAgICBfcmVmMiRnZXREaXNwbGF5TmFtZSA9IF9yZWYyLmdldERpc3BsYXlOYW1lLFxuICAgICAgZ2V0RGlzcGxheU5hbWUgPSBfcmVmMiRnZXREaXNwbGF5TmFtZSA9PT0gdm9pZCAwID8gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gXCJDb25uZWN0QWR2YW5jZWQoXCIgKyBuYW1lICsgXCIpXCI7XG4gIH0gOiBfcmVmMiRnZXREaXNwbGF5TmFtZSxcbiAgICAgIF9yZWYyJG1ldGhvZE5hbWUgPSBfcmVmMi5tZXRob2ROYW1lLFxuICAgICAgbWV0aG9kTmFtZSA9IF9yZWYyJG1ldGhvZE5hbWUgPT09IHZvaWQgMCA/ICdjb25uZWN0QWR2YW5jZWQnIDogX3JlZjIkbWV0aG9kTmFtZSxcbiAgICAgIF9yZWYyJHJlbmRlckNvdW50UHJvcCA9IF9yZWYyLnJlbmRlckNvdW50UHJvcCxcbiAgICAgIHJlbmRlckNvdW50UHJvcCA9IF9yZWYyJHJlbmRlckNvdW50UHJvcCA9PT0gdm9pZCAwID8gdW5kZWZpbmVkIDogX3JlZjIkcmVuZGVyQ291bnRQcm9wLFxuICAgICAgX3JlZjIkc2hvdWxkSGFuZGxlU3RhID0gX3JlZjIuc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzID0gX3JlZjIkc2hvdWxkSGFuZGxlU3RhID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjIkc2hvdWxkSGFuZGxlU3RhLFxuICAgICAgX3JlZjIkc3RvcmVLZXkgPSBfcmVmMi5zdG9yZUtleSxcbiAgICAgIHN0b3JlS2V5ID0gX3JlZjIkc3RvcmVLZXkgPT09IHZvaWQgMCA/ICdzdG9yZScgOiBfcmVmMiRzdG9yZUtleSxcbiAgICAgIF9yZWYyJHdpdGhSZWYgPSBfcmVmMi53aXRoUmVmLFxuICAgICAgd2l0aFJlZiA9IF9yZWYyJHdpdGhSZWYgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkd2l0aFJlZixcbiAgICAgIGNvbm5lY3RPcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImdldERpc3BsYXlOYW1lXCIsIFwibWV0aG9kTmFtZVwiLCBcInJlbmRlckNvdW50UHJvcFwiLCBcInNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlc1wiLCBcInN0b3JlS2V5XCIsIFwid2l0aFJlZlwiXSk7XG5cbiAgdmFyIHN1YnNjcmlwdGlvbktleSA9IHN0b3JlS2V5ICsgJ1N1YnNjcmlwdGlvbic7XG4gIHZhciB2ZXJzaW9uID0gaG90UmVsb2FkaW5nVmVyc2lvbisrO1xuICB2YXIgY29udGV4dFR5cGVzID0gKF9jb250ZXh0VHlwZXMgPSB7fSwgX2NvbnRleHRUeXBlc1tzdG9yZUtleV0gPSBzdG9yZVNoYXBlLCBfY29udGV4dFR5cGVzW3N1YnNjcmlwdGlvbktleV0gPSBzdWJzY3JpcHRpb25TaGFwZSwgX2NvbnRleHRUeXBlcyk7XG4gIHZhciBjaGlsZENvbnRleHRUeXBlcyA9IChfY2hpbGRDb250ZXh0VHlwZXMgPSB7fSwgX2NoaWxkQ29udGV4dFR5cGVzW3N1YnNjcmlwdGlvbktleV0gPSBzdWJzY3JpcHRpb25TaGFwZSwgX2NoaWxkQ29udGV4dFR5cGVzKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXBXaXRoQ29ubmVjdChXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgaW52YXJpYW50KGlzVmFsaWRFbGVtZW50VHlwZShXcmFwcGVkQ29tcG9uZW50KSwgXCJZb3UgbXVzdCBwYXNzIGEgY29tcG9uZW50IHRvIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBieSBcIiArIChtZXRob2ROYW1lICsgXCIuIEluc3RlYWQgcmVjZWl2ZWQgXCIgKyBKU09OLnN0cmluZ2lmeShXcmFwcGVkQ29tcG9uZW50KSkpO1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50TmFtZSA9IFdyYXBwZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgV3JhcHBlZENvbXBvbmVudC5uYW1lIHx8ICdDb21wb25lbnQnO1xuICAgIHZhciBkaXNwbGF5TmFtZSA9IGdldERpc3BsYXlOYW1lKHdyYXBwZWRDb21wb25lbnROYW1lKTtcblxuICAgIHZhciBzZWxlY3RvckZhY3RvcnlPcHRpb25zID0gX2V4dGVuZHMoe30sIGNvbm5lY3RPcHRpb25zLCB7XG4gICAgICBnZXREaXNwbGF5TmFtZTogZ2V0RGlzcGxheU5hbWUsXG4gICAgICBtZXRob2ROYW1lOiBtZXRob2ROYW1lLFxuICAgICAgcmVuZGVyQ291bnRQcm9wOiByZW5kZXJDb3VudFByb3AsXG4gICAgICBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXM6IHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyxcbiAgICAgIHN0b3JlS2V5OiBzdG9yZUtleSxcbiAgICAgIHdpdGhSZWY6IHdpdGhSZWYsXG4gICAgICBkaXNwbGF5TmFtZTogZGlzcGxheU5hbWUsXG4gICAgICB3cmFwcGVkQ29tcG9uZW50TmFtZTogd3JhcHBlZENvbXBvbmVudE5hbWUsXG4gICAgICBXcmFwcGVkQ29tcG9uZW50OiBXcmFwcGVkQ29tcG9uZW50IC8vIFRPRE8gQWN0dWFsbHkgZml4IG91ciB1c2Ugb2YgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc1xuXG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9uby1kZXByZWNhdGVkICovXG5cbiAgICB9KTtcblxuICAgIHZhciBDb25uZWN0ID1cbiAgICAvKiNfX1BVUkVfXyovXG4gICAgZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICAgIF9pbmhlcml0c0xvb3NlKENvbm5lY3QsIF9Db21wb25lbnQpO1xuXG4gICAgICBmdW5jdGlvbiBDb25uZWN0KHByb3BzLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBfdGhpcztcblxuICAgICAgICBfdGhpcyA9IF9Db21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcywgY29udGV4dCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgICAgIF90aGlzLnN0YXRlID0ge307XG4gICAgICAgIF90aGlzLnJlbmRlckNvdW50ID0gMDtcbiAgICAgICAgX3RoaXMuc3RvcmUgPSBwcm9wc1tzdG9yZUtleV0gfHwgY29udGV4dFtzdG9yZUtleV07XG4gICAgICAgIF90aGlzLnByb3BzTW9kZSA9IEJvb2xlYW4ocHJvcHNbc3RvcmVLZXldKTtcbiAgICAgICAgX3RoaXMuc2V0V3JhcHBlZEluc3RhbmNlID0gX3RoaXMuc2V0V3JhcHBlZEluc3RhbmNlLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSkpO1xuICAgICAgICBpbnZhcmlhbnQoX3RoaXMuc3RvcmUsIFwiQ291bGQgbm90IGZpbmQgXFxcIlwiICsgc3RvcmVLZXkgKyBcIlxcXCIgaW4gZWl0aGVyIHRoZSBjb250ZXh0IG9yIHByb3BzIG9mIFwiICsgKFwiXFxcIlwiICsgZGlzcGxheU5hbWUgKyBcIlxcXCIuIEVpdGhlciB3cmFwIHRoZSByb290IGNvbXBvbmVudCBpbiBhIDxQcm92aWRlcj4sIFwiKSArIChcIm9yIGV4cGxpY2l0bHkgcGFzcyBcXFwiXCIgKyBzdG9yZUtleSArIFwiXFxcIiBhcyBhIHByb3AgdG8gXFxcIlwiICsgZGlzcGxheU5hbWUgKyBcIlxcXCIuXCIpKTtcblxuICAgICAgICBfdGhpcy5pbml0U2VsZWN0b3IoKTtcblxuICAgICAgICBfdGhpcy5pbml0U3Vic2NyaXB0aW9uKCk7XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3Byb3RvID0gQ29ubmVjdC5wcm90b3R5cGU7XG5cbiAgICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICAgIHZhciBfcmVmMztcblxuICAgICAgICAvLyBJZiB0aGlzIGNvbXBvbmVudCByZWNlaXZlZCBzdG9yZSBmcm9tIHByb3BzLCBpdHMgc3Vic2NyaXB0aW9uIHNob3VsZCBiZSB0cmFuc3BhcmVudFxuICAgICAgICAvLyB0byBhbnkgZGVzY2VuZGFudHMgcmVjZWl2aW5nIHN0b3JlK3N1YnNjcmlwdGlvbiBmcm9tIGNvbnRleHQ7IGl0IHBhc3NlcyBhbG9uZ1xuICAgICAgICAvLyBzdWJzY3JpcHRpb24gcGFzc2VkIHRvIGl0LiBPdGhlcndpc2UsIGl0IHNoYWRvd3MgdGhlIHBhcmVudCBzdWJzY3JpcHRpb24sIHdoaWNoIGFsbG93c1xuICAgICAgICAvLyBDb25uZWN0IHRvIGNvbnRyb2wgb3JkZXJpbmcgb2Ygbm90aWZpY2F0aW9ucyB0byBmbG93IHRvcC1kb3duLlxuICAgICAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5wcm9wc01vZGUgPyBudWxsIDogdGhpcy5zdWJzY3JpcHRpb247XG4gICAgICAgIHJldHVybiBfcmVmMyA9IHt9LCBfcmVmM1tzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uIHx8IHRoaXMuY29udGV4dFtzdWJzY3JpcHRpb25LZXldLCBfcmVmMztcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBpZiAoIXNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykgcmV0dXJuOyAvLyBjb21wb25lbnRXaWxsTW91bnQgZmlyZXMgZHVyaW5nIHNlcnZlciBzaWRlIHJlbmRlcmluZywgYnV0IGNvbXBvbmVudERpZE1vdW50IGFuZFxuICAgICAgICAvLyBjb21wb25lbnRXaWxsVW5tb3VudCBkbyBub3QuIEJlY2F1c2Ugb2YgdGhpcywgdHJ5U3Vic2NyaWJlIGhhcHBlbnMgZHVyaW5nIC4uLmRpZE1vdW50LlxuICAgICAgICAvLyBPdGhlcndpc2UsIHVuc3Vic2NyaXB0aW9uIHdvdWxkIG5ldmVyIHRha2UgcGxhY2UgZHVyaW5nIFNTUiwgY2F1c2luZyBhIG1lbW9yeSBsZWFrLlxuICAgICAgICAvLyBUbyBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgYSBjaGlsZCBjb21wb25lbnQgbWF5IGhhdmUgdHJpZ2dlcmVkIGEgc3RhdGUgY2hhbmdlIGJ5XG4gICAgICAgIC8vIGRpc3BhdGNoaW5nIGFuIGFjdGlvbiBpbiBpdHMgY29tcG9uZW50V2lsbE1vdW50LCB3ZSBoYXZlIHRvIHJlLXJ1biB0aGUgc2VsZWN0IGFuZCBtYXliZVxuICAgICAgICAvLyByZS1yZW5kZXIuXG5cbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG4gICAgICAgIHRoaXMuc2VsZWN0b3IucnVuKHRoaXMucHJvcHMpO1xuICAgICAgICBpZiAodGhpcy5zZWxlY3Rvci5zaG91bGRDb21wb25lbnRVcGRhdGUpIHRoaXMuZm9yY2VVcGRhdGUoKTtcbiAgICAgIH07IC8vIE5vdGU6IHRoaXMgaXMgcmVuYW1lZCBiZWxvdyB0byB0aGUgVU5TQUZFXyB2ZXJzaW9uIGluIFJlYWN0ID49MTYuMy4wXG5cblxuICAgICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICB0aGlzLnNlbGVjdG9yLnJ1bihuZXh0UHJvcHMpO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZ1bmN0aW9uIHNob3VsZENvbXBvbmVudFVwZGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0b3Iuc2hvdWxkQ29tcG9uZW50VXBkYXRlO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikgdGhpcy5zdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICB0aGlzLm5vdGlmeU5lc3RlZFN1YnMgPSBub29wO1xuICAgICAgICB0aGlzLnN0b3JlID0gbnVsbDtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4gPSBub29wO1xuICAgICAgICB0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZhbHNlO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLmdldFdyYXBwZWRJbnN0YW5jZSA9IGZ1bmN0aW9uIGdldFdyYXBwZWRJbnN0YW5jZSgpIHtcbiAgICAgICAgaW52YXJpYW50KHdpdGhSZWYsIFwiVG8gYWNjZXNzIHRoZSB3cmFwcGVkIGluc3RhbmNlLCB5b3UgbmVlZCB0byBzcGVjaWZ5IFwiICsgKFwieyB3aXRoUmVmOiB0cnVlIH0gaW4gdGhlIG9wdGlvbnMgYXJndW1lbnQgb2YgdGhlIFwiICsgbWV0aG9kTmFtZSArIFwiKCkgY2FsbC5cIikpO1xuICAgICAgICByZXR1cm4gdGhpcy53cmFwcGVkSW5zdGFuY2U7XG4gICAgICB9O1xuXG4gICAgICBfcHJvdG8uc2V0V3JhcHBlZEluc3RhbmNlID0gZnVuY3Rpb24gc2V0V3JhcHBlZEluc3RhbmNlKHJlZikge1xuICAgICAgICB0aGlzLndyYXBwZWRJbnN0YW5jZSA9IHJlZjtcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5pbml0U2VsZWN0b3IgPSBmdW5jdGlvbiBpbml0U2VsZWN0b3IoKSB7XG4gICAgICAgIHZhciBzb3VyY2VTZWxlY3RvciA9IHNlbGVjdG9yRmFjdG9yeSh0aGlzLnN0b3JlLmRpc3BhdGNoLCBzZWxlY3RvckZhY3RvcnlPcHRpb25zKTtcbiAgICAgICAgdGhpcy5zZWxlY3RvciA9IG1ha2VTZWxlY3RvclN0YXRlZnVsKHNvdXJjZVNlbGVjdG9yLCB0aGlzLnN0b3JlKTtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4odGhpcy5wcm9wcyk7XG4gICAgICB9O1xuXG4gICAgICBfcHJvdG8uaW5pdFN1YnNjcmlwdGlvbiA9IGZ1bmN0aW9uIGluaXRTdWJzY3JpcHRpb24oKSB7XG4gICAgICAgIGlmICghc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzKSByZXR1cm47IC8vIHBhcmVudFN1YidzIHNvdXJjZSBzaG91bGQgbWF0Y2ggd2hlcmUgc3RvcmUgY2FtZSBmcm9tOiBwcm9wcyB2cy4gY29udGV4dC4gQSBjb21wb25lbnRcbiAgICAgICAgLy8gY29ubmVjdGVkIHRvIHRoZSBzdG9yZSB2aWEgcHJvcHMgc2hvdWxkbid0IHVzZSBzdWJzY3JpcHRpb24gZnJvbSBjb250ZXh0LCBvciB2aWNlIHZlcnNhLlxuXG4gICAgICAgIHZhciBwYXJlbnRTdWIgPSAodGhpcy5wcm9wc01vZGUgPyB0aGlzLnByb3BzIDogdGhpcy5jb250ZXh0KVtzdWJzY3JpcHRpb25LZXldO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24odGhpcy5zdG9yZSwgcGFyZW50U3ViLCB0aGlzLm9uU3RhdGVDaGFuZ2UuYmluZCh0aGlzKSk7IC8vIGBub3RpZnlOZXN0ZWRTdWJzYCBpcyBkdXBsaWNhdGVkIHRvIGhhbmRsZSB0aGUgY2FzZSB3aGVyZSB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZCBpblxuICAgICAgICAvLyB0aGUgbWlkZGxlIG9mIHRoZSBub3RpZmljYXRpb24gbG9vcCwgd2hlcmUgYHRoaXMuc3Vic2NyaXB0aW9uYCB3aWxsIHRoZW4gYmUgbnVsbC4gQW5cbiAgICAgICAgLy8gZXh0cmEgbnVsbCBjaGVjayBldmVyeSBjaGFuZ2UgY2FuIGJlIGF2b2lkZWQgYnkgY29weWluZyB0aGUgbWV0aG9kIG9udG8gYHRoaXNgIGFuZCB0aGVuXG4gICAgICAgIC8vIHJlcGxhY2luZyBpdCB3aXRoIGEgbm8tb3Agb24gdW5tb3VudC4gVGhpcyBjYW4gcHJvYmFibHkgYmUgYXZvaWRlZCBpZiBTdWJzY3JpcHRpb24nc1xuICAgICAgICAvLyBsaXN0ZW5lcnMgbG9naWMgaXMgY2hhbmdlZCB0byBub3QgY2FsbCBsaXN0ZW5lcnMgdGhhdCBoYXZlIGJlZW4gdW5zdWJzY3JpYmVkIGluIHRoZVxuICAgICAgICAvLyBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLlxuXG4gICAgICAgIHRoaXMubm90aWZ5TmVzdGVkU3VicyA9IHRoaXMuc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMuYmluZCh0aGlzLnN1YnNjcmlwdGlvbik7XG4gICAgICB9O1xuXG4gICAgICBfcHJvdG8ub25TdGF0ZUNoYW5nZSA9IGZ1bmN0aW9uIG9uU3RhdGVDaGFuZ2UoKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0b3IucnVuKHRoaXMucHJvcHMpO1xuXG4gICAgICAgIGlmICghdGhpcy5zZWxlY3Rvci5zaG91bGRDb21wb25lbnRVcGRhdGUpIHtcbiAgICAgICAgICB0aGlzLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmNvbXBvbmVudERpZFVwZGF0ZSA9IHRoaXMubm90aWZ5TmVzdGVkU3Vic09uQ29tcG9uZW50RGlkVXBkYXRlO1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoZHVtbXlTdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5ub3RpZnlOZXN0ZWRTdWJzT25Db21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzT25Db21wb25lbnREaWRVcGRhdGUoKSB7XG4gICAgICAgIC8vIGBjb21wb25lbnREaWRVcGRhdGVgIGlzIGNvbmRpdGlvbmFsbHkgaW1wbGVtZW50ZWQgd2hlbiBgb25TdGF0ZUNoYW5nZWAgZGV0ZXJtaW5lcyBpdFxuICAgICAgICAvLyBuZWVkcyB0byBub3RpZnkgbmVzdGVkIHN1YnMuIE9uY2UgY2FsbGVkLCBpdCB1bmltcGxlbWVudHMgaXRzZWxmIHVudGlsIGZ1cnRoZXIgc3RhdGVcbiAgICAgICAgLy8gY2hhbmdlcyBvY2N1ci4gRG9pbmcgaXQgdGhpcyB3YXkgdnMgaGF2aW5nIGEgcGVybWFuZW50IGBjb21wb25lbnREaWRVcGRhdGVgIHRoYXQgZG9lc1xuICAgICAgICAvLyBhIGJvb2xlYW4gY2hlY2sgZXZlcnkgdGltZSBhdm9pZHMgYW4gZXh0cmEgbWV0aG9kIGNhbGwgbW9zdCBvZiB0aGUgdGltZSwgcmVzdWx0aW5nXG4gICAgICAgIC8vIGluIHNvbWUgcGVyZiBib29zdC5cbiAgICAgICAgdGhpcy5jb21wb25lbnREaWRVcGRhdGUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMubm90aWZ5TmVzdGVkU3VicygpO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5zdWJzY3JpcHRpb24pICYmIHRoaXMuc3Vic2NyaXB0aW9uLmlzU3Vic2NyaWJlZCgpO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLmFkZEV4dHJhUHJvcHMgPSBmdW5jdGlvbiBhZGRFeHRyYVByb3BzKHByb3BzKSB7XG4gICAgICAgIGlmICghd2l0aFJlZiAmJiAhcmVuZGVyQ291bnRQcm9wICYmICEodGhpcy5wcm9wc01vZGUgJiYgdGhpcy5zdWJzY3JpcHRpb24pKSByZXR1cm4gcHJvcHM7IC8vIG1ha2UgYSBzaGFsbG93IGNvcHkgc28gdGhhdCBmaWVsZHMgYWRkZWQgZG9uJ3QgbGVhayB0byB0aGUgb3JpZ2luYWwgc2VsZWN0b3IuXG4gICAgICAgIC8vIHRoaXMgaXMgZXNwZWNpYWxseSBpbXBvcnRhbnQgZm9yICdyZWYnIHNpbmNlIHRoYXQncyBhIHJlZmVyZW5jZSBiYWNrIHRvIHRoZSBjb21wb25lbnRcbiAgICAgICAgLy8gaW5zdGFuY2UuIGEgc2luZ2xldG9uIG1lbW9pemVkIHNlbGVjdG9yIHdvdWxkIHRoZW4gYmUgaG9sZGluZyBhIHJlZmVyZW5jZSB0byB0aGVcbiAgICAgICAgLy8gaW5zdGFuY2UsIHByZXZlbnRpbmcgdGhlIGluc3RhbmNlIGZyb20gYmVpbmcgZ2FyYmFnZSBjb2xsZWN0ZWQsIGFuZCB0aGF0IHdvdWxkIGJlIGJhZFxuXG4gICAgICAgIHZhciB3aXRoRXh0cmFzID0gX2V4dGVuZHMoe30sIHByb3BzKTtcblxuICAgICAgICBpZiAod2l0aFJlZikgd2l0aEV4dHJhcy5yZWYgPSB0aGlzLnNldFdyYXBwZWRJbnN0YW5jZTtcbiAgICAgICAgaWYgKHJlbmRlckNvdW50UHJvcCkgd2l0aEV4dHJhc1tyZW5kZXJDb3VudFByb3BdID0gdGhpcy5yZW5kZXJDb3VudCsrO1xuICAgICAgICBpZiAodGhpcy5wcm9wc01vZGUgJiYgdGhpcy5zdWJzY3JpcHRpb24pIHdpdGhFeHRyYXNbc3Vic2NyaXB0aW9uS2V5XSA9IHRoaXMuc3Vic2NyaXB0aW9uO1xuICAgICAgICByZXR1cm4gd2l0aEV4dHJhcztcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgIHZhciBzZWxlY3RvciA9IHRoaXMuc2VsZWN0b3I7XG4gICAgICAgIHNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChzZWxlY3Rvci5lcnJvcikge1xuICAgICAgICAgIHRocm93IHNlbGVjdG9yLmVycm9yO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIHRoaXMuYWRkRXh0cmFQcm9wcyhzZWxlY3Rvci5wcm9wcykpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gQ29ubmVjdDtcbiAgICB9KENvbXBvbmVudCk7XG5cbiAgICBpZiAocHJlZml4VW5zYWZlTGlmZWN5Y2xlTWV0aG9kcykge1xuICAgICAgLy8gVXNlIFVOU0FGRV8gZXZlbnQgbmFtZSB3aGVyZSBzdXBwb3J0ZWRcbiAgICAgIENvbm5lY3QucHJvdG90eXBlLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gQ29ubmVjdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcztcbiAgICAgIGRlbGV0ZSBDb25uZWN0LnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzO1xuICAgIH1cbiAgICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0L25vLWRlcHJlY2F0ZWQgKi9cblxuXG4gICAgQ29ubmVjdC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICBDb25uZWN0LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gICAgQ29ubmVjdC5jaGlsZENvbnRleHRUeXBlcyA9IGNoaWxkQ29udGV4dFR5cGVzO1xuICAgIENvbm5lY3QuY29udGV4dFR5cGVzID0gY29udGV4dFR5cGVzO1xuICAgIENvbm5lY3QucHJvcFR5cGVzID0gY29udGV4dFR5cGVzO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIC8vIFVzZSBVTlNBRkVfIGV2ZW50IG5hbWUgd2hlcmUgc3VwcG9ydGVkXG4gICAgICB2YXIgZXZlbnROYW1lID0gcHJlZml4VW5zYWZlTGlmZWN5Y2xlTWV0aG9kcyA/ICdVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZScgOiAnY29tcG9uZW50V2lsbFVwZGF0ZSc7XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlW2V2ZW50TmFtZV0gPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVXBkYXRlKCkge1xuICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgICAvLyBXZSBhcmUgaG90IHJlbG9hZGluZyFcbiAgICAgICAgaWYgKHRoaXMudmVyc2lvbiAhPT0gdmVyc2lvbikge1xuICAgICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgICAgICAgdGhpcy5pbml0U2VsZWN0b3IoKTsgLy8gSWYgYW55IGNvbm5lY3RlZCBkZXNjZW5kYW50cyBkb24ndCBob3QgcmVsb2FkIChhbmQgcmVzdWJzY3JpYmUgaW4gdGhlIHByb2Nlc3MpLCB0aGVpclxuICAgICAgICAgIC8vIGxpc3RlbmVycyB3aWxsIGJlIGxvc3Qgd2hlbiB3ZSB1bnN1YnNjcmliZS4gVW5mb3J0dW5hdGVseSwgYnkgY29weWluZyBvdmVyIGFsbFxuICAgICAgICAgIC8vIGxpc3RlbmVycywgdGhpcyBkb2VzIG1lYW4gdGhhdCB0aGUgb2xkIHZlcnNpb25zIG9mIGNvbm5lY3RlZCBkZXNjZW5kYW50cyB3aWxsIHN0aWxsIGJlXG4gICAgICAgICAgLy8gbm90aWZpZWQgb2Ygc3RhdGUgY2hhbmdlczsgaG93ZXZlciwgdGhlaXIgb25TdGF0ZUNoYW5nZSBmdW5jdGlvbiBpcyBhIG5vLW9wIHNvIHRoaXNcbiAgICAgICAgICAvLyBpc24ndCBhIGh1Z2UgZGVhbC5cblxuICAgICAgICAgIHZhciBvbGRMaXN0ZW5lcnMgPSBbXTtcblxuICAgICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgb2xkTGlzdGVuZXJzID0gdGhpcy5zdWJzY3JpcHRpb24ubGlzdGVuZXJzLmdldCgpO1xuICAgICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLmluaXRTdWJzY3JpcHRpb24oKTtcblxuICAgICAgICAgIGlmIChzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpO1xuICAgICAgICAgICAgb2xkTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczIuc3Vic2NyaXB0aW9uLmxpc3RlbmVycy5zdWJzY3JpYmUobGlzdGVuZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBob2lzdFN0YXRpY3MoQ29ubmVjdCwgV3JhcHBlZENvbXBvbmVudCk7XG4gIH07XG59IiwidmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkgcmV0dXJuIHRydWU7XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd24uY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn0iLCIvKipcclxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBhcmd1bWVudCBhcHBlYXJzIHRvIGJlIGEgcGxhaW4gb2JqZWN0LlxyXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7XG4gIGlmIChwcm90byA9PT0gbnVsbCkgcmV0dXJuIHRydWU7XG4gIHZhciBiYXNlUHJvdG8gPSBwcm90bztcblxuICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGJhc2VQcm90bykgIT09IG51bGwpIHtcbiAgICBiYXNlUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoYmFzZVByb3RvKTtcbiAgfVxuXG4gIHJldHVybiBwcm90byA9PT0gYmFzZVByb3RvO1xufSIsImltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gJy4vaXNQbGFpbk9iamVjdCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICcuL3dhcm5pbmcnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmVyaWZ5UGxhaW5PYmplY3QodmFsdWUsIGRpc3BsYXlOYW1lLCBtZXRob2ROYW1lKSB7XG4gIGlmICghaXNQbGFpbk9iamVjdCh2YWx1ZSkpIHtcbiAgICB3YXJuaW5nKG1ldGhvZE5hbWUgKyBcIigpIGluIFwiICsgZGlzcGxheU5hbWUgKyBcIiBtdXN0IHJldHVybiBhIHBsYWluIG9iamVjdC4gSW5zdGVhZCByZWNlaXZlZCBcIiArIHZhbHVlICsgXCIuXCIpO1xuICB9XG59IiwiaW1wb3J0IHZlcmlmeVBsYWluT2JqZWN0IGZyb20gJy4uL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0JztcbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGdldENvbnN0YW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0Q29uc3RhbnRTZWxlY3RvcihkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHZhciBjb25zdGFudCA9IGdldENvbnN0YW50KGRpc3BhdGNoLCBvcHRpb25zKTtcblxuICAgIGZ1bmN0aW9uIGNvbnN0YW50U2VsZWN0b3IoKSB7XG4gICAgICByZXR1cm4gY29uc3RhbnQ7XG4gICAgfVxuXG4gICAgY29uc3RhbnRTZWxlY3Rvci5kZXBlbmRzT25Pd25Qcm9wcyA9IGZhbHNlO1xuICAgIHJldHVybiBjb25zdGFudFNlbGVjdG9yO1xuICB9O1xufSAvLyBkZXBlbmRzT25Pd25Qcm9wcyBpcyB1c2VkIGJ5IGNyZWF0ZU1hcFRvUHJvcHNQcm94eSB0byBkZXRlcm1pbmUgd2hldGhlciB0byBwYXNzIHByb3BzIGFzIGFyZ3Ncbi8vIHRvIHRoZSBtYXBUb1Byb3BzIGZ1bmN0aW9uIGJlaW5nIHdyYXBwZWQuIEl0IGlzIGFsc28gdXNlZCBieSBtYWtlUHVyZVByb3BzU2VsZWN0b3IgdG8gZGV0ZXJtaW5lXG4vLyB3aGV0aGVyIG1hcFRvUHJvcHMgbmVlZHMgdG8gYmUgaW52b2tlZCB3aGVuIHByb3BzIGhhdmUgY2hhbmdlZC5cbi8vIFxuLy8gQSBsZW5ndGggb2Ygb25lIHNpZ25hbHMgdGhhdCBtYXBUb1Byb3BzIGRvZXMgbm90IGRlcGVuZCBvbiBwcm9wcyBmcm9tIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuLy8gQSBsZW5ndGggb2YgemVybyBpcyBhc3N1bWVkIHRvIG1lYW4gbWFwVG9Qcm9wcyBpcyBnZXR0aW5nIGFyZ3MgdmlhIGFyZ3VtZW50cyBvciAuLi5hcmdzIGFuZFxuLy8gdGhlcmVmb3JlIG5vdCByZXBvcnRpbmcgaXRzIGxlbmd0aCBhY2N1cmF0ZWx5Li5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlcGVuZHNPbk93blByb3BzKG1hcFRvUHJvcHMpIHtcbiAgcmV0dXJuIG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMgIT09IG51bGwgJiYgbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyAhPT0gdW5kZWZpbmVkID8gQm9vbGVhbihtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSA6IG1hcFRvUHJvcHMubGVuZ3RoICE9PSAxO1xufSAvLyBVc2VkIGJ5IHdoZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uIGFuZCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbixcbi8vIHRoaXMgZnVuY3Rpb24gd3JhcHMgbWFwVG9Qcm9wcyBpbiBhIHByb3h5IGZ1bmN0aW9uIHdoaWNoIGRvZXMgc2V2ZXJhbCB0aGluZ3M6XG4vLyBcbi8vICAqIERldGVjdHMgd2hldGhlciB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyBjYWxsZWQgZGVwZW5kcyBvbiBwcm9wcywgd2hpY2hcbi8vICAgIGlzIHVzZWQgYnkgc2VsZWN0b3JGYWN0b3J5IHRvIGRlY2lkZSBpZiBpdCBzaG91bGQgcmVpbnZva2Ugb24gcHJvcHMgY2hhbmdlcy5cbi8vICAgIFxuLy8gICogT24gZmlyc3QgY2FsbCwgaGFuZGxlcyBtYXBUb1Byb3BzIGlmIHJldHVybnMgYW5vdGhlciBmdW5jdGlvbiwgYW5kIHRyZWF0cyB0aGF0XG4vLyAgICBuZXcgZnVuY3Rpb24gYXMgdGhlIHRydWUgbWFwVG9Qcm9wcyBmb3Igc3Vic2VxdWVudCBjYWxscy5cbi8vICAgIFxuLy8gICogT24gZmlyc3QgY2FsbCwgdmVyaWZpZXMgdGhlIGZpcnN0IHJlc3VsdCBpcyBhIHBsYWluIG9iamVjdCwgaW4gb3JkZXIgdG8gd2FyblxuLy8gICAgdGhlIGRldmVsb3BlciB0aGF0IHRoZWlyIG1hcFRvUHJvcHMgZnVuY3Rpb24gaXMgbm90IHJldHVybmluZyBhIHZhbGlkIHJlc3VsdC5cbi8vICAgIFxuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFRvUHJvcHMsIG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRQcm94eVNlbGVjdG9yKGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZTtcblxuICAgIHZhciBwcm94eSA9IGZ1bmN0aW9uIG1hcFRvUHJvcHNQcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICByZXR1cm4gcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPyBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIDogcHJveHkubWFwVG9Qcm9wcyhzdGF0ZU9yRGlzcGF0Y2gpO1xuICAgIH07IC8vIGFsbG93IGRldGVjdEZhY3RvcnlBbmRWZXJpZnkgdG8gZ2V0IG93blByb3BzXG5cblxuICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gdHJ1ZTtcblxuICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBmdW5jdGlvbiBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBtYXBUb1Byb3BzO1xuICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKTtcbiAgICAgIHZhciBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuXG4gICAgICBpZiAodHlwZW9mIHByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBwcm9wcztcbiAgICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhwcm9wcyk7XG4gICAgICAgIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChwcm9wcywgZGlzcGxheU5hbWUsIG1ldGhvZE5hbWUpO1xuICAgICAgcmV0dXJuIHByb3BzO1xuICAgIH07XG5cbiAgICByZXR1cm4gcHJveHk7XG4gIH07XG59IiwiaW1wb3J0IHsgYmluZEFjdGlvbkNyZWF0b3JzIH0gZnJvbSAncmVkdXgnO1xuaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24obWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWFwRGlzcGF0Y2hUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcERpc3BhdGNoVG9Qcm9wcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwRGlzcGF0Y2hUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGlzcGF0Y2g6IGRpc3BhdGNoXG4gICAgfTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzT2JqZWN0KG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gbWFwRGlzcGF0Y2hUb1Byb3BzICYmIHR5cGVvZiBtYXBEaXNwYXRjaFRvUHJvcHMgPT09ICdvYmplY3QnID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3JzKG1hcERpc3BhdGNoVG9Qcm9wcywgZGlzcGF0Y2gpO1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzTWlzc2luZywgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzT2JqZWN0XTsiLCJpbXBvcnQgeyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50LCB3cmFwTWFwVG9Qcm9wc0Z1bmMgfSBmcm9tICcuL3dyYXBNYXBUb1Byb3BzJztcbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbihtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXBTdGF0ZVRvUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwU3RhdGVUb1Byb3BzLCAnbWFwU3RhdGVUb1Byb3BzJykgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZyhtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuICFtYXBTdGF0ZVRvUHJvcHMgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge307XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGRlZmF1bHQgW3doZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWFwU3RhdGVUb1Byb3BzSXNNaXNzaW5nXTsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBvd25Qcm9wcywgc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRNZXJnZVByb3BzUHJveHkoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgICBwdXJlID0gX3JlZi5wdXJlLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZi5hcmVNZXJnZWRQcm9wc0VxdWFsO1xuICAgIHZhciBoYXNSdW5PbmNlID0gZmFsc2U7XG4gICAgdmFyIG1lcmdlZFByb3BzO1xuICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZVByb3BzUHJveHkoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgICAgIHZhciBuZXh0TWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcblxuICAgICAgaWYgKGhhc1J1bk9uY2UpIHtcbiAgICAgICAgaWYgKCFwdXJlIHx8ICFhcmVNZXJnZWRQcm9wc0VxdWFsKG5leHRNZXJnZWRQcm9wcywgbWVyZ2VkUHJvcHMpKSBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhhc1J1bk9uY2UgPSB0cnVlO1xuICAgICAgICBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KG1lcmdlZFByb3BzLCBkaXNwbGF5TmFtZSwgJ21lcmdlUHJvcHMnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICAgIH07XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtZXJnZVByb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuICFtZXJnZVByb3BzID8gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkZWZhdWx0TWVyZ2VQcm9wcztcbiAgfSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24sIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkXTsiLCJpbXBvcnQgd2FybmluZyBmcm9tICcuLi91dGlscy93YXJuaW5nJztcblxuZnVuY3Rpb24gdmVyaWZ5KHNlbGVjdG9yLCBtZXRob2ROYW1lLCBkaXNwbGF5TmFtZSkge1xuICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCB2YWx1ZSBmb3IgXCIgKyBtZXRob2ROYW1lICsgXCIgaW4gXCIgKyBkaXNwbGF5TmFtZSArIFwiLlwiKTtcbiAgfSBlbHNlIGlmIChtZXRob2ROYW1lID09PSAnbWFwU3RhdGVUb1Byb3BzJyB8fCBtZXRob2ROYW1lID09PSAnbWFwRGlzcGF0Y2hUb1Byb3BzJykge1xuICAgIGlmICghc2VsZWN0b3IuaGFzT3duUHJvcGVydHkoJ2RlcGVuZHNPbk93blByb3BzJykpIHtcbiAgICAgIHdhcm5pbmcoXCJUaGUgc2VsZWN0b3IgZm9yIFwiICsgbWV0aG9kTmFtZSArIFwiIG9mIFwiICsgZGlzcGxheU5hbWUgKyBcIiBkaWQgbm90IHNwZWNpZnkgYSB2YWx1ZSBmb3IgZGVwZW5kc09uT3duUHJvcHMuXCIpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlTdWJzZWxlY3RvcnMobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BsYXlOYW1lKSB7XG4gIHZlcmlmeShtYXBTdGF0ZVRvUHJvcHMsICdtYXBTdGF0ZVRvUHJvcHMnLCBkaXNwbGF5TmFtZSk7XG4gIHZlcmlmeShtYXBEaXNwYXRjaFRvUHJvcHMsICdtYXBEaXNwYXRjaFRvUHJvcHMnLCBkaXNwbGF5TmFtZSk7XG4gIHZlcmlmeShtZXJnZVByb3BzLCAnbWVyZ2VQcm9wcycsIGRpc3BsYXlOYW1lKTtcbn0iLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCB2ZXJpZnlTdWJzZWxlY3RvcnMgZnJvbSAnLi92ZXJpZnlTdWJzZWxlY3RvcnMnO1xuZXhwb3J0IGZ1bmN0aW9uIGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3Ioc3RhdGUsIG93blByb3BzKSB7XG4gICAgcmV0dXJuIG1lcmdlUHJvcHMobWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyksIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpLCBvd25Qcm9wcyk7XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBfcmVmKSB7XG4gIHZhciBhcmVTdGF0ZXNFcXVhbCA9IF9yZWYuYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsID0gX3JlZi5hcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsID0gX3JlZi5hcmVTdGF0ZVByb3BzRXF1YWw7XG4gIHZhciBoYXNSdW5BdExlYXN0T25jZSA9IGZhbHNlO1xuICB2YXIgc3RhdGU7XG4gIHZhciBvd25Qcm9wcztcbiAgdmFyIHN0YXRlUHJvcHM7XG4gIHZhciBkaXNwYXRjaFByb3BzO1xuICB2YXIgbWVyZ2VkUHJvcHM7XG5cbiAgZnVuY3Rpb24gaGFuZGxlRmlyc3RDYWxsKGZpcnN0U3RhdGUsIGZpcnN0T3duUHJvcHMpIHtcbiAgICBzdGF0ZSA9IGZpcnN0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBmaXJzdE93blByb3BzO1xuICAgIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICBoYXNSdW5BdExlYXN0T25jZSA9IHRydWU7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpIHtcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgaWYgKG1hcERpc3BhdGNoVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgZGlzcGF0Y2hQcm9wcyA9IG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHMoKSB7XG4gICAgaWYgKG1hcFN0YXRlVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgc3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1N0YXRlKCkge1xuICAgIHZhciBuZXh0U3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZVByb3BzQ2hhbmdlZCA9ICFhcmVTdGF0ZVByb3BzRXF1YWwobmV4dFN0YXRlUHJvcHMsIHN0YXRlUHJvcHMpO1xuICAgIHN0YXRlUHJvcHMgPSBuZXh0U3RhdGVQcm9wcztcbiAgICBpZiAoc3RhdGVQcm9wc0NoYW5nZWQpIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgdmFyIHByb3BzQ2hhbmdlZCA9ICFhcmVPd25Qcm9wc0VxdWFsKG5leHRPd25Qcm9wcywgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZUNoYW5nZWQgPSAhYXJlU3RhdGVzRXF1YWwobmV4dFN0YXRlLCBzdGF0ZSk7XG4gICAgc3RhdGUgPSBuZXh0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBuZXh0T3duUHJvcHM7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCAmJiBzdGF0ZUNoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdQcm9wc0FuZE5ld1N0YXRlKCk7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1Byb3BzKCk7XG4gICAgaWYgKHN0YXRlQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1N0YXRlKCk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3IobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIHtcbiAgICByZXR1cm4gaGFzUnVuQXRMZWFzdE9uY2UgPyBoYW5kbGVTdWJzZXF1ZW50Q2FsbHMobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIDogaGFuZGxlRmlyc3RDYWxsKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKTtcbiAgfTtcbn0gLy8gVE9ETzogQWRkIG1vcmUgY29tbWVudHNcbi8vIElmIHB1cmUgaXMgdHJ1ZSwgdGhlIHNlbGVjdG9yIHJldHVybmVkIGJ5IHNlbGVjdG9yRmFjdG9yeSB3aWxsIG1lbW9pemUgaXRzIHJlc3VsdHMsXG4vLyBhbGxvd2luZyBjb25uZWN0QWR2YW5jZWQncyBzaG91bGRDb21wb25lbnRVcGRhdGUgdG8gcmV0dXJuIGZhbHNlIGlmIGZpbmFsXG4vLyBwcm9wcyBoYXZlIG5vdCBjaGFuZ2VkLiBJZiBmYWxzZSwgdGhlIHNlbGVjdG9yIHdpbGwgYWx3YXlzIHJldHVybiBhIG5ld1xuLy8gb2JqZWN0IGFuZCBzaG91bGRDb21wb25lbnRVcGRhdGUgd2lsbCBhbHdheXMgcmV0dXJuIHRydWUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkoZGlzcGF0Y2gsIF9yZWYyKSB7XG4gIHZhciBpbml0TWFwU3RhdGVUb1Byb3BzID0gX3JlZjIuaW5pdE1hcFN0YXRlVG9Qcm9wcyxcbiAgICAgIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBfcmVmMi5pbml0TWFwRGlzcGF0Y2hUb1Byb3BzLFxuICAgICAgaW5pdE1lcmdlUHJvcHMgPSBfcmVmMi5pbml0TWVyZ2VQcm9wcyxcbiAgICAgIG9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiaW5pdE1hcFN0YXRlVG9Qcm9wc1wiLCBcImluaXRNYXBEaXNwYXRjaFRvUHJvcHNcIiwgXCJpbml0TWVyZ2VQcm9wc1wiXSk7XG5cbiAgdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGluaXRNYXBTdGF0ZVRvUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuICB2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG4gIHZhciBtZXJnZVByb3BzID0gaW5pdE1lcmdlUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmVyaWZ5U3Vic2VsZWN0b3JzKG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBvcHRpb25zLmRpc3BsYXlOYW1lKTtcbiAgfVxuXG4gIHZhciBzZWxlY3RvckZhY3RvcnkgPSBvcHRpb25zLnB1cmUgPyBwdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeSA6IGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3Rvcnk7XG4gIHJldHVybiBzZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBvcHRpb25zKTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGNvbm5lY3RBZHZhbmNlZCBmcm9tICcuLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4uL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5pbXBvcnQgZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcERpc3BhdGNoVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcFN0YXRlVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgZnJvbSAnLi9tZXJnZVByb3BzJztcbmltcG9ydCBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IGZyb20gJy4vc2VsZWN0b3JGYWN0b3J5Jztcbi8qXG4gIGNvbm5lY3QgaXMgYSBmYWNhZGUgb3ZlciBjb25uZWN0QWR2YW5jZWQuIEl0IHR1cm5zIGl0cyBhcmdzIGludG8gYSBjb21wYXRpYmxlXG4gIHNlbGVjdG9yRmFjdG9yeSwgd2hpY2ggaGFzIHRoZSBzaWduYXR1cmU6XG5cbiAgICAoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykgPT4gbmV4dEZpbmFsUHJvcHNcbiAgXG4gIGNvbm5lY3QgcGFzc2VzIGl0cyBhcmdzIHRvIGNvbm5lY3RBZHZhbmNlZCBhcyBvcHRpb25zLCB3aGljaCB3aWxsIGluIHR1cm4gcGFzcyB0aGVtIHRvXG4gIHNlbGVjdG9yRmFjdG9yeSBlYWNoIHRpbWUgYSBDb25uZWN0IGNvbXBvbmVudCBpbnN0YW5jZSBpcyBpbnN0YW50aWF0ZWQgb3IgaG90IHJlbG9hZGVkLlxuXG4gIHNlbGVjdG9yRmFjdG9yeSByZXR1cm5zIGEgZmluYWwgcHJvcHMgc2VsZWN0b3IgZnJvbSBpdHMgbWFwU3RhdGVUb1Byb3BzLFxuICBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLCBtZXJnZVByb3BzLFxuICBtZXJnZVByb3BzRmFjdG9yaWVzLCBhbmQgcHVyZSBhcmdzLlxuXG4gIFRoZSByZXN1bHRpbmcgZmluYWwgcHJvcHMgc2VsZWN0b3IgaXMgY2FsbGVkIGJ5IHRoZSBDb25uZWN0IGNvbXBvbmVudCBpbnN0YW5jZSB3aGVuZXZlclxuICBpdCByZWNlaXZlcyBuZXcgcHJvcHMgb3Igc3RvcmUgc3RhdGUuXG4gKi9cblxuZnVuY3Rpb24gbWF0Y2goYXJnLCBmYWN0b3JpZXMsIG5hbWUpIHtcbiAgZm9yICh2YXIgaSA9IGZhY3Rvcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIHZhciByZXN1bHQgPSBmYWN0b3JpZXNbaV0oYXJnKTtcbiAgICBpZiAocmVzdWx0KSByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmFsdWUgb2YgdHlwZSBcIiArIHR5cGVvZiBhcmcgKyBcIiBmb3IgXCIgKyBuYW1lICsgXCIgYXJndW1lbnQgd2hlbiBjb25uZWN0aW5nIGNvbXBvbmVudCBcIiArIG9wdGlvbnMud3JhcHBlZENvbXBvbmVudE5hbWUgKyBcIi5cIik7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0cmljdEVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGI7XG59IC8vIGNyZWF0ZUNvbm5lY3Qgd2l0aCBkZWZhdWx0IGFyZ3MgYnVpbGRzIHRoZSAnb2ZmaWNpYWwnIGNvbm5lY3QgYmVoYXZpb3IuIENhbGxpbmcgaXQgd2l0aFxuLy8gZGlmZmVyZW50IG9wdGlvbnMgb3BlbnMgdXAgc29tZSB0ZXN0aW5nIGFuZCBleHRlbnNpYmlsaXR5IHNjZW5hcmlvc1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0KF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBfcmVmJGNvbm5lY3RIT0MgPSBfcmVmLmNvbm5lY3RIT0MsXG4gICAgICBjb25uZWN0SE9DID0gX3JlZiRjb25uZWN0SE9DID09PSB2b2lkIDAgPyBjb25uZWN0QWR2YW5jZWQgOiBfcmVmJGNvbm5lY3RIT0MsXG4gICAgICBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPSBfcmVmLm1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwU3RhdGVUb1Byb3BzRiA9PT0gdm9pZCAwID8gZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwU3RhdGVUb1Byb3BzRixcbiAgICAgIF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9IF9yZWYubWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLFxuICAgICAgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzID0gX3JlZiRtYXBEaXNwYXRjaFRvUHJvID09PSB2b2lkIDAgPyBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIDogX3JlZiRtYXBEaXNwYXRjaFRvUHJvLFxuICAgICAgX3JlZiRtZXJnZVByb3BzRmFjdG9yID0gX3JlZi5tZXJnZVByb3BzRmFjdG9yaWVzLFxuICAgICAgbWVyZ2VQcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9PT0gdm9pZCAwID8gZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1lcmdlUHJvcHNGYWN0b3IsXG4gICAgICBfcmVmJHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYuc2VsZWN0b3JGYWN0b3J5LFxuICAgICAgc2VsZWN0b3JGYWN0b3J5ID0gX3JlZiRzZWxlY3RvckZhY3RvcnkgPT09IHZvaWQgMCA/IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgOiBfcmVmJHNlbGVjdG9yRmFjdG9yeTtcblxuICByZXR1cm4gZnVuY3Rpb24gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgX3JlZjIpIHtcbiAgICBpZiAoX3JlZjIgPT09IHZvaWQgMCkge1xuICAgICAgX3JlZjIgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgX3JlZjMgPSBfcmVmMixcbiAgICAgICAgX3JlZjMkcHVyZSA9IF9yZWYzLnB1cmUsXG4gICAgICAgIHB1cmUgPSBfcmVmMyRwdXJlID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjMkcHVyZSxcbiAgICAgICAgX3JlZjMkYXJlU3RhdGVzRXF1YWwgPSBfcmVmMy5hcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVzRXF1YWwgPSBfcmVmMyRhcmVTdGF0ZXNFcXVhbCA9PT0gdm9pZCAwID8gc3RyaWN0RXF1YWwgOiBfcmVmMyRhcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgX3JlZjMkYXJlT3duUHJvcHNFcXVhID0gX3JlZjMuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYzJGFyZU93blByb3BzRXF1YSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlT3duUHJvcHNFcXVhLFxuICAgICAgICBfcmVmMyRhcmVTdGF0ZVByb3BzRXEgPSBfcmVmMy5hcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYzJGFyZVN0YXRlUHJvcHNFcSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlU3RhdGVQcm9wc0VxLFxuICAgICAgICBfcmVmMyRhcmVNZXJnZWRQcm9wc0UgPSBfcmVmMy5hcmVNZXJnZWRQcm9wc0VxdWFsLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZjMkYXJlTWVyZ2VkUHJvcHNFID09PSB2b2lkIDAgPyBzaGFsbG93RXF1YWwgOiBfcmVmMyRhcmVNZXJnZWRQcm9wc0UsXG4gICAgICAgIGV4dHJhT3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYzLCBbXCJwdXJlXCIsIFwiYXJlU3RhdGVzRXF1YWxcIiwgXCJhcmVPd25Qcm9wc0VxdWFsXCIsIFwiYXJlU3RhdGVQcm9wc0VxdWFsXCIsIFwiYXJlTWVyZ2VkUHJvcHNFcXVhbFwiXSk7XG5cbiAgICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IG1hdGNoKG1hcFN0YXRlVG9Qcm9wcywgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLCAnbWFwU3RhdGVUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBtYXRjaChtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpO1xuICAgIHZhciBpbml0TWVyZ2VQcm9wcyA9IG1hdGNoKG1lcmdlUHJvcHMsIG1lcmdlUHJvcHNGYWN0b3JpZXMsICdtZXJnZVByb3BzJyk7XG4gICAgcmV0dXJuIGNvbm5lY3RIT0Moc2VsZWN0b3JGYWN0b3J5LCBfZXh0ZW5kcyh7XG4gICAgICAvLyB1c2VkIGluIGVycm9yIG1lc3NhZ2VzXG4gICAgICBtZXRob2ROYW1lOiAnY29ubmVjdCcsXG4gICAgICAvLyB1c2VkIHRvIGNvbXB1dGUgQ29ubmVjdCdzIGRpc3BsYXlOYW1lIGZyb20gdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgZGlzcGxheU5hbWUuXG4gICAgICBnZXREaXNwbGF5TmFtZTogZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gXCJDb25uZWN0KFwiICsgbmFtZSArIFwiKVwiO1xuICAgICAgfSxcbiAgICAgIC8vIGlmIG1hcFN0YXRlVG9Qcm9wcyBpcyBmYWxzeSwgdGhlIENvbm5lY3QgY29tcG9uZW50IGRvZXNuJ3Qgc3Vic2NyaWJlIHRvIHN0b3JlIHN0YXRlIGNoYW5nZXNcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogQm9vbGVhbihtYXBTdGF0ZVRvUHJvcHMpLFxuICAgICAgLy8gcGFzc2VkIHRocm91Z2ggdG8gc2VsZWN0b3JGYWN0b3J5XG4gICAgICBpbml0TWFwU3RhdGVUb1Byb3BzOiBpbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wczogaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzOiBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIHB1cmU6IHB1cmUsXG4gICAgICBhcmVTdGF0ZXNFcXVhbDogYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsOiBhcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsOiBhcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsOiBhcmVNZXJnZWRQcm9wc0VxdWFsXG4gICAgfSwgZXh0cmFPcHRpb25zKSk7XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDb25uZWN0KCk7IiwiaW1wb3J0IFByb3ZpZGVyLCB7IGNyZWF0ZVByb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL1Byb3ZpZGVyJztcbmltcG9ydCBjb25uZWN0QWR2YW5jZWQgZnJvbSAnLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2Nvbm5lY3QvY29ubmVjdCc7XG5leHBvcnQgeyBQcm92aWRlciwgY3JlYXRlUHJvdmlkZXIsIGNvbm5lY3RBZHZhbmNlZCwgY29ubmVjdCB9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export __DO_NOT_USE__ActionTypes */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return applyMiddleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return bindActionCreators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return combineReducers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return compose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return createStore; });\n/* harmony import */ var symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);\n\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split(\'\').join(\'.\');\n};\n\nvar ActionTypes = {\n  INIT: "@@redux/INIT" + randomString(),\n  REPLACE: "@@redux/REPLACE" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'function\' || typeof enhancer === \'function\' && typeof arguments[3] === \'function\') {\n    throw new Error(\'It looks like you are passing several store enhancers to \' + \'createStore(). This is not supported. Instead, compose them \' + \'together to a single function.\');\n  }\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'undefined\') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== \'undefined\') {\n    if (typeof enhancer !== \'function\') {\n      throw new Error(\'Expected the enhancer to be a function.\');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== \'function\') {\n    throw new Error(\'Expected the reducer to be a function.\');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(\'You may not call store.getState() while the reducer is executing. \' + \'The reducer has already received the state as an argument. \' + \'Pass it down from the top reducer instead of reading it from the store.\');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== \'function\') {\n      throw new Error(\'Expected the listener to be a function.\');\n    }\n\n    if (isDispatching) {\n      throw new Error(\'You may not call store.subscribe() while the reducer is executing. \' + \'If you would like to be notified after the store has been updated, subscribe from a \' + \'component and invoke store.getState() in the callback to access the latest state. \' + \'See https://redux.js.org/api-reference/store#subscribelistener for more details.\');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(\'You may not unsubscribe from a store listener while the reducer is executing. \' + \'See https://redux.js.org/api-reference/store#subscribelistener for more details.\');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(\'Actions must be plain objects. \' + \'Use custom middleware for async actions.\');\n    }\n\n    if (typeof action.type === \'undefined\') {\n      throw new Error(\'Actions may not have an undefined "type" property. \' + \'Have you misspelled a constant?\');\n    }\n\n    if (isDispatching) {\n      throw new Error(\'Reducers may not dispatch actions.\');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== \'function\') {\n      throw new Error(\'Expected the nextReducer to be a function.\');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== \'object\' || observer === null) {\n          throw new TypeError(\'Expected the observer to be an object.\');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an "INIT" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== \'undefined\' && typeof console.error === \'function\') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // "break on all exceptions" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && "action \\"" + String(actionType) + "\\"" || \'an action\';\n  return "Given " + actionDescription + ", reducer \\"" + key + "\\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? \'preloadedState argument passed to createStore\' : \'previous state received by the reducer\';\n\n  if (reducerKeys.length === 0) {\n    return \'Store does not have a valid reducer. Make sure the argument passed \' + \'to combineReducers is an object whose values are reducers.\';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return "The " + argumentName + " has unexpected type of \\"" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + "\\". Expected argument to be an object with the following " + ("keys: \\"" + reducerKeys.join(\'", "\') + "\\"");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return "Unexpected " + (unexpectedKeys.length > 1 ? \'keys\' : \'key\') + " " + ("\\"" + unexpectedKeys.join(\'", "\') + "\\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\\"" + reducerKeys.join(\'", "\') + "\\". Unexpected keys will be ignored.");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === \'undefined\') {\n      throw new Error("Reducer \\"" + key + "\\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don\'t want to set a value for this reducer, " + "you can use null instead of undefined.");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === \'undefined\') {\n      throw new Error("Reducer \\"" + key + "\\" returned undefined when probed with a random type. " + ("Don\'t try to handle " + ActionTypes.INIT + " or other actions in \\"redux/*\\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (false) {}\n\n    if (typeof reducers[key] === \'function\') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don\'t warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (false) {}\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (false) { var warningMessage; }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === \'undefined\') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === \'function\') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== \'object\' || actionCreators === null) {\n    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? \'null\' : typeof actionCreators) + ". " + "Did you write \\"import ActionCreators from\\" instead of \\"import * as ActionCreators from\\"?");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === \'function\') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(\'Dispatching while constructing your middleware is not allowed. \' + \'Other middleware would not be applied to this dispatch.\');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== \'production\', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (false) {}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _extends; });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcz9jMzFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDZjtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n')},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _objectWithoutPropertiesLoose; });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcz9jY2I1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n')},,function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {}\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanM/NDBiNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLEtBQXFDLEVBQUUsRUFJMUM7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMseUJBQXlCLEVBQUU7QUFDckU7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export loadItemsRequest */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return loadItemsSuccess; });\n/* unused harmony export loadItemsError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return createEntityRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return createEntitySuccess; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addEntityRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return addEntitySuccess; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return close; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return open; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return setValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return createEntityForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return reducer; });\n/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(97);\n/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98);\n/**\n * External dependencies\n */\n\nconst {\n  loadItemsRequest,\n  loadItemsSuccess,\n  loadItemsError,\n  createEntityRequest,\n  createEntitySuccess,\n  addEntityRequest,\n  addEntitySuccess,\n  close,\n  open,\n  setValue,\n  createEntityForm\n} = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])("LOAD_ITEMS_REQUEST", "LOAD_ITEMS_SUCCESS", "LOAD_ITEMS_ERROR", "CREATE_ENTITY_REQUEST", "CREATE_ENTITY_SUCCESS", "ADD_ENTITY_REQUEST", "ADD_ENTITY_SUCCESS", "CLOSE", "OPEN", "SET_VALUE", "CREATE_ENTITY_FORM");\nconst reducer = Object(redux_actions__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])({\n  [loadItemsSuccess]: (state, action) => ({ ...state,\n    items: action.payload\n  }),\n  [close]: state => ({ ...state,\n    open: false\n  }),\n  [open]: state => ({ ...state,\n    open: state.enabled\n  }),\n  [setValue]: (state, action) => ({ ...state,\n    value: action.payload,\n    enabled: "undefined" !== typeof action.payload && "" !== action.payload\n  })\n}, {\n  open: false,\n  items: [],\n  value: "",\n  enabled: false\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9jb21wb25lbnRzL0FkZEVudGl0eS9hY3Rpb25zLmpzPzU5OTUiXSwibmFtZXMiOlsibG9hZEl0ZW1zUmVxdWVzdCIsImxvYWRJdGVtc1N1Y2Nlc3MiLCJsb2FkSXRlbXNFcnJvciIsImNyZWF0ZUVudGl0eVJlcXVlc3QiLCJjcmVhdGVFbnRpdHlTdWNjZXNzIiwiYWRkRW50aXR5UmVxdWVzdCIsImFkZEVudGl0eVN1Y2Nlc3MiLCJjbG9zZSIsIm9wZW4iLCJzZXRWYWx1ZSIsImNyZWF0ZUVudGl0eUZvcm0iLCJjcmVhdGVBY3Rpb25zIiwicmVkdWNlciIsImhhbmRsZUFjdGlvbnMiLCJzdGF0ZSIsImFjdGlvbiIsIml0ZW1zIiwicGF5bG9hZCIsImVuYWJsZWQiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7QUFHQTtBQUVPLE1BQU07QUFDWEEsa0JBRFc7QUFFWEMsa0JBRlc7QUFHWEMsZ0JBSFc7QUFJWEMscUJBSlc7QUFLWEMscUJBTFc7QUFNWEMsa0JBTlc7QUFPWEMsa0JBUFc7QUFRWEMsT0FSVztBQVNYQyxNQVRXO0FBVVhDLFVBVlc7QUFXWEM7QUFYVyxJQVlUQyxxRUFBYSxDQUNmLG9CQURlLEVBRWYsb0JBRmUsRUFHZixrQkFIZSxFQUlmLHVCQUplLEVBS2YsdUJBTGUsRUFNZixvQkFOZSxFQU9mLG9CQVBlLEVBUWYsT0FSZSxFQVNmLE1BVGUsRUFVZixXQVZlLEVBV2Ysb0JBWGUsQ0FaVjtBQTBCQSxNQUFNQyxPQUFPLEdBQUdDLHFFQUFhLENBQ2xDO0FBQ0UsR0FBQ1osZ0JBQUQsR0FBb0IsQ0FBQ2EsS0FBRCxFQUFRQyxNQUFSLE1BQW9CLEVBQ3RDLEdBQUdELEtBRG1DO0FBRXRDRSxTQUFLLEVBQUVELE1BQU0sQ0FBQ0U7QUFGd0IsR0FBcEIsQ0FEdEI7QUFLRSxHQUFDVixLQUFELEdBQVNPLEtBQUssS0FBSyxFQUFFLEdBQUdBLEtBQUw7QUFBWU4sUUFBSSxFQUFFO0FBQWxCLEdBQUwsQ0FMaEI7QUFNRSxHQUFDQSxJQUFELEdBQVFNLEtBQUssS0FBSyxFQUFFLEdBQUdBLEtBQUw7QUFBWU4sUUFBSSxFQUFFTSxLQUFLLENBQUNJO0FBQXhCLEdBQUwsQ0FOZjtBQU9FLEdBQUNULFFBQUQsR0FBWSxDQUFDSyxLQUFELEVBQVFDLE1BQVIsTUFBb0IsRUFDOUIsR0FBR0QsS0FEMkI7QUFFOUJLLFNBQUssRUFBRUosTUFBTSxDQUFDRSxPQUZnQjtBQUc5QkMsV0FBTyxFQUFFLGdCQUFnQixPQUFPSCxNQUFNLENBQUNFLE9BQTlCLElBQXlDLE9BQU9GLE1BQU0sQ0FBQ0U7QUFIbEMsR0FBcEI7QUFQZCxDQURrQyxFQWNsQztBQUFFVCxNQUFJLEVBQUUsS0FBUjtBQUFlUSxPQUFLLEVBQUUsRUFBdEI7QUFBMEJHLE9BQUssRUFBRSxFQUFqQztBQUFxQ0QsU0FBTyxFQUFFO0FBQTlDLENBZGtDLENBQTdCIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3JlYXRlQWN0aW9ucywgaGFuZGxlQWN0aW9ucyB9IGZyb20gXCJyZWR1eC1hY3Rpb25zXCI7XG5cbmV4cG9ydCBjb25zdCB7XG4gIGxvYWRJdGVtc1JlcXVlc3QsXG4gIGxvYWRJdGVtc1N1Y2Nlc3MsXG4gIGxvYWRJdGVtc0Vycm9yLFxuICBjcmVhdGVFbnRpdHlSZXF1ZXN0LFxuICBjcmVhdGVFbnRpdHlTdWNjZXNzLFxuICBhZGRFbnRpdHlSZXF1ZXN0LFxuICBhZGRFbnRpdHlTdWNjZXNzLFxuICBjbG9zZSxcbiAgb3BlbixcbiAgc2V0VmFsdWUsXG4gIGNyZWF0ZUVudGl0eUZvcm1cbn0gPSBjcmVhdGVBY3Rpb25zKFxuICBcIkxPQURfSVRFTVNfUkVRVUVTVFwiLFxuICBcIkxPQURfSVRFTVNfU1VDQ0VTU1wiLFxuICBcIkxPQURfSVRFTVNfRVJST1JcIixcbiAgXCJDUkVBVEVfRU5USVRZX1JFUVVFU1RcIixcbiAgXCJDUkVBVEVfRU5USVRZX1NVQ0NFU1NcIixcbiAgXCJBRERfRU5USVRZX1JFUVVFU1RcIixcbiAgXCJBRERfRU5USVRZX1NVQ0NFU1NcIixcbiAgXCJDTE9TRVwiLFxuICBcIk9QRU5cIixcbiAgXCJTRVRfVkFMVUVcIixcbiAgXCJDUkVBVEVfRU5USVRZX0ZPUk1cIlxuKTtcblxuZXhwb3J0IGNvbnN0IHJlZHVjZXIgPSBoYW5kbGVBY3Rpb25zKFxuICB7XG4gICAgW2xvYWRJdGVtc1N1Y2Nlc3NdOiAoc3RhdGUsIGFjdGlvbikgPT4gKHtcbiAgICAgIC4uLnN0YXRlLFxuICAgICAgaXRlbXM6IGFjdGlvbi5wYXlsb2FkXG4gICAgfSksXG4gICAgW2Nsb3NlXTogc3RhdGUgPT4gKHsgLi4uc3RhdGUsIG9wZW46IGZhbHNlIH0pLFxuICAgIFtvcGVuXTogc3RhdGUgPT4gKHsgLi4uc3RhdGUsIG9wZW46IHN0YXRlLmVuYWJsZWQgfSksXG4gICAgW3NldFZhbHVlXTogKHN0YXRlLCBhY3Rpb24pID0+ICh7XG4gICAgICAuLi5zdGF0ZSxcbiAgICAgIHZhbHVlOiBhY3Rpb24ucGF5bG9hZCxcbiAgICAgIGVuYWJsZWQ6IFwidW5kZWZpbmVkXCIgIT09IHR5cGVvZiBhY3Rpb24ucGF5bG9hZCAmJiBcIlwiICE9PSBhY3Rpb24ucGF5bG9hZFxuICAgIH0pXG4gIH0sXG4gIHsgb3BlbjogZmFsc2UsIGl0ZW1zOiBbXSwgdmFsdWU6IFwiXCIsIGVuYWJsZWQ6IGZhbHNlIH1cbik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ANNOTATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return TOGGLE_ENTITY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return UPDATE_OCCURRENCES_FOR_ENTITY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return TOGGLE_LINK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return RECEIVE_ANALYSIS_RESULTS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return SET_CURRENT_ENTITY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return SET_ENTITY_FILTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return EDITOR_SELECTION_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return TOGGLE_LINK_SUCCESS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ADD_ENTITY; });\n/**\n * Define the `ANNOTATION` action name, used when an annotation is (de)selected\n * in TinyMCE.\n *\n * @since 3.11.0\n * @type {string}\n */\nconst ANNOTATION = "ANNOTATION";\n/**\n * Define the `TOGGLE_ENTITY` action name, used when the selection state of an\n * an entity must be toggled on / off.\n *\n * @since 3.11.0\n * @type {string}\n */\n\nconst TOGGLE_ENTITY = "TOGGLE_ENTITY";\n/**\n * Define the `UPDATE_OCCURRENCES_FOR_ENTITY` action name, used to catch\n * `updateOccur(r)encesForEntity` events from the legacy Angular application.\n *\n * @since 3.11.0\n * @type {string}\n */\n\nconst UPDATE_OCCURRENCES_FOR_ENTITY = "UPDATE_OCCURRENCES_FOR_ENTITY";\n/**\n * Define the `TOGGLE_LINK` action name, used to enable/disable linking an\n * entity.\n *\n * @since 3.11.0\n * @type {string}\n */\n\nconst TOGGLE_LINK = "TOGGLE_LINK";\n/**\n * Define the `RECEIVE_ANALYSIS_RESULTS` action name, fired when analysis\n * results are received.\n *\n * @since 3.11.0\n * @type {string}\n */\n\nconst RECEIVE_ANALYSIS_RESULTS = "RECEIVE_ANALYSIS_RESULTS";\n/**\n * Define the `SET_CURRENT_ENTITY` action name, fired to edit an entity inline.\n *\n * @since 3.11.0\n * @type {string}\n */\n\nconst SET_CURRENT_ENTITY = "SET_CURRENT_ENTITY";\nconst SET_ENTITY_FILTER = "SET_ENTITY_FILTER";\n/**\n * Define the `EDITOR_SELECTION_CHANGED` action name, fired when the selection has changed\n * in the main editor.\n *\n * @since 3.18.4\n * @type {string}\n */\n\nconst EDITOR_SELECTION_CHANGED = "EDITOR_SELECTION_CHANGED";\nconst TOGGLE_LINK_SUCCESS = "TOGGLE_LINK_SUCCESS";\nconst ADD_ENTITY = "ADD_ENTITY";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9jb25zdGFudHMvQWN0aW9uVHlwZXMuanM/YzJiYyJdLCJuYW1lcyI6WyJBTk5PVEFUSU9OIiwiVE9HR0xFX0VOVElUWSIsIlVQREFURV9PQ0NVUlJFTkNFU19GT1JfRU5USVRZIiwiVE9HR0xFX0xJTksiLCJSRUNFSVZFX0FOQUxZU0lTX1JFU1VMVFMiLCJTRVRfQ1VSUkVOVF9FTlRJVFkiLCJTRVRfRU5USVRZX0ZJTFRFUiIsIkVESVRPUl9TRUxFQ1RJT05fQ0hBTkdFRCIsIlRPR0dMRV9MSU5LX1NVQ0NFU1MiLCJBRERfRU5USVRZIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O0FBT08sTUFBTUEsVUFBVSxHQUFHLFlBQW5CO0FBRVA7Ozs7Ozs7O0FBT08sTUFBTUMsYUFBYSxHQUFHLGVBQXRCO0FBRVA7Ozs7Ozs7O0FBT08sTUFBTUMsNkJBQTZCLEdBQUcsK0JBQXRDO0FBRVA7Ozs7Ozs7O0FBT08sTUFBTUMsV0FBVyxHQUFHLGFBQXBCO0FBRVA7Ozs7Ozs7O0FBT08sTUFBTUMsd0JBQXdCLEdBQUcsMEJBQWpDO0FBRVA7Ozs7Ozs7QUFNTyxNQUFNQyxrQkFBa0IsR0FBRyxvQkFBM0I7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxtQkFBMUI7QUFFUDs7Ozs7Ozs7QUFPTyxNQUFNQyx3QkFBd0IsR0FBRywwQkFBakM7QUFFQSxNQUFNQyxtQkFBbUIsR0FBRyxxQkFBNUI7QUFFQSxNQUFNQyxVQUFVLEdBQUcsWUFBbkIiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlZmluZSB0aGUgYEFOTk9UQVRJT05gIGFjdGlvbiBuYW1lLCB1c2VkIHdoZW4gYW4gYW5ub3RhdGlvbiBpcyAoZGUpc2VsZWN0ZWRcbiAqIGluIFRpbnlNQ0UuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IEFOTk9UQVRJT04gPSBcIkFOTk9UQVRJT05cIjtcblxuLyoqXG4gKiBEZWZpbmUgdGhlIGBUT0dHTEVfRU5USVRZYCBhY3Rpb24gbmFtZSwgdXNlZCB3aGVuIHRoZSBzZWxlY3Rpb24gc3RhdGUgb2YgYW5cbiAqIGFuIGVudGl0eSBtdXN0IGJlIHRvZ2dsZWQgb24gLyBvZmYuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IFRPR0dMRV9FTlRJVFkgPSBcIlRPR0dMRV9FTlRJVFlcIjtcblxuLyoqXG4gKiBEZWZpbmUgdGhlIGBVUERBVEVfT0NDVVJSRU5DRVNfRk9SX0VOVElUWWAgYWN0aW9uIG5hbWUsIHVzZWQgdG8gY2F0Y2hcbiAqIGB1cGRhdGVPY2N1cihyKWVuY2VzRm9yRW50aXR5YCBldmVudHMgZnJvbSB0aGUgbGVnYWN5IEFuZ3VsYXIgYXBwbGljYXRpb24uXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IFVQREFURV9PQ0NVUlJFTkNFU19GT1JfRU5USVRZID0gXCJVUERBVEVfT0NDVVJSRU5DRVNfRk9SX0VOVElUWVwiO1xuXG4vKipcbiAqIERlZmluZSB0aGUgYFRPR0dMRV9MSU5LYCBhY3Rpb24gbmFtZSwgdXNlZCB0byBlbmFibGUvZGlzYWJsZSBsaW5raW5nIGFuXG4gKiBlbnRpdHkuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IFRPR0dMRV9MSU5LID0gXCJUT0dHTEVfTElOS1wiO1xuXG4vKipcbiAqIERlZmluZSB0aGUgYFJFQ0VJVkVfQU5BTFlTSVNfUkVTVUxUU2AgYWN0aW9uIG5hbWUsIGZpcmVkIHdoZW4gYW5hbHlzaXNcbiAqIHJlc3VsdHMgYXJlIHJlY2VpdmVkLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBSRUNFSVZFX0FOQUxZU0lTX1JFU1VMVFMgPSBcIlJFQ0VJVkVfQU5BTFlTSVNfUkVTVUxUU1wiO1xuXG4vKipcbiAqIERlZmluZSB0aGUgYFNFVF9DVVJSRU5UX0VOVElUWWAgYWN0aW9uIG5hbWUsIGZpcmVkIHRvIGVkaXQgYW4gZW50aXR5IGlubGluZS5cbiAqXG4gKiBAc2luY2UgMy4xMS4wXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgU0VUX0NVUlJFTlRfRU5USVRZID0gXCJTRVRfQ1VSUkVOVF9FTlRJVFlcIjtcblxuZXhwb3J0IGNvbnN0IFNFVF9FTlRJVFlfRklMVEVSID0gXCJTRVRfRU5USVRZX0ZJTFRFUlwiO1xuXG4vKipcbiAqIERlZmluZSB0aGUgYEVESVRPUl9TRUxFQ1RJT05fQ0hBTkdFRGAgYWN0aW9uIG5hbWUsIGZpcmVkIHdoZW4gdGhlIHNlbGVjdGlvbiBoYXMgY2hhbmdlZFxuICogaW4gdGhlIG1haW4gZWRpdG9yLlxuICpcbiAqIEBzaW5jZSAzLjE4LjRcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBFRElUT1JfU0VMRUNUSU9OX0NIQU5HRUQgPSBcIkVESVRPUl9TRUxFQ1RJT05fQ0hBTkdFRFwiO1xuXG5leHBvcnQgY29uc3QgVE9HR0xFX0xJTktfU1VDQ0VTUyA9IFwiVE9HR0xFX0xJTktfU1VDQ0VTU1wiO1xuXG5leHBvcnQgY29uc3QgQUREX0VOVElUWSA9IFwiQUREX0VOVElUWVwiO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ createAction; });\n\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(15);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isFunction.js\nvar isFunction = __webpack_require__(29);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/identity.js\nvar identity = __webpack_require__(27);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/isNull.js\n/* harmony default export */ var isNull = (function (value) {\n  return value === null;\n});\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/createAction.js\n\n\n\n\nfunction createAction(type, payloadCreator, metaCreator) {\n  if (payloadCreator === void 0) {\n    payloadCreator = identity["a" /* default */];\n  }\n\n  browser_default()(Object(isFunction["a" /* default */])(payloadCreator) || isNull(payloadCreator), \'Expected payloadCreator to be a function, undefined or null\');\n  var finalPayloadCreator = isNull(payloadCreator) || payloadCreator === identity["a" /* default */] ? identity["a" /* default */] : function (head) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return head instanceof Error ? head : payloadCreator.apply(void 0, [head].concat(args));\n  };\n  var hasMeta = Object(isFunction["a" /* default */])(metaCreator);\n  var typeString = type.toString();\n\n  var actionCreator = function actionCreator() {\n    var payload = finalPayloadCreator.apply(void 0, arguments);\n    var action = {\n      type: type\n    };\n\n    if (payload instanceof Error) {\n      action.error = true;\n    }\n\n    if (payload !== undefined) {\n      action.payload = payload;\n    }\n\n    if (hasMeta) {\n      action.meta = metaCreator.apply(void 0, arguments);\n    }\n\n    return action;\n  };\n\n  actionCreator.toString = function () {\n    return typeString;\n  };\n\n  return actionCreator;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc051bGwuanM/NjFhZSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy9jcmVhdGVBY3Rpb24uanM/Njk2MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBZ0I7QUFDaEI7QUFDQSxDQUFDLEU7O0FDRmlDO0FBQ1U7QUFDSjtBQUNKO0FBQ3JCO0FBQ2Y7QUFDQSxxQkFBcUIsMkJBQVE7QUFDN0I7O0FBRUEsRUFBRSxpQkFBUyxDQUFDLHFDQUFVLG9CQUFvQixNQUFNO0FBQ2hELDRCQUE0QixNQUFNLHVDQUF1QywyQkFBUSxHQUFHLDJCQUFRO0FBQzVGLDBGQUEwRixhQUFhO0FBQ3ZHO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQixxQ0FBVTtBQUMxQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gbnVsbDtcbn0pOyIsImltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCBpc0Z1bmN0aW9uIGZyb20gJy4vdXRpbHMvaXNGdW5jdGlvbic7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSAnLi91dGlscy9pZGVudGl0eSc7XG5pbXBvcnQgaXNOdWxsIGZyb20gJy4vdXRpbHMvaXNOdWxsJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUFjdGlvbih0eXBlLCBwYXlsb2FkQ3JlYXRvciwgbWV0YUNyZWF0b3IpIHtcbiAgaWYgKHBheWxvYWRDcmVhdG9yID09PSB2b2lkIDApIHtcbiAgICBwYXlsb2FkQ3JlYXRvciA9IGlkZW50aXR5O1xuICB9XG5cbiAgaW52YXJpYW50KGlzRnVuY3Rpb24ocGF5bG9hZENyZWF0b3IpIHx8IGlzTnVsbChwYXlsb2FkQ3JlYXRvciksICdFeHBlY3RlZCBwYXlsb2FkQ3JlYXRvciB0byBiZSBhIGZ1bmN0aW9uLCB1bmRlZmluZWQgb3IgbnVsbCcpO1xuICB2YXIgZmluYWxQYXlsb2FkQ3JlYXRvciA9IGlzTnVsbChwYXlsb2FkQ3JlYXRvcikgfHwgcGF5bG9hZENyZWF0b3IgPT09IGlkZW50aXR5ID8gaWRlbnRpdHkgOiBmdW5jdGlvbiAoaGVhZCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBoZWFkIGluc3RhbmNlb2YgRXJyb3IgPyBoZWFkIDogcGF5bG9hZENyZWF0b3IuYXBwbHkodm9pZCAwLCBbaGVhZF0uY29uY2F0KGFyZ3MpKTtcbiAgfTtcbiAgdmFyIGhhc01ldGEgPSBpc0Z1bmN0aW9uKG1ldGFDcmVhdG9yKTtcbiAgdmFyIHR5cGVTdHJpbmcgPSB0eXBlLnRvU3RyaW5nKCk7XG5cbiAgdmFyIGFjdGlvbkNyZWF0b3IgPSBmdW5jdGlvbiBhY3Rpb25DcmVhdG9yKCkge1xuICAgIHZhciBwYXlsb2FkID0gZmluYWxQYXlsb2FkQ3JlYXRvci5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgdmFyIGFjdGlvbiA9IHtcbiAgICAgIHR5cGU6IHR5cGVcbiAgICB9O1xuXG4gICAgaWYgKHBheWxvYWQgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgYWN0aW9uLmVycm9yID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAocGF5bG9hZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBhY3Rpb24ucGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgfVxuXG4gICAgaWYgKGhhc01ldGEpIHtcbiAgICAgIGFjdGlvbi5tZXRhID0gbWV0YUNyZWF0b3IuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBhY3Rpb247XG4gIH07XG5cbiAgYWN0aW9uQ3JlYXRvci50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdHlwZVN0cmluZztcbiAgfTtcblxuICByZXR1cm4gYWN0aW9uQ3JlYXRvcjtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n')},function(module,exports){eval('(function() { module.exports = this["ReactDOM"]; }());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1widGhpc1wiOlwiUmVhY3RET01cIn0/OWMzMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1DQUFtQyxFQUFFIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkgeyBtb2R1bGUuZXhwb3J0cyA9IHRoaXNbXCJSZWFjdERPTVwiXTsgfSgpKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(48);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NGNlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLElBQXFDO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLEVBQWtDO0FBQzdELENBQUMsTUFBTSxFQUVOIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n")},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return SELECTION_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ANNOTATION_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return PLUGIN_NAMESPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return EDITOR_STORE; });\n/* unused harmony export EDITOR_ELEMENT_ID */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return WORDLIFT_STORE; });\n/**\n * This file defines constants used across different files and components.\n *\n * @author David Riccitelli <david@wordlift.io>\n * @since 3.23.0\n */\n\n/**\n * WordPress\' action hook to signal that a selection has changed.\n *\n * @since 3.23.0\n * @type {string}\n */\nconst SELECTION_CHANGED = "wordlift.selectionChanged";\n/**\n * WordPress\' action hook to signal that an annotation has changed. The action\n * provides the annotation id as `{ annotationId }`. The annotation id usually\n * matches the element id that caused the action to be fired.\n *\n * @since 3.23.0\n * @type {string}\n */\n\nconst ANNOTATION_CHANGED = "wordlift.annotationChanged";\n/**\n * The plugin namespace.\n *\n * @type {string}\n */\n\nconst PLUGIN_NAMESPACE = "wordlift";\n/**\n * Define the G\'berg editor store name.\n *\n * @since 3.23.0\n * @type {string}\n */\n\nconst EDITOR_STORE = "core/editor";\n/**\n * Define the editor element id.\n *\n * @since 3.23.0\n * @type {string}\n */\n\nconst EDITOR_ELEMENT_ID = "editor";\n/**\n * Define the WordLift Store name used for {@link select} and {@link dispatch}\n * functions.\n *\n * @type {string}\n */\n\nconst WORDLIFT_STORE = "wordlift/editor";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL2NvbnN0YW50cy5qcz85YTM2Il0sIm5hbWVzIjpbIlNFTEVDVElPTl9DSEFOR0VEIiwiQU5OT1RBVElPTl9DSEFOR0VEIiwiUExVR0lOX05BTUVTUEFDRSIsIkVESVRPUl9TVE9SRSIsIkVESVRPUl9FTEVNRU5UX0lEIiwiV09SRExJRlRfU1RPUkUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O0FBT0E7Ozs7OztBQU1PLE1BQU1BLGlCQUFpQixHQUFHLDJCQUExQjtBQUVQOzs7Ozs7Ozs7QUFRTyxNQUFNQyxrQkFBa0IsR0FBRyw0QkFBM0I7QUFFUDs7Ozs7O0FBS08sTUFBTUMsZ0JBQWdCLEdBQUcsVUFBekI7QUFFUDs7Ozs7OztBQU1PLE1BQU1DLFlBQVksR0FBRyxhQUFyQjtBQUVQOzs7Ozs7O0FBTU8sTUFBTUMsaUJBQWlCLEdBQUcsUUFBMUI7QUFFUDs7Ozs7OztBQU1PLE1BQU1DLGNBQWMsR0FBRyxpQkFBdkIiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZmlsZSBkZWZpbmVzIGNvbnN0YW50cyB1c2VkIGFjcm9zcyBkaWZmZXJlbnQgZmlsZXMgYW5kIGNvbXBvbmVudHMuXG4gKlxuICogQGF1dGhvciBEYXZpZCBSaWNjaXRlbGxpIDxkYXZpZEB3b3JkbGlmdC5pbz5cbiAqIEBzaW5jZSAzLjIzLjBcbiAqL1xuXG4vKipcbiAqIFdvcmRQcmVzcycgYWN0aW9uIGhvb2sgdG8gc2lnbmFsIHRoYXQgYSBzZWxlY3Rpb24gaGFzIGNoYW5nZWQuXG4gKlxuICogQHNpbmNlIDMuMjMuMFxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IFNFTEVDVElPTl9DSEFOR0VEID0gXCJ3b3JkbGlmdC5zZWxlY3Rpb25DaGFuZ2VkXCI7XG5cbi8qKlxuICogV29yZFByZXNzJyBhY3Rpb24gaG9vayB0byBzaWduYWwgdGhhdCBhbiBhbm5vdGF0aW9uIGhhcyBjaGFuZ2VkLiBUaGUgYWN0aW9uXG4gKiBwcm92aWRlcyB0aGUgYW5ub3RhdGlvbiBpZCBhcyBgeyBhbm5vdGF0aW9uSWQgfWAuIFRoZSBhbm5vdGF0aW9uIGlkIHVzdWFsbHlcbiAqIG1hdGNoZXMgdGhlIGVsZW1lbnQgaWQgdGhhdCBjYXVzZWQgdGhlIGFjdGlvbiB0byBiZSBmaXJlZC5cbiAqXG4gKiBAc2luY2UgMy4yMy4wXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgQU5OT1RBVElPTl9DSEFOR0VEID0gXCJ3b3JkbGlmdC5hbm5vdGF0aW9uQ2hhbmdlZFwiO1xuXG4vKipcbiAqIFRoZSBwbHVnaW4gbmFtZXNwYWNlLlxuICpcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBQTFVHSU5fTkFNRVNQQUNFID0gXCJ3b3JkbGlmdFwiO1xuXG4vKipcbiAqIERlZmluZSB0aGUgRydiZXJnIGVkaXRvciBzdG9yZSBuYW1lLlxuICpcbiAqIEBzaW5jZSAzLjIzLjBcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBFRElUT1JfU1RPUkUgPSBcImNvcmUvZWRpdG9yXCI7XG5cbi8qKlxuICogRGVmaW5lIHRoZSBlZGl0b3IgZWxlbWVudCBpZC5cbiAqXG4gKiBAc2luY2UgMy4yMy4wXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgRURJVE9SX0VMRU1FTlRfSUQgPSBcImVkaXRvclwiO1xuXG4vKipcbiAqIERlZmluZSB0aGUgV29yZExpZnQgU3RvcmUgbmFtZSB1c2VkIGZvciB7QGxpbmsgc2VsZWN0fSBhbmQge0BsaW5rIGRpc3BhdGNofVxuICogZnVuY3Rpb25zLlxuICpcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBXT1JETElGVF9TVE9SRSA9IFwid29yZGxpZnQvZWRpdG9yXCI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n')},function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _assertThisInitialized; });\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return self;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzPzI1N2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = (function (value) {\n  return value;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pZGVudGl0eS5qcz8wMTJmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFnQjtBQUNoQjtBQUNBLENBQUMiLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZTtcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  return typeof value === 'function';\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc0Z1bmN0aW9uLmpzPzUxZjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWdCO0FBQ2hCO0FBQ0EsQ0FBQyIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29\n")},,function(module,exports){eval("module.exports = Backbone;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJCYWNrYm9uZVwiPzViYzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEJhY2tib25lOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31\n")},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39);\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {}\n\nvar result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(root);\n/* harmony default export */ __webpack_exports__[\"a\"] = (result);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(24), __webpack_require__(61)(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvaW5kZXguanM/NmMyMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ3FDOztBQUVyQzs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQyxVQUFVLElBQTZCO0FBQ3hDO0FBQ0EsQ0FBQyxNQUFNLEVBRU47O0FBRUQsYUFBYSxvRUFBUTtBQUNOLCtEQUFNLEVBQUMiLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgcG9ueWZpbGwgZnJvbSAnLi9wb255ZmlsbC5qcyc7XG5cbnZhciByb290O1xuXG5pZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBzZWxmO1xufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gbW9kdWxlO1xufSBlbHNlIHtcbiAgcm9vdCA9IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG59XG5cbnZhciByZXN1bHQgPSBwb255ZmlsbChyb290KTtcbmV4cG9ydCBkZWZhdWx0IHJlc3VsdDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///33\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setCurrentAnnotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return receiveAnalysisResults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return setCurrentEntity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return setEntityVisibility; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return toggleEntity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return toggleLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return updateOccurrencesForEntity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return editorSelectionChanged; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return toggleLinkSuccess; });\n/* harmony import */ var _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);\n/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19);\n/**\n * Actions.\n *\n * Define the list of actions for the app.\n *\n * @since 3.11.0\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * Set the current annotation. If `undefined` no annotation is selected.\n *\n * @since 3.11.0\n * @param {string|undefined} annotation The annotation id or `undefined` if no annotation\n *     is selected.\n * @return {Function} The action\'s function.\n */\n\nconst setCurrentAnnotation = annotation => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* ANNOTATION */ "b"],\n  annotation\n});\n/**\n * The `receiveAnalysisResults` action is dispatched when new analysis results\n * are received.\n *\n * @since 3.11.0\n * @param {{entities: (Array)}} results The analysis results.\n * @return {Function} The action\'s function.\n */\n\nconst receiveAnalysisResults = results => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* RECEIVE_ANALYSIS_RESULTS */ "d"],\n  results\n});\n/**\n * The `setCurrentEntity` action is dispatched in order to send an event to the\n * legacy Angular app which in turn show the provided `entity` in the inline\n * entity edit box.\n *\n * @since 3.11.0\n * @param {Object} entity The entity to display in the inline edit box.\n * @return {Function} The action\'s function.\n */\n\nconst setCurrentEntity = entity => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* SET_CURRENT_ENTITY */ "e"],\n  entity\n});\nconst setEntityVisibility = filter => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* SET_ENTITY_FILTER */ "f"],\n  filter\n});\n/**\n * The `toggleEntity` action toggles the selection flag for the provided entity.\n *\n * @since 3.11.0\n * @param {Object} entity The entity being toggled.\n * @return {Function} The action\'s function.\n */\n\nconst toggleEntity = entity => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* TOGGLE_ENTITY */ "g"],\n  entity\n});\n/**\n * The `toggleLink` action is dispatched to enable/disable linking an entity.\n *\n * @since 3.11.0\n * @param {Object} entity The entity.\n * @return {Function} The action\'s function.\n */\n\nconst toggleLink = entity => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* TOGGLE_LINK */ "h"],\n  entity\n});\n/**\n * The `updateOccurrencesForEntity` action is dispatched when the number of\n * occurrences for an entity is updated (by the legacy Angular application).\n *\n * @since 3.11.0\n *\n * @param {string} entityId The entity unique id.\n * @param {Array} occurrences An array of occurrences.\n * @return {Function} The action\'s function.\n */\n\nconst updateOccurrencesForEntity = (entityId, occurrences) => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* UPDATE_OCCURRENCES_FOR_ENTITY */ "j"],\n  entityId,\n  occurrences\n});\n/**\n * The `editorSelectionChanged` action is dispatched when the editor text selection\n * changes.\n *\n * @since 3.18.4\n * @param {{selection: string, editor: *, source: ("tinymce"|"block-editor")}} payload The editor text selection.\n * @returns {{type: string, selection: *}}\n */\n\nconst editorSelectionChanged = payload => ({\n  type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* EDITOR_SELECTION_CHANGED */ "c"],\n  payload\n});\nconst toggleLinkSuccess = Object(redux_actions__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(_constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* TOGGLE_LINK_SUCCESS */ "i"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9hY3Rpb25zL2luZGV4LmpzPzhhMzEiXSwibmFtZXMiOlsic2V0Q3VycmVudEFubm90YXRpb24iLCJhbm5vdGF0aW9uIiwidHlwZSIsInR5cGVzIiwicmVjZWl2ZUFuYWx5c2lzUmVzdWx0cyIsInJlc3VsdHMiLCJzZXRDdXJyZW50RW50aXR5IiwiZW50aXR5Iiwic2V0RW50aXR5VmlzaWJpbGl0eSIsImZpbHRlciIsInRvZ2dsZUVudGl0eSIsInRvZ2dsZUxpbmsiLCJ1cGRhdGVPY2N1cnJlbmNlc0ZvckVudGl0eSIsImVudGl0eUlkIiwib2NjdXJyZW5jZXMiLCJlZGl0b3JTZWxlY3Rpb25DaGFuZ2VkIiwicGF5bG9hZCIsInRvZ2dsZUxpbmtTdWNjZXNzIiwiY3JlYXRlQWN0aW9uIiwiVE9HR0xFX0xJTktfU1VDQ0VTUyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7OztBQVFBOzs7QUFHQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7O0FBUU8sTUFBTUEsb0JBQW9CLEdBQUdDLFVBQVUsS0FBSztBQUFFQyxNQUFJLEVBQUVDLHlFQUFSO0FBQTBCRjtBQUExQixDQUFMLENBQXZDO0FBRVA7Ozs7Ozs7OztBQVFPLE1BQU1HLHNCQUFzQixHQUFHQyxPQUFPLEtBQUs7QUFBRUgsTUFBSSxFQUFFQyx1RkFBUjtBQUF3Q0U7QUFBeEMsQ0FBTCxDQUF0QztBQUVQOzs7Ozs7Ozs7O0FBU08sTUFBTUMsZ0JBQWdCLEdBQUdDLE1BQU0sS0FBSztBQUFFTCxNQUFJLEVBQUVDLGlGQUFSO0FBQWtDSTtBQUFsQyxDQUFMLENBQS9CO0FBRUEsTUFBTUMsbUJBQW1CLEdBQUdDLE1BQU0sS0FBSztBQUFFUCxNQUFJLEVBQUVDLGdGQUFSO0FBQWlDTTtBQUFqQyxDQUFMLENBQWxDO0FBRVA7Ozs7Ozs7O0FBT08sTUFBTUMsWUFBWSxHQUFHSCxNQUFNLEtBQUs7QUFBRUwsTUFBSSxFQUFFQyw0RUFBUjtBQUE2Qkk7QUFBN0IsQ0FBTCxDQUEzQjtBQUVQOzs7Ozs7OztBQU9PLE1BQU1JLFVBQVUsR0FBR0osTUFBTSxLQUFLO0FBQUVMLE1BQUksRUFBRUMsMEVBQVI7QUFBMkJJO0FBQTNCLENBQUwsQ0FBekI7QUFFUDs7Ozs7Ozs7Ozs7QUFVTyxNQUFNSywwQkFBMEIsR0FBRyxDQUFDQyxRQUFELEVBQVdDLFdBQVgsTUFBNEI7QUFDcEVaLE1BQUksRUFBRUMsNEZBRDhEO0FBRXBFVSxVQUZvRTtBQUdwRUM7QUFIb0UsQ0FBNUIsQ0FBbkM7QUFNUDs7Ozs7Ozs7O0FBUU8sTUFBTUMsc0JBQXNCLEdBQUdDLE9BQU8sS0FBSztBQUFFZCxNQUFJLEVBQUVDLHVGQUFSO0FBQXdDYTtBQUF4QyxDQUFMLENBQXRDO0FBRUEsTUFBTUMsaUJBQWlCLEdBQUdDLHFFQUFZLENBQUNDLGtGQUFELENBQXRDIiwiZmlsZSI6IjM0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBY3Rpb25zLlxuICpcbiAqIERlZmluZSB0aGUgbGlzdCBvZiBhY3Rpb25zIGZvciB0aGUgYXBwLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqL1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgKiBhcyB0eXBlcyBmcm9tIFwiLi4vY29uc3RhbnRzL0FjdGlvblR5cGVzXCI7XG5pbXBvcnQgeyBjcmVhdGVBY3Rpb24gfSBmcm9tIFwicmVkdXgtYWN0aW9uc1wiO1xuaW1wb3J0IHsgVE9HR0xFX0xJTktfU1VDQ0VTUyB9IGZyb20gXCIuLi9jb25zdGFudHMvQWN0aW9uVHlwZXNcIjtcblxuLyoqXG4gKiBTZXQgdGhlIGN1cnJlbnQgYW5ub3RhdGlvbi4gSWYgYHVuZGVmaW5lZGAgbm8gYW5ub3RhdGlvbiBpcyBzZWxlY3RlZC5cbiAqXG4gKiBAc2luY2UgMy4xMS4wXG4gKiBAcGFyYW0ge3N0cmluZ3x1bmRlZmluZWR9IGFubm90YXRpb24gVGhlIGFubm90YXRpb24gaWQgb3IgYHVuZGVmaW5lZGAgaWYgbm8gYW5ub3RhdGlvblxuICogICAgIGlzIHNlbGVjdGVkLlxuICogQHJldHVybiB7RnVuY3Rpb259IFRoZSBhY3Rpb24ncyBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHNldEN1cnJlbnRBbm5vdGF0aW9uID0gYW5ub3RhdGlvbiA9PiAoeyB0eXBlOiB0eXBlcy5BTk5PVEFUSU9OLCBhbm5vdGF0aW9uIH0pO1xuXG4vKipcbiAqIFRoZSBgcmVjZWl2ZUFuYWx5c2lzUmVzdWx0c2AgYWN0aW9uIGlzIGRpc3BhdGNoZWQgd2hlbiBuZXcgYW5hbHlzaXMgcmVzdWx0c1xuICogYXJlIHJlY2VpdmVkLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEBwYXJhbSB7e2VudGl0aWVzOiAoQXJyYXkpfX0gcmVzdWx0cyBUaGUgYW5hbHlzaXMgcmVzdWx0cy5cbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBUaGUgYWN0aW9uJ3MgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBjb25zdCByZWNlaXZlQW5hbHlzaXNSZXN1bHRzID0gcmVzdWx0cyA9PiAoeyB0eXBlOiB0eXBlcy5SRUNFSVZFX0FOQUxZU0lTX1JFU1VMVFMsIHJlc3VsdHMgfSk7XG5cbi8qKlxuICogVGhlIGBzZXRDdXJyZW50RW50aXR5YCBhY3Rpb24gaXMgZGlzcGF0Y2hlZCBpbiBvcmRlciB0byBzZW5kIGFuIGV2ZW50IHRvIHRoZVxuICogbGVnYWN5IEFuZ3VsYXIgYXBwIHdoaWNoIGluIHR1cm4gc2hvdyB0aGUgcHJvdmlkZWQgYGVudGl0eWAgaW4gdGhlIGlubGluZVxuICogZW50aXR5IGVkaXQgYm94LlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEBwYXJhbSB7T2JqZWN0fSBlbnRpdHkgVGhlIGVudGl0eSB0byBkaXNwbGF5IGluIHRoZSBpbmxpbmUgZWRpdCBib3guXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gVGhlIGFjdGlvbidzIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgY29uc3Qgc2V0Q3VycmVudEVudGl0eSA9IGVudGl0eSA9PiAoeyB0eXBlOiB0eXBlcy5TRVRfQ1VSUkVOVF9FTlRJVFksIGVudGl0eSB9KTtcblxuZXhwb3J0IGNvbnN0IHNldEVudGl0eVZpc2liaWxpdHkgPSBmaWx0ZXIgPT4gKHsgdHlwZTogdHlwZXMuU0VUX0VOVElUWV9GSUxURVIsIGZpbHRlciB9KTtcblxuLyoqXG4gKiBUaGUgYHRvZ2dsZUVudGl0eWAgYWN0aW9uIHRvZ2dsZXMgdGhlIHNlbGVjdGlvbiBmbGFnIGZvciB0aGUgcHJvdmlkZWQgZW50aXR5LlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEBwYXJhbSB7T2JqZWN0fSBlbnRpdHkgVGhlIGVudGl0eSBiZWluZyB0b2dnbGVkLlxuICogQHJldHVybiB7RnVuY3Rpb259IFRoZSBhY3Rpb24ncyBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHRvZ2dsZUVudGl0eSA9IGVudGl0eSA9PiAoeyB0eXBlOiB0eXBlcy5UT0dHTEVfRU5USVRZLCBlbnRpdHkgfSk7XG5cbi8qKlxuICogVGhlIGB0b2dnbGVMaW5rYCBhY3Rpb24gaXMgZGlzcGF0Y2hlZCB0byBlbmFibGUvZGlzYWJsZSBsaW5raW5nIGFuIGVudGl0eS5cbiAqXG4gKiBAc2luY2UgMy4xMS4wXG4gKiBAcGFyYW0ge09iamVjdH0gZW50aXR5IFRoZSBlbnRpdHkuXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gVGhlIGFjdGlvbidzIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgY29uc3QgdG9nZ2xlTGluayA9IGVudGl0eSA9PiAoeyB0eXBlOiB0eXBlcy5UT0dHTEVfTElOSywgZW50aXR5IH0pO1xuXG4vKipcbiAqIFRoZSBgdXBkYXRlT2NjdXJyZW5jZXNGb3JFbnRpdHlgIGFjdGlvbiBpcyBkaXNwYXRjaGVkIHdoZW4gdGhlIG51bWJlciBvZlxuICogb2NjdXJyZW5jZXMgZm9yIGFuIGVudGl0eSBpcyB1cGRhdGVkIChieSB0aGUgbGVnYWN5IEFuZ3VsYXIgYXBwbGljYXRpb24pLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gZW50aXR5SWQgVGhlIGVudGl0eSB1bmlxdWUgaWQuXG4gKiBAcGFyYW0ge0FycmF5fSBvY2N1cnJlbmNlcyBBbiBhcnJheSBvZiBvY2N1cnJlbmNlcy5cbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBUaGUgYWN0aW9uJ3MgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBjb25zdCB1cGRhdGVPY2N1cnJlbmNlc0ZvckVudGl0eSA9IChlbnRpdHlJZCwgb2NjdXJyZW5jZXMpID0+ICh7XG4gIHR5cGU6IHR5cGVzLlVQREFURV9PQ0NVUlJFTkNFU19GT1JfRU5USVRZLFxuICBlbnRpdHlJZCxcbiAgb2NjdXJyZW5jZXNcbn0pO1xuXG4vKipcbiAqIFRoZSBgZWRpdG9yU2VsZWN0aW9uQ2hhbmdlZGAgYWN0aW9uIGlzIGRpc3BhdGNoZWQgd2hlbiB0aGUgZWRpdG9yIHRleHQgc2VsZWN0aW9uXG4gKiBjaGFuZ2VzLlxuICpcbiAqIEBzaW5jZSAzLjE4LjRcbiAqIEBwYXJhbSB7e3NlbGVjdGlvbjogc3RyaW5nLCBlZGl0b3I6ICosIHNvdXJjZTogKFwidGlueW1jZVwifFwiYmxvY2stZWRpdG9yXCIpfX0gcGF5bG9hZCBUaGUgZWRpdG9yIHRleHQgc2VsZWN0aW9uLlxuICogQHJldHVybnMge3t0eXBlOiBzdHJpbmcsIHNlbGVjdGlvbjogKn19XG4gKi9cbmV4cG9ydCBjb25zdCBlZGl0b3JTZWxlY3Rpb25DaGFuZ2VkID0gcGF5bG9hZCA9PiAoeyB0eXBlOiB0eXBlcy5FRElUT1JfU0VMRUNUSU9OX0NIQU5HRUQsIHBheWxvYWQgfSk7XG5cbmV4cG9ydCBjb25zdCB0b2dnbGVMaW5rU3VjY2VzcyA9IGNyZWF0ZUFjdGlvbihUT0dHTEVfTElOS19TVUNDRVNTKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\n\n\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, ms, val);\n  });\n\n  promise[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* CANCEL */ "a"]] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (delayP);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlZHV4LXNhZ2EvZGVsYXktcC9kaXN0L3JlZHV4LXNhZ2EtZGVsYXktcC5lc20uanM/YjFlYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUE2Qzs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSCxVQUFVLGtFQUFNO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFZSwrREFBTSxFQUFDIiwiZmlsZSI6IjM1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0FOQ0VMIH0gZnJvbSAnQHJlZHV4LXNhZ2Evc3ltYm9scyc7XG5cbmZ1bmN0aW9uIGRlbGF5UChtcywgdmFsKSB7XG4gIGlmICh2YWwgPT09IHZvaWQgMCkge1xuICAgIHZhbCA9IHRydWU7XG4gIH1cblxuICB2YXIgdGltZW91dElkO1xuICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgdGltZW91dElkID0gc2V0VGltZW91dChyZXNvbHZlLCBtcywgdmFsKTtcbiAgfSk7XG5cbiAgcHJvbWlzZVtDQU5DRUxdID0gZnVuY3Rpb24gKCkge1xuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICB9O1xuXG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkZWxheVA7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35\n')},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcz80ZDI2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdCQUFnQjs7QUFFaEI7QUFDQTs7QUFFQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLEtBQUssS0FBNkI7QUFDbEM7QUFDQTtBQUNBLEVBQUUsVUFBVSxJQUE0RTtBQUN4RjtBQUNBLEVBQUUsaUNBQXFCLEVBQUUsbUNBQUU7QUFDM0I7QUFDQSxHQUFHO0FBQUEsb0dBQUM7QUFDSixFQUFFLE1BQU0sRUFFTjtBQUNGLENBQUMiLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAgQ29weXJpZ2h0IChjKSAyMDE3IEplZCBXYXRzb24uXG4gIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXG4gIGh0dHA6Ly9qZWR3YXRzb24uZ2l0aHViLmlvL2NsYXNzbmFtZXNcbiovXG4vKiBnbG9iYWwgZGVmaW5lICovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgaGFzT3duID0ge30uaGFzT3duUHJvcGVydHk7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcyAoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpICYmIGFyZy5sZW5ndGgpIHtcblx0XHRcdFx0dmFyIGlubmVyID0gY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpO1xuXHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goaW5uZXIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRjbGFzc05hbWVzLmRlZmF1bHQgPSBjbGFzc05hbWVzO1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///36\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ eventChannel; });\n\n// UNUSED EXPORTS: CANCEL, SAGA_LOCATION, buffers, detach, END, channel, isEnd, multicastChannel, runSaga, stdChannel\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js\nvar redux_saga_symbols_esm = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/is/dist/redux-saga-is.esm.js\nvar redux_saga_is_esm = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/core/dist/io-6de156f3.js\nvar io_6de156f3 = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(9);\n\n// CONCATENATED MODULE: ./node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js\nfunction deferred() {\n  var def = {};\n  def.promise = new Promise(function (resolve, reject) {\n    def.resolve = resolve;\n    def.reject = reject;\n  });\n  return def;\n}\nfunction arrayOfDeferred(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(deferred());\n  }\n\n  return arr;\n}\n\n/* harmony default export */ var redux_saga_deferred_esm = (deferred);\n\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js\nvar redux_saga_delay_p_esm = __webpack_require__(35);\n\n// CONCATENATED MODULE: ./node_modules/@redux-saga/core/dist/redux-saga-core.esm.js\n\n\n\n\n\n\n\n\n\n\n\nvar redux_saga_core_esm_queue = [];\n/**\n  Variable to hold a counting semaphore\n  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it\'s not\n    already suspended)\n  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This\n    triggers flushing the queued tasks.\n**/\n\nvar semaphore = 0;\n/**\n  Executes a task \'atomically\'. Tasks scheduled during this execution will be queued\n  and flushed after this task has finished (assuming the scheduler endup in a released\n  state).\n**/\n\nfunction exec(task) {\n  try {\n    suspend();\n    task();\n  } finally {\n    release();\n  }\n}\n/**\n  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)\n**/\n\n\nfunction asap(task) {\n  redux_saga_core_esm_queue.push(task);\n\n  if (!semaphore) {\n    suspend();\n    redux_saga_core_esm_flush();\n  }\n}\n/**\n * Puts the scheduler in a `suspended` state and executes a task immediately.\n */\n\nfunction immediately(task) {\n  try {\n    suspend();\n    return task();\n  } finally {\n    redux_saga_core_esm_flush();\n  }\n}\n/**\n  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the\n  scheduler is released.\n**/\n\nfunction suspend() {\n  semaphore++;\n}\n/**\n  Puts the scheduler in a `released` state.\n**/\n\n\nfunction release() {\n  semaphore--;\n}\n/**\n  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\n\n\nfunction redux_saga_core_esm_flush() {\n  release();\n  var task;\n\n  while (!semaphore && (task = redux_saga_core_esm_queue.shift()) !== undefined) {\n    exec(task);\n  }\n}\n\nvar array = function array(patterns) {\n  return function (input) {\n    return patterns.some(function (p) {\n      return redux_saga_core_esm_matcher(p)(input);\n    });\n  };\n};\nvar predicate = function predicate(_predicate) {\n  return function (input) {\n    return _predicate(input);\n  };\n};\nvar string = function string(pattern) {\n  return function (input) {\n    return input.type === String(pattern);\n  };\n};\nvar symbol = function symbol(pattern) {\n  return function (input) {\n    return input.type === pattern;\n  };\n};\nvar redux_saga_core_esm_wildcard = function wildcard() {\n  return io_6de156f3["G" /* k */];\n};\nfunction redux_saga_core_esm_matcher(pattern) {\n  // prettier-ignore\n  var matcherCreator = pattern === \'*\' ? redux_saga_core_esm_wildcard : Object(redux_saga_is_esm["k" /* string */])(pattern) ? string : Object(redux_saga_is_esm["a" /* array */])(pattern) ? array : Object(redux_saga_is_esm["l" /* stringableFunc */])(pattern) ? string : Object(redux_saga_is_esm["d" /* func */])(pattern) ? predicate : Object(redux_saga_is_esm["m" /* symbol */])(pattern) ? symbol : null;\n\n  if (matcherCreator === null) {\n    throw new Error("invalid pattern: " + pattern);\n  }\n\n  return matcherCreator(pattern);\n}\n\nvar END = {\n  type: redux_saga_symbols_esm["b" /* CHANNEL_END_TYPE */]\n};\nvar redux_saga_core_esm_isEnd = function isEnd(a) {\n  return a && a.type === redux_saga_symbols_esm["b" /* CHANNEL_END_TYPE */];\n};\nvar CLOSED_CHANNEL_WITH_TAKERS = \'Cannot have a closed channel with pending takers\';\nvar INVALID_BUFFER = \'invalid buffer passed to channel factory function\';\nvar UNDEFINED_INPUT_ERROR = "Saga or channel was provided with an undefined action\\nHints:\\n  - check that your Action Creator returns a non-undefined value\\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners";\nfunction redux_saga_core_esm_channel(buffer$1) {\n  if (buffer$1 === void 0) {\n    buffer$1 = Object(io_6de156f3["A" /* e */])();\n  }\n\n  var closed = false;\n  var takers = [];\n\n  if (false) {}\n\n  function checkForbiddenStates() {\n    if (closed && takers.length) {\n      throw Object(io_6de156f3["E" /* i */])(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n\n    if (takers.length && !buffer$1.isEmpty()) {\n      throw Object(io_6de156f3["E" /* i */])(\'Cannot have pending takers with non empty buffer\');\n    }\n  }\n\n  function put(input) {\n    if (false) {}\n\n    if (closed) {\n      return;\n    }\n\n    if (takers.length === 0) {\n      return buffer$1.put(input);\n    }\n\n    var cb = takers.shift();\n    cb(input);\n  }\n\n  function take(cb) {\n    if (false) {}\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n    } else if (!buffer$1.isEmpty()) {\n      cb(buffer$1.take());\n    } else {\n      takers.push(cb);\n\n      cb.cancel = function () {\n        Object(io_6de156f3["N" /* r */])(takers, cb);\n      };\n    }\n  }\n\n  function flush(cb) {\n    if (false) {}\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n      return;\n    }\n\n    cb(buffer$1.flush());\n  }\n\n  function close() {\n    if (false) {}\n\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n    var arr = takers;\n    takers = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var taker = arr[i];\n      taker(END);\n    }\n  }\n\n  return {\n    take: take,\n    put: put,\n    flush: flush,\n    close: close\n  };\n}\nfunction eventChannel(subscribe, buffer) {\n  if (buffer === void 0) {\n    buffer = Object(io_6de156f3["J" /* n */])();\n  }\n\n  var closed = false;\n  var unsubscribe;\n  var chan = redux_saga_core_esm_channel(buffer);\n\n  var close = function close() {\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n\n    if (Object(redux_saga_is_esm["d" /* func */])(unsubscribe)) {\n      unsubscribe();\n    }\n\n    chan.close();\n  };\n\n  unsubscribe = subscribe(function (input) {\n    if (redux_saga_core_esm_isEnd(input)) {\n      close();\n      return;\n    }\n\n    chan.put(input);\n  });\n\n  if (false) {}\n\n  unsubscribe = Object(io_6de156f3["K" /* o */])(unsubscribe);\n\n  if (closed) {\n    unsubscribe();\n  }\n\n  return {\n    take: chan.take,\n    flush: chan.flush,\n    close: close\n  };\n}\nfunction multicastChannel() {\n  var _ref;\n\n  var closed = false;\n  var currentTakers = [];\n  var nextTakers = currentTakers;\n\n  function checkForbiddenStates() {\n    if (closed && nextTakers.length) {\n      throw Object(io_6de156f3["E" /* i */])(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n  }\n\n  var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {\n    if (nextTakers !== currentTakers) {\n      return;\n    }\n\n    nextTakers = currentTakers.slice();\n  };\n\n  var close = function close() {\n    if (false) {}\n\n    closed = true;\n    var takers = currentTakers = nextTakers;\n    nextTakers = [];\n    takers.forEach(function (taker) {\n      taker(END);\n    });\n  };\n\n  return _ref = {}, _ref[redux_saga_symbols_esm["e" /* MULTICAST */]] = true, _ref.put = function put(input) {\n    if (false) {}\n\n    if (closed) {\n      return;\n    }\n\n    if (redux_saga_core_esm_isEnd(input)) {\n      close();\n      return;\n    }\n\n    var takers = currentTakers = nextTakers;\n\n    for (var i = 0, len = takers.length; i < len; i++) {\n      var taker = takers[i];\n\n      if (taker[redux_saga_symbols_esm["d" /* MATCH */]](input)) {\n        taker.cancel();\n        taker(input);\n      }\n    }\n  }, _ref.take = function take(cb, matcher) {\n    if (matcher === void 0) {\n      matcher = redux_saga_core_esm_wildcard;\n    }\n\n    if (false) {}\n\n    if (closed) {\n      cb(END);\n      return;\n    }\n\n    cb[redux_saga_symbols_esm["d" /* MATCH */]] = matcher;\n    ensureCanMutateNextTakers();\n    nextTakers.push(cb);\n    cb.cancel = Object(io_6de156f3["K" /* o */])(function () {\n      ensureCanMutateNextTakers();\n      Object(io_6de156f3["N" /* r */])(nextTakers, cb);\n    });\n  }, _ref.close = close, _ref;\n}\nfunction stdChannel() {\n  var chan = multicastChannel();\n  var put = chan.put;\n\n  chan.put = function (input) {\n    if (input[redux_saga_symbols_esm["f" /* SAGA_ACTION */]]) {\n      put(input);\n      return;\n    }\n\n    asap(function () {\n      put(input);\n    });\n  };\n\n  return chan;\n}\n\nvar RUNNING = 0;\nvar CANCELLED = 1;\nvar ABORTED = 2;\nvar DONE = 3;\n\nfunction resolvePromise(promise, cb) {\n  var cancelPromise = promise[redux_saga_symbols_esm["a" /* CANCEL */]];\n\n  if (Object(redux_saga_is_esm["d" /* func */])(cancelPromise)) {\n    cb.cancel = cancelPromise;\n  }\n\n  promise.then(cb, function (error) {\n    cb(error, true);\n  });\n}\n\nvar current = 0;\nvar nextSagaId = (function () {\n  return ++current;\n});\n\nvar _effectRunnerMap;\n\nfunction getIteratorMetaInfo(iterator, fn) {\n  if (iterator.isSagaIterator) {\n    return {\n      name: iterator.meta.name\n    };\n  }\n\n  return Object(io_6de156f3["F" /* j */])(fn);\n}\n\nfunction createTaskIterator(_ref) {\n  var context = _ref.context,\n      fn = _ref.fn,\n      args = _ref.args;\n\n  // catch synchronous failures; see #152 and #441\n  try {\n    var result = fn.apply(context, args); // i.e. a generator function returns an iterator\n\n    if (Object(redux_saga_is_esm["e" /* iterator */])(result)) {\n      return result;\n    }\n\n    var resolved = false;\n\n    var next = function next(arg) {\n      if (!resolved) {\n        resolved = true; // Only promises returned from fork will be interpreted. See #1573\n\n        return {\n          value: result,\n          done: !Object(redux_saga_is_esm["j" /* promise */])(result)\n        };\n      } else {\n        return {\n          value: arg,\n          done: true\n        };\n      }\n    };\n\n    return Object(io_6de156f3["M" /* q */])(next);\n  } catch (err) {\n    // do not bubble up synchronous failures for detached forks\n    // instead create a failed task. See #152 and #441\n    return Object(io_6de156f3["M" /* q */])(function () {\n      throw err;\n    });\n  }\n}\n\nfunction runPutEffect(env, _ref2, cb) {\n  var channel = _ref2.channel,\n      action = _ref2.action,\n      resolve = _ref2.resolve;\n\n  /**\n   Schedule the put in case another saga is holding a lock.\n   The put will be executed atomically. ie nested puts will execute after\n   this put has terminated.\n   **/\n  asap(function () {\n    var result;\n\n    try {\n      result = (channel ? channel.put : env.dispatch)(action);\n    } catch (error) {\n      cb(error, true);\n      return;\n    }\n\n    if (resolve && Object(redux_saga_is_esm["j" /* promise */])(result)) {\n      resolvePromise(result, cb);\n    } else {\n      cb(result);\n    }\n  }); // Put effects are non cancellables\n}\n\nfunction runTakeEffect(env, _ref3, cb) {\n  var _ref3$channel = _ref3.channel,\n      channel = _ref3$channel === void 0 ? env.channel : _ref3$channel,\n      pattern = _ref3.pattern,\n      maybe = _ref3.maybe;\n\n  var takeCb = function takeCb(input) {\n    if (input instanceof Error) {\n      cb(input, true);\n      return;\n    }\n\n    if (redux_saga_core_esm_isEnd(input) && !maybe) {\n      cb(redux_saga_symbols_esm["k" /* TERMINATE */]);\n      return;\n    }\n\n    cb(input);\n  };\n\n  try {\n    channel.take(takeCb, Object(redux_saga_is_esm["g" /* notUndef */])(pattern) ? redux_saga_core_esm_matcher(pattern) : null);\n  } catch (err) {\n    cb(err, true);\n    return;\n  }\n\n  cb.cancel = takeCb.cancel;\n}\n\nfunction runCallEffect(env, _ref4, cb, _ref5) {\n  var context = _ref4.context,\n      fn = _ref4.fn,\n      args = _ref4.args;\n  var task = _ref5.task;\n\n  // catch synchronous failures; see #152\n  try {\n    var result = fn.apply(context, args);\n\n    if (Object(redux_saga_is_esm["j" /* promise */])(result)) {\n      resolvePromise(result, cb);\n      return;\n    }\n\n    if (Object(redux_saga_is_esm["e" /* iterator */])(result)) {\n      // resolve iterator\n      proc(env, result, task.context, current, Object(io_6de156f3["F" /* j */])(fn),\n      /* isRoot */\n      false, cb);\n      return;\n    }\n\n    cb(result);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runCPSEffect(env, _ref6, cb) {\n  var context = _ref6.context,\n      fn = _ref6.fn,\n      args = _ref6.args;\n\n  // CPS (ie node style functions) can define their own cancellation logic\n  // by setting cancel field on the cb\n  // catch synchronous failures; see #152\n  try {\n    var cpsCb = function cpsCb(err, res) {\n      if (Object(redux_saga_is_esm["n" /* undef */])(err)) {\n        cb(res);\n      } else {\n        cb(err, true);\n      }\n    };\n\n    fn.apply(context, args.concat(cpsCb));\n\n    if (cpsCb.cancel) {\n      cb.cancel = cpsCb.cancel;\n    }\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runForkEffect(env, _ref7, cb, _ref8) {\n  var context = _ref7.context,\n      fn = _ref7.fn,\n      args = _ref7.args,\n      detached = _ref7.detached;\n  var parent = _ref8.task;\n  var taskIterator = createTaskIterator({\n    context: context,\n    fn: fn,\n    args: args\n  });\n  var meta = getIteratorMetaInfo(taskIterator, fn);\n  immediately(function () {\n    var child = proc(env, taskIterator, parent.context, current, meta, detached, undefined);\n\n    if (detached) {\n      cb(child);\n    } else {\n      if (child.isRunning()) {\n        parent.queue.addTask(child);\n        cb(child);\n      } else if (child.isAborted()) {\n        parent.queue.abort(child.error());\n      } else {\n        cb(child);\n      }\n    }\n  }); // Fork effects are non cancellables\n}\n\nfunction runJoinEffect(env, taskOrTasks, cb, _ref9) {\n  var task = _ref9.task;\n\n  var joinSingleTask = function joinSingleTask(taskToJoin, cb) {\n    if (taskToJoin.isRunning()) {\n      var joiner = {\n        task: task,\n        cb: cb\n      };\n\n      cb.cancel = function () {\n        if (taskToJoin.isRunning()) Object(io_6de156f3["N" /* r */])(taskToJoin.joiners, joiner);\n      };\n\n      taskToJoin.joiners.push(joiner);\n    } else {\n      if (taskToJoin.isAborted()) {\n        cb(taskToJoin.error(), true);\n      } else {\n        cb(taskToJoin.result());\n      }\n    }\n  };\n\n  if (Object(redux_saga_is_esm["a" /* array */])(taskOrTasks)) {\n    if (taskOrTasks.length === 0) {\n      cb([]);\n      return;\n    }\n\n    var childCallbacks = Object(io_6de156f3["H" /* l */])(taskOrTasks, cb);\n    taskOrTasks.forEach(function (t, i) {\n      joinSingleTask(t, childCallbacks[i]);\n    });\n  } else {\n    joinSingleTask(taskOrTasks, cb);\n  }\n}\n\nfunction cancelSingleTask(taskToCancel) {\n  if (taskToCancel.isRunning()) {\n    taskToCancel.cancel();\n  }\n}\n\nfunction runCancelEffect(env, taskOrTasks, cb, _ref10) {\n  var task = _ref10.task;\n\n  if (taskOrTasks === redux_saga_symbols_esm["h" /* SELF_CANCELLATION */]) {\n    cancelSingleTask(task);\n  } else if (Object(redux_saga_is_esm["a" /* array */])(taskOrTasks)) {\n    taskOrTasks.forEach(cancelSingleTask);\n  } else {\n    cancelSingleTask(taskOrTasks);\n  }\n\n  cb(); // cancel effects are non cancellables\n}\n\nfunction runAllEffect(env, effects, cb, _ref11) {\n  var digestEffect = _ref11.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n\n  if (keys.length === 0) {\n    cb(Object(redux_saga_is_esm["a" /* array */])(effects) ? [] : {});\n    return;\n  }\n\n  var childCallbacks = Object(io_6de156f3["H" /* l */])(effects, cb);\n  keys.forEach(function (key) {\n    digestEffect(effects[key], effectId, childCallbacks[key], key);\n  });\n}\n\nfunction runRaceEffect(env, effects, cb, _ref12) {\n  var digestEffect = _ref12.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n  var response = Object(redux_saga_is_esm["a" /* array */])(effects) ? Object(io_6de156f3["I" /* m */])(keys.length) : {};\n  var childCbs = {};\n  var completed = false;\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || Object(io_6de156f3["O" /* s */])(res)) {\n        // Race Auto cancellation\n        cb.cancel();\n        cb(res, isErr);\n      } else {\n        cb.cancel();\n        completed = true;\n        response[key] = res;\n        cb(response);\n      }\n    };\n\n    chCbAtKey.cancel = io_6de156f3["P" /* t */];\n    childCbs[key] = chCbAtKey;\n  });\n\n  cb.cancel = function () {\n    // prevents unnecessary cancellation\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCbs[key].cancel();\n      });\n    }\n  };\n\n  keys.forEach(function (key) {\n    if (completed) {\n      return;\n    }\n\n    digestEffect(effects[key], effectId, childCbs[key], key);\n  });\n}\n\nfunction runSelectEffect(env, _ref13, cb) {\n  var selector = _ref13.selector,\n      args = _ref13.args;\n\n  try {\n    var state = selector.apply(void 0, [env.getState()].concat(args));\n    cb(state);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runChannelEffect(env, _ref14, cb) {\n  var pattern = _ref14.pattern,\n      buffer = _ref14.buffer;\n  var chan = redux_saga_core_esm_channel(buffer);\n  var match = redux_saga_core_esm_matcher(pattern);\n\n  var taker = function taker(action) {\n    if (!redux_saga_core_esm_isEnd(action)) {\n      env.channel.take(taker, match);\n    }\n\n    chan.put(action);\n  };\n\n  var close = chan.close;\n\n  chan.close = function () {\n    taker.cancel();\n    close();\n  };\n\n  env.channel.take(taker, match);\n  cb(chan);\n}\n\nfunction runCancelledEffect(env, data, cb, _ref15) {\n  var task = _ref15.task;\n  cb(task.isCancelled());\n}\n\nfunction runFlushEffect(env, channel, cb) {\n  channel.flush(cb);\n}\n\nfunction runGetContextEffect(env, prop, cb, _ref16) {\n  var task = _ref16.task;\n  cb(task.context[prop]);\n}\n\nfunction runSetContextEffect(env, props, cb, _ref17) {\n  var task = _ref17.task;\n  Object(io_6de156f3["L" /* p */])(task.context, props);\n  cb();\n}\n\nvar effectRunnerMap = (_effectRunnerMap = {}, _effectRunnerMap[io_6de156f3["r" /* T */]] = runTakeEffect, _effectRunnerMap[io_6de156f3["n" /* P */]] = runPutEffect, _effectRunnerMap[io_6de156f3["a" /* A */]] = runAllEffect, _effectRunnerMap[io_6de156f3["p" /* R */]] = runRaceEffect, _effectRunnerMap[io_6de156f3["c" /* C */]] = runCallEffect, _effectRunnerMap[io_6de156f3["v" /* a */]] = runCPSEffect, _effectRunnerMap[io_6de156f3["f" /* F */]] = runForkEffect, _effectRunnerMap[io_6de156f3["h" /* J */]] = runJoinEffect, _effectRunnerMap[io_6de156f3["x" /* b */]] = runCancelEffect, _effectRunnerMap[io_6de156f3["q" /* S */]] = runSelectEffect, _effectRunnerMap[io_6de156f3["z" /* d */]] = runChannelEffect, _effectRunnerMap[io_6de156f3["B" /* f */]] = runCancelledEffect, _effectRunnerMap[io_6de156f3["C" /* g */]] = runFlushEffect, _effectRunnerMap[io_6de156f3["g" /* G */]] = runGetContextEffect, _effectRunnerMap[io_6de156f3["D" /* h */]] = runSetContextEffect, _effectRunnerMap);\n\n/**\n Used to track a parent task and its forks\n In the fork model, forked tasks are attached by default to their parent\n We model this using the concept of Parent task && main Task\n main task is the main flow of the current Generator, the parent tasks is the\n aggregation of the main tasks + all its forked tasks.\n Thus the whole model represents an execution tree with multiple branches (vs the\n linear execution tree in sequential (non parallel) programming)\n\n A parent tasks has the following semantics\n - It completes if all its forks either complete or all cancelled\n - If it\'s cancelled, all forks are cancelled as well\n - It aborts if any uncaught error bubbles up from forks\n - If it completes, the return value is the one returned by the main task\n **/\n\nfunction forkQueue(mainTask, onAbort, cont) {\n  var tasks = [];\n  var result;\n  var completed = false;\n  addTask(mainTask);\n\n  var getTasks = function getTasks() {\n    return tasks;\n  };\n\n  function abort(err) {\n    onAbort();\n    cancelAll();\n    cont(err, true);\n  }\n\n  function addTask(task) {\n    tasks.push(task);\n\n    task.cont = function (res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      Object(io_6de156f3["N" /* r */])(tasks, task);\n      task.cont = io_6de156f3["P" /* t */];\n\n      if (isErr) {\n        abort(res);\n      } else {\n        if (task === mainTask) {\n          result = res;\n        }\n\n        if (!tasks.length) {\n          completed = true;\n          cont(result);\n        }\n      }\n    };\n  }\n\n  function cancelAll() {\n    if (completed) {\n      return;\n    }\n\n    completed = true;\n    tasks.forEach(function (t) {\n      t.cont = io_6de156f3["P" /* t */];\n      t.cancel();\n    });\n    tasks = [];\n  }\n\n  return {\n    addTask: addTask,\n    cancelAll: cancelAll,\n    abort: abort,\n    getTasks: getTasks\n  };\n}\n\n// there can be only a single saga error created at any given moment\n\nfunction formatLocation(fileName, lineNumber) {\n  return fileName + "?" + lineNumber;\n}\n\nfunction effectLocationAsString(effect) {\n  var location = Object(io_6de156f3["R" /* v */])(effect);\n\n  if (location) {\n    var code = location.code,\n        fileName = location.fileName,\n        lineNumber = location.lineNumber;\n    var source = code + "  " + formatLocation(fileName, lineNumber);\n    return source;\n  }\n\n  return \'\';\n}\n\nfunction sagaLocationAsString(sagaMeta) {\n  var name = sagaMeta.name,\n      location = sagaMeta.location;\n\n  if (location) {\n    return name + "  " + formatLocation(location.fileName, location.lineNumber);\n  }\n\n  return name;\n}\n\nfunction cancelledTasksAsString(sagaStack) {\n  var cancelledTasks = Object(io_6de156f3["Q" /* u */])(function (i) {\n    return i.cancelledTasks;\n  }, sagaStack);\n\n  if (!cancelledTasks.length) {\n    return \'\';\n  }\n\n  return [\'Tasks cancelled due to error:\'].concat(cancelledTasks).join(\'\\n\');\n}\n\nvar crashedEffect = null;\nvar redux_saga_core_esm_sagaStack = [];\nvar addSagaFrame = function addSagaFrame(frame) {\n  frame.crashedEffect = crashedEffect;\n  redux_saga_core_esm_sagaStack.push(frame);\n};\nvar clear = function clear() {\n  crashedEffect = null;\n  redux_saga_core_esm_sagaStack.length = 0;\n}; // this sets crashed effect for the soon-to-be-reported saga frame\n// this slightly streatches the singleton nature of this module into wrong direction\n// as it\'s even less obvious what\'s the data flow here, but it is what it is for now\n\nvar setCrashedEffect = function setCrashedEffect(effect) {\n  crashedEffect = effect;\n};\n/**\n  @returns {string}\n\n  @example\n  The above error occurred in task errorInPutSaga {pathToFile}\n  when executing effect put({type: \'REDUCER_ACTION_ERROR_IN_PUT\'}) {pathToFile}\n      created by fetchSaga {pathToFile}\n      created by rootSaga {pathToFile}\n*/\n\nvar redux_saga_core_esm_toString = function toString() {\n  var firstSaga = redux_saga_core_esm_sagaStack[0],\n      otherSagas = redux_saga_core_esm_sagaStack.slice(1);\n  var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;\n  var errorMessage = "The above error occurred in task " + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? " \\n when executing effect " + crashedEffectLocation : \'\');\n  return [errorMessage].concat(otherSagas.map(function (s) {\n    return "    created by " + sagaLocationAsString(s.meta);\n  }), [cancelledTasksAsString(redux_saga_core_esm_sagaStack)]).join(\'\\n\');\n};\n\nfunction newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {\n  var _task;\n\n  if (cont === void 0) {\n    cont = io_6de156f3["P" /* t */];\n  }\n\n  var status = RUNNING;\n  var taskResult;\n  var taskError;\n  var deferredEnd = null;\n  var cancelledDueToErrorTasks = [];\n  var context = Object.create(parentContext);\n  var queue = forkQueue(mainTask, function onAbort() {\n    cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function (t) {\n      return t.meta.name;\n    }));\n  }, end);\n  /**\n   This may be called by a parent generator to trigger/propagate cancellation\n   cancel all pending tasks (including the main task), then end the current task.\n    Cancellation propagates down to the whole execution tree held by this Parent task\n   It\'s also propagated to all joiners of this task and their execution tree/joiners\n    Cancellation is noop for terminated/Cancelled tasks tasks\n   **/\n\n  function cancel() {\n    if (status === RUNNING) {\n      // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped\n      // effects in the iterator\'s finally block will still be executed\n      status = CANCELLED;\n      queue.cancelAll(); // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners\n\n      end(redux_saga_symbols_esm["j" /* TASK_CANCEL */], false);\n    }\n  }\n\n  function end(result, isErr) {\n    if (!isErr) {\n      // The status here may be RUNNING or CANCELLED\n      // If the status is CANCELLED, then we do not need to change it here\n      if (result === redux_saga_symbols_esm["j" /* TASK_CANCEL */]) {\n        status = CANCELLED;\n      } else if (status !== CANCELLED) {\n        status = DONE;\n      }\n\n      taskResult = result;\n      deferredEnd && deferredEnd.resolve(result);\n    } else {\n      status = ABORTED;\n      addSagaFrame({\n        meta: meta,\n        cancelledTasks: cancelledDueToErrorTasks\n      });\n\n      if (task.isRoot) {\n        var sagaStack = redux_saga_core_esm_toString(); // we\'ve dumped the saga stack to string and are passing it to user\'s code\n        // we know that it won\'t be needed anymore and we need to clear it\n\n        clear();\n        env.onError(result, {\n          sagaStack: sagaStack\n        });\n      }\n\n      taskError = result;\n      deferredEnd && deferredEnd.reject(result);\n    }\n\n    task.cont(result, isErr);\n    task.joiners.forEach(function (joiner) {\n      joiner.cb(result, isErr);\n    });\n    task.joiners = null;\n  }\n\n  function setContext(props) {\n    if (false) {}\n\n    Object(io_6de156f3["L" /* p */])(context, props);\n  }\n\n  function toPromise() {\n    if (deferredEnd) {\n      return deferredEnd.promise;\n    }\n\n    deferredEnd = redux_saga_deferred_esm();\n\n    if (status === ABORTED) {\n      deferredEnd.reject(taskError);\n    } else if (status !== RUNNING) {\n      deferredEnd.resolve(taskResult);\n    }\n\n    return deferredEnd.promise;\n  }\n\n  var task = (_task = {}, _task[redux_saga_symbols_esm["i" /* TASK */]] = true, _task.id = parentEffectId, _task.meta = meta, _task.isRoot = isRoot, _task.context = context, _task.joiners = [], _task.queue = queue, _task.cancel = cancel, _task.cont = cont, _task.end = end, _task.setContext = setContext, _task.toPromise = toPromise, _task.isRunning = function isRunning() {\n    return status === RUNNING;\n  }, _task.isCancelled = function isCancelled() {\n    return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;\n  }, _task.isAborted = function isAborted() {\n    return status === ABORTED;\n  }, _task.result = function result() {\n    return taskResult;\n  }, _task.error = function error() {\n    return taskError;\n  }, _task);\n  return task;\n}\n\nfunction proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {\n  if (false) {}\n\n  var finalRunEffect = env.finalizeRunEffect(runEffect);\n  /**\n    Tracks the current effect cancellation\n    Each time the generator progresses. calling runEffect will set a new value\n    on it. It allows propagating cancellation to child effects\n  **/\n\n  next.cancel = io_6de156f3["P" /* t */];\n  /** Creates a main task to track the main flow */\n\n  var mainTask = {\n    meta: meta,\n    cancel: cancelMain,\n    status: RUNNING\n  };\n  /**\n   Creates a new task descriptor for this generator.\n   A task is the aggregation of it\'s mainTask and all it\'s forked tasks.\n   **/\n\n  var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);\n  var executingContext = {\n    task: task,\n    digestEffect: digestEffect\n  };\n  /**\n    cancellation of the main task. We\'ll simply resume the Generator with a TASK_CANCEL\n  **/\n\n  function cancelMain() {\n    if (mainTask.status === RUNNING) {\n      mainTask.status = CANCELLED;\n      next(redux_saga_symbols_esm["j" /* TASK_CANCEL */]);\n    }\n  }\n  /**\n    attaches cancellation logic to this task\'s continuation\n    this will permit cancellation to propagate down the call chain\n  **/\n\n\n  if (cont) {\n    cont.cancel = task.cancel;\n  } // kicks up the generator\n\n\n  next(); // then return the task descriptor to the caller\n\n  return task;\n  /**\n   * This is the generator driver\n   * It\'s a recursive async/continuation function which calls itself\n   * until the generator terminates or throws\n   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.\n   * @param {boolean} isErr - the flag shows if effect finished with an error\n   *\n   * receives either (command | effect result, false) or (any thrown thing, true)\n   */\n\n  function next(arg, isErr) {\n    try {\n      var result;\n\n      if (isErr) {\n        result = iterator$1.throw(arg); // user handled the error, we can clear bookkept values\n\n        clear();\n      } else if (Object(io_6de156f3["S" /* y */])(arg)) {\n        /**\n          getting TASK_CANCEL automatically cancels the main task\n          We can get this value here\n           - By cancelling the parent task manually\n          - By joining a Cancelled task\n        **/\n        mainTask.status = CANCELLED;\n        /**\n          Cancels the current effect; this will propagate the cancellation down to any called tasks\n        **/\n\n        next.cancel();\n        /**\n          If this Generator has a `return` method then invokes it\n          This will jump to the finally block\n        **/\n\n        result = Object(redux_saga_is_esm["d" /* func */])(iterator$1.return) ? iterator$1.return(redux_saga_symbols_esm["j" /* TASK_CANCEL */]) : {\n          done: true,\n          value: redux_saga_symbols_esm["j" /* TASK_CANCEL */]\n        };\n      } else if (Object(io_6de156f3["T" /* z */])(arg)) {\n        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)\n        result = Object(redux_saga_is_esm["d" /* func */])(iterator$1.return) ? iterator$1.return() : {\n          done: true\n        };\n      } else {\n        result = iterator$1.next(arg);\n      }\n\n      if (!result.done) {\n        digestEffect(result.value, parentEffectId, next);\n      } else {\n        /**\n          This Generator has ended, terminate the main task and notify the fork queue\n        **/\n        if (mainTask.status !== CANCELLED) {\n          mainTask.status = DONE;\n        }\n\n        mainTask.cont(result.value);\n      }\n    } catch (error) {\n      if (mainTask.status === CANCELLED) {\n        throw error;\n      }\n\n      mainTask.status = ABORTED;\n      mainTask.cont(error, true);\n    }\n  }\n\n  function runEffect(effect, effectId, currCb) {\n    /**\n      each effect runner must attach its own logic of cancellation to the provided callback\n      it allows this generator to propagate cancellation downward.\n       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]\n      And the setup must occur before calling the callback\n       This is a sort of inversion of control: called async functions are responsible\n      of completing the flow by calling the provided continuation; while caller functions\n      are responsible for aborting the current flow by calling the attached cancel function\n       Library users can attach their own cancellation logic to promises by defining a\n      promise[CANCEL] method in their returned promises\n      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect\n    **/\n    if (Object(redux_saga_is_esm["j" /* promise */])(effect)) {\n      resolvePromise(effect, currCb);\n    } else if (Object(redux_saga_is_esm["e" /* iterator */])(effect)) {\n      // resolve iterator\n      proc(env, effect, task.context, effectId, meta,\n      /* isRoot */\n      false, currCb);\n    } else if (effect && effect[redux_saga_symbols_esm["c" /* IO */]]) {\n      var effectRunner = effectRunnerMap[effect.type];\n      effectRunner(env, effect.payload, currCb, executingContext);\n    } else {\n      // anything else returned as is\n      currCb(effect);\n    }\n  }\n\n  function digestEffect(effect, parentEffectId, cb, label) {\n    if (label === void 0) {\n      label = \'\';\n    }\n\n    var effectId = nextSagaId();\n    env.sagaMonitor && env.sagaMonitor.effectTriggered({\n      effectId: effectId,\n      parentEffectId: parentEffectId,\n      label: label,\n      effect: effect\n    });\n    /**\n      completion callback and cancel callback are mutually exclusive\n      We can\'t cancel an already completed effect\n      And We can\'t complete an already cancelled effectId\n    **/\n\n    var effectSettled; // Completion callback passed to the appropriate effect runner\n\n    function currCb(res, isErr) {\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      cb.cancel = io_6de156f3["P" /* t */]; // defensive measure\n\n      if (env.sagaMonitor) {\n        if (isErr) {\n          env.sagaMonitor.effectRejected(effectId, res);\n        } else {\n          env.sagaMonitor.effectResolved(effectId, res);\n        }\n      }\n\n      if (isErr) {\n        setCrashedEffect(effect);\n      }\n\n      cb(res, isErr);\n    } // tracks down the current cancel\n\n\n    currCb.cancel = io_6de156f3["P" /* t */]; // setup cancellation logic on the parent cb\n\n    cb.cancel = function () {\n      // prevents cancelling an already completed effect\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      currCb.cancel(); // propagates cancel downward\n\n      currCb.cancel = io_6de156f3["P" /* t */]; // defensive measure\n\n      env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);\n    };\n\n    finalRunEffect(effect, effectId, currCb);\n  }\n}\n\nvar RUN_SAGA_SIGNATURE = \'runSaga(options, saga, ...args)\';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ": saga argument must be a Generator function!";\nfunction runSaga(_ref, saga) {\n  var _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      sagaMonitor = _ref.sagaMonitor,\n      effectMiddlewares = _ref.effectMiddlewares,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? io_6de156f3["b" /* B */] : _ref$onError;\n\n  if (false) {}\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator$1 = saga.apply(void 0, args);\n\n  if (false) {}\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let\'s fill-in any missing ones\n    sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || io_6de156f3["P" /* t */];\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || io_6de156f3["P" /* t */];\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || io_6de156f3["P" /* t */];\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || io_6de156f3["P" /* t */];\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || io_6de156f3["P" /* t */];\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || io_6de156f3["P" /* t */];\n    sagaMonitor.rootSagaStarted({\n      effectId: effectId,\n      saga: saga,\n      args: args\n    });\n  }\n\n  if (false) { var MIDDLEWARE_TYPE_ERROR; }\n\n  var finalizeRunEffect;\n\n  if (effectMiddlewares) {\n    var middleware = redux["d" /* compose */].apply(void 0, effectMiddlewares);\n\n    finalizeRunEffect = function finalizeRunEffect(runEffect) {\n      return function (effect, effectId, currCb) {\n        var plainRunEffect = function plainRunEffect(eff) {\n          return runEffect(eff, effectId, currCb);\n        };\n\n        return middleware(plainRunEffect)(effect);\n      };\n    };\n  } else {\n    finalizeRunEffect = io_6de156f3["e" /* E */];\n  }\n\n  var env = {\n    channel: channel,\n    dispatch: Object(io_6de156f3["d" /* D */])(dispatch),\n    getState: getState,\n    sagaMonitor: sagaMonitor,\n    onError: onError,\n    finalizeRunEffect: finalizeRunEffect\n  };\n  return immediately(function () {\n    var task = proc(env, iterator$1, context, effectId, Object(io_6de156f3["F" /* j */])(saga),\n    /* isRoot */\n    true, undefined);\n\n    if (sagaMonitor) {\n      sagaMonitor.effectResolved(effectId, task);\n    }\n\n    return task;\n  });\n}\n\nfunction sagaMiddlewareFactory(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      sagaMonitor = _ref.sagaMonitor,\n      options = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref, ["context", "channel", "sagaMonitor"]);\n\n  var boundRunSaga;\n\n  if (false) {}\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n    boundRunSaga = runSaga.bind(null, Object(esm_extends["a" /* default */])({}, options, {\n      context: context,\n      channel: channel,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor\n    }));\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n\n        var result = next(action); // hit reducers\n\n        channel.put(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    if (false) {}\n\n    return boundRunSaga.apply(void 0, arguments);\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    if (false) {}\n\n    Object(io_6de156f3["L" /* p */])(context, props);\n  };\n\n  return sagaMiddleware;\n}\n\n/* harmony default export */ var redux_saga_core_esm = (sagaMiddlewareFactory);\n\n\n// CONCATENATED MODULE: ./node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js\n\n\n\n\n\n/* harmony default export */ var redux_saga_core_npm_proxy_esm = __webpack_exports__["a"] = (redux_saga_core_esm);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar reactIs = __webpack_require__(21);\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanM/ZGE2YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsRUFBVTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxtQkFBbUIsaUJBQWlCO0FBQ3BDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6IjM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///38\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return symbolObservablePonyfill; });\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvcG9ueWZpbGwuanM/NDhiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuXHRpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sLm9ic2VydmFibGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbCgnb2JzZXJ2YWJsZScpO1xuXHRcdFx0U3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc1BsYWluT2JqZWN0LmpzP2MzZmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWdCO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQyIsImZpbGUiOiI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcgfHwgdmFsdWUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gdmFsdWU7XG5cbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbHVlKSA9PT0gcHJvdG87XG59KTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///40\n")},function(module,exports,__webpack_require__){eval('!function(e){ true?module.exports=e(null):undefined}(function e(a){"use strict";var r=/^\\0+/g,c=/[\\0\\r\\f]/g,s=/: */g,t=/zoo|gra/,i=/([,: ])(transform)/g,f=/,+\\s*(?![^(]*[)])/g,n=/ +\\s*(?![^(]*[)])/g,l=/ *[\\0] */g,o=/,\\r+?/g,h=/([\\t\\r\\n ])*\\f?&/g,u=/:global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)/g,d=/\\W+/g,b=/@(k\\w+)\\s*(\\S*)\\s*/,p=/::(place)/g,k=/:(read-only)/g,g=/\\s+(?=[{\\];=:>])/g,A=/([[}=:>])\\s+/g,C=/(\\{[^{]+?);(?=\\})/g,w=/\\s{2,}/g,v=/([^\\(])(:+) */g,m=/[svh]\\w+-[tblr]{2}/,x=/\\(\\s*(.*)\\s*\\)/g,$=/([\\s\\S]*?);/g,y=/-self|flex-/g,O=/[^]*?(:[rp][el]a[\\w-]+)[^]*/,j=/stretch|:\\s*\\w+\\-(?:conte|avail)/,z=/([^-])(image-set\\()/,N="-webkit-",S="-moz-",F="-ms-",W=59,q=125,B=123,D=40,E=41,G=91,H=93,I=10,J=13,K=9,L=64,M=32,P=38,Q=45,R=95,T=42,U=44,V=58,X=39,Y=34,Z=47,_=62,ee=43,ae=126,re=0,ce=12,se=11,te=107,ie=109,fe=115,ne=112,le=111,oe=105,he=99,ue=100,de=112,be=1,pe=1,ke=0,ge=1,Ae=1,Ce=1,we=0,ve=0,me=0,xe=[],$e=[],ye=0,Oe=null,je=-2,ze=-1,Ne=0,Se=1,Fe=2,We=3,qe=0,Be=1,De="",Ee="",Ge="";function He(e,a,s,t,i){for(var f,n,o=0,h=0,u=0,d=0,g=0,A=0,C=0,w=0,m=0,$=0,y=0,O=0,j=0,z=0,R=0,we=0,$e=0,Oe=0,je=0,ze=s.length,Je=ze-1,Re="",Te="",Ue="",Ve="",Xe="",Ye="";R<ze;){if(C=s.charCodeAt(R),R===Je)if(h+d+u+o!==0){if(0!==h)C=h===Z?I:Z;d=u=o=0,ze++,Je++}if(h+d+u+o===0){if(R===Je){if(we>0)Te=Te.replace(c,"");if(Te.trim().length>0){switch(C){case M:case K:case W:case J:case I:break;default:Te+=s.charAt(R)}C=W}}if(1===$e)switch(C){case B:case q:case W:case Y:case X:case D:case E:case U:$e=0;case K:case J:case I:case M:break;default:for($e=0,je=R,g=C,R--,C=W;je<ze;)switch(s.charCodeAt(je++)){case I:case J:case W:++R,C=g,je=ze;break;case V:if(we>0)++R,C=g;case B:je=ze}}switch(C){case B:for(g=(Te=Te.trim()).charCodeAt(0),y=1,je=++R;R<ze;){switch(C=s.charCodeAt(R)){case B:y++;break;case q:y--;break;case Z:switch(A=s.charCodeAt(R+1)){case T:case Z:R=Qe(A,R,Je,s)}break;case G:C++;case D:C++;case Y:case X:for(;R++<Je&&s.charCodeAt(R)!==C;);}if(0===y)break;R++}if(Ue=s.substring(je,R),g===re)g=(Te=Te.replace(r,"").trim()).charCodeAt(0);switch(g){case L:if(we>0)Te=Te.replace(c,"");switch(A=Te.charCodeAt(1)){case ue:case ie:case fe:case Q:f=a;break;default:f=xe}if(je=(Ue=He(a,f,Ue,A,i+1)).length,me>0&&0===je)je=Te.length;if(ye>0)if(f=Ie(xe,Te,Oe),n=Pe(We,Ue,f,a,pe,be,je,A,i,t),Te=f.join(""),void 0!==n)if(0===(je=(Ue=n.trim()).length))A=0,Ue="";if(je>0)switch(A){case fe:Te=Te.replace(x,Me);case ue:case ie:case Q:Ue=Te+"{"+Ue+"}";break;case te:if(Ue=(Te=Te.replace(b,"$1 $2"+(Be>0?De:"")))+"{"+Ue+"}",1===Ae||2===Ae&&Le("@"+Ue,3))Ue="@"+N+Ue+"@"+Ue;else Ue="@"+Ue;break;default:if(Ue=Te+Ue,t===de)Ve+=Ue,Ue=""}else Ue="";break;default:Ue=He(a,Ie(a,Te,Oe),Ue,t,i+1)}Xe+=Ue,O=0,$e=0,z=0,we=0,Oe=0,j=0,Te="",Ue="",C=s.charCodeAt(++R);break;case q:case W:if((je=(Te=(we>0?Te.replace(c,""):Te).trim()).length)>1){if(0===z)if((g=Te.charCodeAt(0))===Q||g>96&&g<123)je=(Te=Te.replace(" ",":")).length;if(ye>0)if(void 0!==(n=Pe(Se,Te,a,e,pe,be,Ve.length,t,i,t)))if(0===(je=(Te=n.trim()).length))Te="\\0\\0";switch(g=Te.charCodeAt(0),A=Te.charCodeAt(1),g){case re:break;case L:if(A===oe||A===he){Ye+=Te+s.charAt(R);break}default:if(Te.charCodeAt(je-1)===V)break;Ve+=Ke(Te,g,A,Te.charCodeAt(2))}}O=0,$e=0,z=0,we=0,Oe=0,Te="",C=s.charCodeAt(++R)}}switch(C){case J:case I:if(h+d+u+o+ve===0)switch($){case E:case X:case Y:case L:case ae:case _:case T:case ee:case Z:case Q:case V:case U:case W:case B:case q:break;default:if(z>0)$e=1}if(h===Z)h=0;else if(ge+O===0&&t!==te&&Te.length>0)we=1,Te+="\\0";if(ye*qe>0)Pe(Ne,Te,a,e,pe,be,Ve.length,t,i,t);be=1,pe++;break;case W:case q:if(h+d+u+o===0){be++;break}default:switch(be++,Re=s.charAt(R),C){case K:case M:if(d+o+h===0)switch(w){case U:case V:case K:case M:Re="";break;default:if(C!==M)Re=" "}break;case re:Re="\\\\0";break;case ce:Re="\\\\f";break;case se:Re="\\\\v";break;case P:if(d+h+o===0&&ge>0)Oe=1,we=1,Re="\\f"+Re;break;case 108:if(d+h+o+ke===0&&z>0)switch(R-z){case 2:if(w===ne&&s.charCodeAt(R-3)===V)ke=w;case 8:if(m===le)ke=m}break;case V:if(d+h+o===0)z=R;break;case U:if(h+u+d+o===0)we=1,Re+="\\r";break;case Y:case X:if(0===h)d=d===C?0:0===d?C:d;break;case G:if(d+h+u===0)o++;break;case H:if(d+h+u===0)o--;break;case E:if(d+h+o===0)u--;break;case D:if(d+h+o===0){if(0===O)switch(2*w+3*m){case 533:break;default:y=0,O=1}u++}break;case L:if(h+u+d+o+z+j===0)j=1;break;case T:case Z:if(d+o+u>0)break;switch(h){case 0:switch(2*C+3*s.charCodeAt(R+1)){case 235:h=Z;break;case 220:je=R,h=T}break;case T:if(C===Z&&w===T&&je+2!==R){if(33===s.charCodeAt(je+2))Ve+=s.substring(je,R+1);Re="",h=0}}}if(0===h){if(ge+d+o+j===0&&t!==te&&C!==W)switch(C){case U:case ae:case _:case ee:case E:case D:if(0===O){switch(w){case K:case M:case I:case J:Re+="\\0";break;default:Re="\\0"+Re+(C===U?"":"\\0")}we=1}else switch(C){case D:if(z+7===R&&108===w)z=0;O=++y;break;case E:if(0==(O=--y))we=1,Re+="\\0"}break;case K:case M:switch(w){case re:case B:case q:case W:case U:case ce:case K:case M:case I:case J:break;default:if(0===O)we=1,Re+="\\0"}}if(Te+=Re,C!==M&&C!==K)$=C}}m=w,w=C,R++}if(je=Ve.length,me>0)if(0===je&&0===Xe.length&&0===a[0].length==false)if(t!==ie||1===a.length&&(ge>0?Ee:Ge)===a[0])je=a.join(",").length+2;if(je>0){if(f=0===ge&&t!==te?function(e){for(var a,r,s=0,t=e.length,i=Array(t);s<t;++s){for(var f=e[s].split(l),n="",o=0,h=0,u=0,d=0,b=f.length;o<b;++o){if(0===(h=(r=f[o]).length)&&b>1)continue;if(u=n.charCodeAt(n.length-1),d=r.charCodeAt(0),a="",0!==o)switch(u){case T:case ae:case _:case ee:case M:case D:break;default:a=" "}switch(d){case P:r=a+Ee;case ae:case _:case ee:case M:case E:case D:break;case G:r=a+r+Ee;break;case V:switch(2*r.charCodeAt(1)+3*r.charCodeAt(2)){case 530:if(Ce>0){r=a+r.substring(8,h-1);break}default:if(o<1||f[o-1].length<1)r=a+Ee+r}break;case U:a="";default:if(h>1&&r.indexOf(":")>0)r=a+r.replace(v,"$1"+Ee+"$2");else r=a+r+Ee}n+=r}i[s]=n.replace(c,"").trim()}return i}(a):a,ye>0)if(void 0!==(n=Pe(Fe,Ve,f,e,pe,be,je,t,i,t))&&0===(Ve=n).length)return Ye+Ve+Xe;if(Ve=f.join(",")+"{"+Ve+"}",Ae*ke!=0){if(2===Ae&&!Le(Ve,2))ke=0;switch(ke){case le:Ve=Ve.replace(k,":"+S+"$1")+Ve;break;case ne:Ve=Ve.replace(p,"::"+N+"input-$1")+Ve.replace(p,"::"+S+"$1")+Ve.replace(p,":"+F+"input-$1")+Ve}ke=0}}return Ye+Ve+Xe}function Ie(e,a,r){var c=a.trim().split(o),s=c,t=c.length,i=e.length;switch(i){case 0:case 1:for(var f=0,n=0===i?"":e[0]+" ";f<t;++f)s[f]=Je(n,s[f],r,i).trim();break;default:f=0;var l=0;for(s=[];f<t;++f)for(var h=0;h<i;++h)s[l++]=Je(e[h]+" ",c[f],r,i).trim()}return s}function Je(e,a,r,c){var s=a,t=s.charCodeAt(0);if(t<33)t=(s=s.trim()).charCodeAt(0);switch(t){case P:switch(ge+c){case 0:case 1:if(0===e.trim().length)break;default:return s.replace(h,"$1"+e.trim())}break;case V:switch(s.charCodeAt(1)){case 103:if(Ce>0&&ge>0)return s.replace(u,"$1").replace(h,"$1"+Ge);break;default:return e.trim()+s.replace(h,"$1"+e.trim())}default:if(r*ge>0&&s.indexOf("\\f")>0)return s.replace(h,(e.charCodeAt(0)===V?"":"$1")+e.trim())}return e+s}function Ke(e,a,r,c){var l,o=0,h=e+";",u=2*a+3*r+4*c;if(944===u)return function(e){var a=e.length,r=e.indexOf(":",9)+1,c=e.substring(0,r).trim(),s=e.substring(r,a-1).trim();switch(e.charCodeAt(9)*Be){case 0:break;case Q:if(110!==e.charCodeAt(10))break;default:for(var t=s.split((s="",f)),i=0,r=0,a=t.length;i<a;r=0,++i){for(var l=t[i],o=l.split(n);l=o[r];){var h=l.charCodeAt(0);if(1===Be&&(h>L&&h<90||h>96&&h<123||h===R||h===Q&&l.charCodeAt(1)!==Q))switch(isNaN(parseFloat(l))+(-1!==l.indexOf("("))){case 1:switch(l){case"infinite":case"alternate":case"backwards":case"running":case"normal":case"forwards":case"both":case"none":case"linear":case"ease":case"ease-in":case"ease-out":case"ease-in-out":case"paused":case"reverse":case"alternate-reverse":case"inherit":case"initial":case"unset":case"step-start":case"step-end":break;default:l+=De}}o[r++]=l}s+=(0===i?"":",")+o.join(" ")}}if(s=c+s+";",1===Ae||2===Ae&&Le(s,1))return N+s+s;return s}(h);else if(0===Ae||2===Ae&&!Le(h,1))return h;switch(u){case 1015:return 97===h.charCodeAt(10)?N+h+h:h;case 951:return 116===h.charCodeAt(3)?N+h+h:h;case 963:return 110===h.charCodeAt(5)?N+h+h:h;case 1009:if(100!==h.charCodeAt(4))break;case 969:case 942:return N+h+h;case 978:return N+h+S+h+h;case 1019:case 983:return N+h+S+h+F+h+h;case 883:if(h.charCodeAt(8)===Q)return N+h+h;if(h.indexOf("image-set(",11)>0)return h.replace(z,"$1"+N+"$2")+h;return h;case 932:if(h.charCodeAt(4)===Q)switch(h.charCodeAt(5)){case 103:return N+"box-"+h.replace("-grow","")+N+h+F+h.replace("grow","positive")+h;case 115:return N+h+F+h.replace("shrink","negative")+h;case 98:return N+h+F+h.replace("basis","preferred-size")+h}return N+h+F+h+h;case 964:return N+h+F+"flex-"+h+h;case 1023:if(99!==h.charCodeAt(8))break;return l=h.substring(h.indexOf(":",15)).replace("flex-","").replace("space-between","justify"),N+"box-pack"+l+N+h+F+"flex-pack"+l+h;case 1005:return t.test(h)?h.replace(s,":"+N)+h.replace(s,":"+S)+h:h;case 1e3:switch(o=(l=h.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(o)){case 226:l=h.replace(m,"tb");break;case 232:l=h.replace(m,"tb-rl");break;case 220:l=h.replace(m,"lr");break;default:return h}return N+h+F+l+h;case 1017:if(-1===h.indexOf("sticky",9))return h;case 975:switch(o=(h=e).length-10,u=(l=(33===h.charCodeAt(o)?h.substring(0,o):h).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(l.charCodeAt(8)<111)break;case 115:h=h.replace(l,N+l)+";"+h;break;case 207:case 102:h=h.replace(l,N+(u>102?"inline-":"")+"box")+";"+h.replace(l,N+l)+";"+h.replace(l,F+l+"box")+";"+h}return h+";";case 938:if(h.charCodeAt(5)===Q)switch(h.charCodeAt(6)){case 105:return l=h.replace("-items",""),N+h+N+"box-"+l+F+"flex-"+l+h;case 115:return N+h+F+"flex-item-"+h.replace(y,"")+h;default:return N+h+F+"flex-line-pack"+h.replace("align-content","").replace(y,"")+h}break;case 973:case 989:if(h.charCodeAt(3)!==Q||122===h.charCodeAt(4))break;case 931:case 953:if(true===j.test(e))if(115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0))return Ke(e.replace("stretch","fill-available"),a,r,c).replace(":fill-available",":stretch");else return h.replace(l,N+l)+h.replace(l,S+l.replace("fill-",""))+h;break;case 962:if(h=N+h+(102===h.charCodeAt(5)?F+h:"")+h,r+c===211&&105===h.charCodeAt(13)&&h.indexOf("transform",10)>0)return h.substring(0,h.indexOf(";",27)+1).replace(i,"$1"+N+"$2")+h}return h}function Le(e,a){var r=e.indexOf(1===a?":":"{"),c=e.substring(0,3!==a?r:10),s=e.substring(r+1,e.length-1);return Oe(2!==a?c:c.replace(O,"$1"),s,a)}function Me(e,a){var r=Ke(a,a.charCodeAt(0),a.charCodeAt(1),a.charCodeAt(2));return r!==a+";"?r.replace($," or ($1)").substring(4):"("+a+")"}function Pe(e,a,r,c,s,t,i,f,n,l){for(var o,h=0,u=a;h<ye;++h)switch(o=$e[h].call(Te,e,u,r,c,s,t,i,f,n,l)){case void 0:case false:case true:case null:break;default:u=o}if(u!==a)return u}function Qe(e,a,r,c){for(var s=a+1;s<r;++s)switch(c.charCodeAt(s)){case Z:if(e===T)if(c.charCodeAt(s-1)===T&&a+2!==s)return s+1;break;case I:if(e===Z)return s+1}return s}function Re(e){for(var a in e){var r=e[a];switch(a){case"keyframe":Be=0|r;break;case"global":Ce=0|r;break;case"cascade":ge=0|r;break;case"compress":we=0|r;break;case"semicolon":ve=0|r;break;case"preserve":me=0|r;break;case"prefix":if(Oe=null,!r)Ae=0;else if("function"!=typeof r)Ae=1;else Ae=2,Oe=r}}return Re}function Te(a,r){if(void 0!==this&&this.constructor===Te)return e(a);var s=a,t=s.charCodeAt(0);if(t<33)t=(s=s.trim()).charCodeAt(0);if(Be>0)De=s.replace(d,t===G?"":"-");if(t=1,1===ge)Ge=s;else Ee=s;var i,f=[Ge];if(ye>0)if(void 0!==(i=Pe(ze,r,f,f,pe,be,0,0,0,0))&&"string"==typeof i)r=i;var n=He(xe,f,r,0,0);if(ye>0)if(void 0!==(i=Pe(je,n,f,f,pe,be,n.length,0,0,0))&&"string"!=typeof(n=i))t=0;return De="",Ge="",Ee="",ke=0,pe=1,be=1,we*t==0?n:n.replace(c,"").replace(g,"").replace(A,"$1").replace(C,"$1").replace(w," ")}if(Te.use=function e(a){switch(a){case void 0:case null:ye=$e.length=0;break;default:if("function"==typeof a)$e[ye++]=a;else if("object"==typeof a)for(var r=0,c=a.length;r<c;++r)e(a[r]);else qe=0|!!a}return e},Te.set=Re,void 0!==a)Re(a);return Te});\n//# sourceMappingURL=stylis.min.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (memoizeOne);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWVtb2l6ZS1vbmUvZGlzdC9tZW1vaXplLW9uZS5lc20uanM/NWIwYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLDBCQUEwQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLG1FQUFVLEVBQUMiLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhcmVJbnB1dHNFcXVhbChuZXdJbnB1dHMsIGxhc3RJbnB1dHMpIHtcbiAgICBpZiAobmV3SW5wdXRzLmxlbmd0aCAhPT0gbGFzdElucHV0cy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5ld0lucHV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAobmV3SW5wdXRzW2ldICE9PSBsYXN0SW5wdXRzW2ldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIG1lbW9pemVPbmUocmVzdWx0Rm4sIGlzRXF1YWwpIHtcbiAgICBpZiAoaXNFcXVhbCA9PT0gdm9pZCAwKSB7IGlzRXF1YWwgPSBhcmVJbnB1dHNFcXVhbDsgfVxuICAgIHZhciBsYXN0VGhpcztcbiAgICB2YXIgbGFzdEFyZ3MgPSBbXTtcbiAgICB2YXIgbGFzdFJlc3VsdDtcbiAgICB2YXIgY2FsbGVkT25jZSA9IGZhbHNlO1xuICAgIGZ1bmN0aW9uIG1lbW9pemVkKCkge1xuICAgICAgICB2YXIgbmV3QXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgbmV3QXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjYWxsZWRPbmNlICYmIGxhc3RUaGlzID09PSB0aGlzICYmIGlzRXF1YWwobmV3QXJncywgbGFzdEFyZ3MpKSB7XG4gICAgICAgICAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBsYXN0UmVzdWx0ID0gcmVzdWx0Rm4uYXBwbHkodGhpcywgbmV3QXJncyk7XG4gICAgICAgIGNhbGxlZE9uY2UgPSB0cnVlO1xuICAgICAgICBsYXN0VGhpcyA9IHRoaXM7XG4gICAgICAgIGxhc3RBcmdzID0gbmV3QXJncztcbiAgICAgICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBtZW1vaXplZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZU9uZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///42\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DEFAULT_NAMESPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ACTION_TYPE_DELIMITER; });\nvar DEFAULT_NAMESPACE = '/';\nvar ACTION_TYPE_DELIMITER = '||';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy9jb25zdGFudHMuanM/ZDUzZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQU87QUFDQSIsImZpbGUiOiI0My5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgREVGQVVMVF9OQU1FU1BBQ0UgPSAnLyc7XG5leHBvcnQgdmFyIEFDVElPTl9UWVBFX0RFTElNSVRFUiA9ICd8fCc7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///43\n")},,,function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(47);\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanM/ZDdhMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsMkJBQTJCLG1CQUFPLENBQUMsRUFBNEI7O0FBRS9EO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQ2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///46\n")},function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanM/NTliMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEiLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///47\n")},function(module,exports,__webpack_require__){"use strict";eval('/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?\nSymbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;\nfunction z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzP2E5M2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTtBQUNiO0FBQ0EsY0FBYyxrQ0FBa0MsaUJBQWlCLFVBQVUsMEJBQTBCLG1EQUFtRCxrQ0FBa0MsNENBQTRDLGtCQUFrQixrQkFBa0IsY0FBYyxnQkFBZ0Isb0JBQW9CLHlCQUF5QiwwQkFBMEIsMEJBQTBCLGtCQUFrQixxQkFBcUIsbUJBQW1CLGVBQWUsZUFBZTtBQUNqZSxtQkFBbUIscUJBQXFCLG1CQUFtQixnQ0FBZ0MsdUJBQXVCLDJCQUEyQixzQ0FBc0MsaUJBQWlCLHNDQUFzQyxpQkFBaUIsOEJBQThCLHFEQUFxRCxpQ0FBaUMsaUJBQWlCLCtCQUErQixpQkFBaUIsMkJBQTJCO0FBQzNjLDJCQUEyQixpQkFBaUIsNkJBQTZCLGlCQUFpQiwrQkFBK0IsaUJBQWlCLGlDQUFpQyxpQkFBaUIsK0JBQStCO0FBQzNOLHVDQUF1Qyw2UUFBNlEiLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///48\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (thunk);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtdGh1bmsvZXMvaW5kZXguanM/YjA4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVlLDhEQUFLIiwiZmlsZSI6IjQ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKGV4dHJhQXJndW1lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCxcbiAgICAgICAgZ2V0U3RhdGUgPSBfcmVmLmdldFN0YXRlO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gYWN0aW9uKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmFBcmd1bWVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xufVxuXG52YXIgdGh1bmsgPSBjcmVhdGVUaHVua01pZGRsZXdhcmUoKTtcbnRodW5rLndpdGhFeHRyYUFyZ3VtZW50ID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlO1xuXG5leHBvcnQgZGVmYXVsdCB0aHVuazsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///49\n")},,,function(module,exports){eval('(function() { module.exports = this["wp"]["hooks"]; }());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1widGhpc1wiOltcIndwXCIsXCJob29rc1wiXX0/NGIxMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLHNDQUFzQyxFQUFFIiwiZmlsZSI6IjUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkgeyBtb2R1bGUuZXhwb3J0cyA9IHRoaXNbXCJ3cFwiXVtcImhvb2tzXCJdOyB9KCkpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///52\n')},,function(module,exports,__webpack_require__){eval("(function (factory) {\n\t true ? (module['exports'] = factory()) :\n\t\tundefined\n}(function () {\n\n\t'use strict'\n\n\treturn function (insertRule) {\n\t\tvar delimiter = '/*|*/'\n\t\tvar needle = delimiter+'}'\n\n\t\tfunction toSheet (block) {\n\t\t\tif (block)\n\t\t\t\ttry {\n\t\t\t\t\tinsertRule(block + '}')\n\t\t\t\t} catch (e) {}\n\t\t}\n\n\t\treturn function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {\n\t\t\tswitch (context) {\n\t\t\t\t// property\n\t\t\t\tcase 1:\n\t\t\t\t\t// @import\n\t\t\t\t\tif (depth === 0 && content.charCodeAt(0) === 64)\n\t\t\t\t\t\treturn insertRule(content+';'), ''\n\t\t\t\t\tbreak\n\t\t\t\t// selector\n\t\t\t\tcase 2:\n\t\t\t\t\tif (ns === 0)\n\t\t\t\t\t\treturn content + delimiter\n\t\t\t\t\tbreak\n\t\t\t\t// at-rule\n\t\t\t\tcase 3:\n\t\t\t\t\tswitch (ns) {\n\t\t\t\t\t\t// @font-face, @page\n\t\t\t\t\t\tcase 102:\n\t\t\t\t\t\tcase 112:\n\t\t\t\t\t\t\treturn insertRule(selectors[0]+content), ''\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn content + (at === 0 ? delimiter : '')\n\t\t\t\t\t}\n\t\t\t\tcase -2:\n\t\t\t\t\tcontent.split(needle).forEach(toSheet)\n\t\t\t}\n\t\t}\n\t}\n}))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGlzLXJ1bGUtc2hlZXQvaW5kZXguanM/NGMwNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLENBQUMsS0FBNEQ7QUFDN0QsRUFBRSxTQUN3QztBQUMxQyxDQUFDOztBQUVEOztBQUVBO0FBQ0E7QUFDQSwyQkFBMkI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQixLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gKG1vZHVsZVsnZXhwb3J0cyddID0gZmFjdG9yeSgpKSA6XG5cdFx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmVbJ2FtZCddID8gZGVmaW5lKGZhY3RvcnkoKSkgOlxuXHRcdFx0KHdpbmRvd1snc3R5bGlzUnVsZVNoZWV0J10gPSBmYWN0b3J5KCkpXG59KGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCdcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluc2VydFJ1bGUpIHtcblx0XHR2YXIgZGVsaW1pdGVyID0gJy8qfCovJ1xuXHRcdHZhciBuZWVkbGUgPSBkZWxpbWl0ZXIrJ30nXG5cblx0XHRmdW5jdGlvbiB0b1NoZWV0IChibG9jaykge1xuXHRcdFx0aWYgKGJsb2NrKVxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGluc2VydFJ1bGUoYmxvY2sgKyAnfScpXG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uIHJ1bGVTaGVldCAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzLCBwYXJlbnRzLCBsaW5lLCBjb2x1bW4sIGxlbmd0aCwgbnMsIGRlcHRoLCBhdCkge1xuXHRcdFx0c3dpdGNoIChjb250ZXh0KSB7XG5cdFx0XHRcdC8vIHByb3BlcnR5XG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHQvLyBAaW1wb3J0XG5cdFx0XHRcdFx0aWYgKGRlcHRoID09PSAwICYmIGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gNjQpXG5cdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShjb250ZW50Kyc7JyksICcnXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gc2VsZWN0b3Jcblx0XHRcdFx0Y2FzZSAyOlxuXHRcdFx0XHRcdGlmIChucyA9PT0gMClcblx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gYXQtcnVsZVxuXHRcdFx0XHRjYXNlIDM6XG5cdFx0XHRcdFx0c3dpdGNoIChucykge1xuXHRcdFx0XHRcdFx0Ly8gQGZvbnQtZmFjZSwgQHBhZ2Vcblx0XHRcdFx0XHRcdGNhc2UgMTAyOlxuXHRcdFx0XHRcdFx0Y2FzZSAxMTI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnNlcnRSdWxlKHNlbGVjdG9yc1swXStjb250ZW50KSwgJydcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRjYXNlIC0yOlxuXHRcdFx0XHRcdGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///54\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ __webpack_exports__["a"] = (unitlessKeys);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcz8zMDRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZSxxRUFBWSxFQUFDIiwiZmlsZSI6IjU1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHVuaXRsZXNzS2V5cyA9IHtcbiAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IDEsXG4gIGJvcmRlckltYWdlT3V0c2V0OiAxLFxuICBib3JkZXJJbWFnZVNsaWNlOiAxLFxuICBib3JkZXJJbWFnZVdpZHRoOiAxLFxuICBib3hGbGV4OiAxLFxuICBib3hGbGV4R3JvdXA6IDEsXG4gIGJveE9yZGluYWxHcm91cDogMSxcbiAgY29sdW1uQ291bnQ6IDEsXG4gIGNvbHVtbnM6IDEsXG4gIGZsZXg6IDEsXG4gIGZsZXhHcm93OiAxLFxuICBmbGV4UG9zaXRpdmU6IDEsXG4gIGZsZXhTaHJpbms6IDEsXG4gIGZsZXhOZWdhdGl2ZTogMSxcbiAgZmxleE9yZGVyOiAxLFxuICBncmlkUm93OiAxLFxuICBncmlkUm93RW5kOiAxLFxuICBncmlkUm93U3BhbjogMSxcbiAgZ3JpZFJvd1N0YXJ0OiAxLFxuICBncmlkQ29sdW1uOiAxLFxuICBncmlkQ29sdW1uRW5kOiAxLFxuICBncmlkQ29sdW1uU3BhbjogMSxcbiAgZ3JpZENvbHVtblN0YXJ0OiAxLFxuICBtc0dyaWRSb3c6IDEsXG4gIG1zR3JpZFJvd1NwYW46IDEsXG4gIG1zR3JpZENvbHVtbjogMSxcbiAgbXNHcmlkQ29sdW1uU3BhbjogMSxcbiAgZm9udFdlaWdodDogMSxcbiAgbGluZUhlaWdodDogMSxcbiAgb3BhY2l0eTogMSxcbiAgb3JkZXI6IDEsXG4gIG9ycGhhbnM6IDEsXG4gIHRhYlNpemU6IDEsXG4gIHdpZG93czogMSxcbiAgekluZGV4OiAxLFxuICB6b29tOiAxLFxuICBXZWJraXRMaW5lQ2xhbXA6IDEsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IDEsXG4gIGZsb29kT3BhY2l0eTogMSxcbiAgc3RvcE9wYWNpdHk6IDEsXG4gIHN0cm9rZURhc2hhcnJheTogMSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogMSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMSxcbiAgc3Ryb2tlT3BhY2l0eTogMSxcbiAgc3Ryb2tlV2lkdGg6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVuaXRsZXNzS2V5cztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///55\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// CONCATENATED MODULE: ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ var memoize_browser_esm = (memoize);\n\n// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js\n\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize_browser_esm(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\n/* harmony default export */ var is_prop_valid_browser_esm = __webpack_exports__["a"] = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanM/ZTJhNCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2lzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanM/ZjZlOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLCtEQUFPLEVBQUM7OztBQ1JnQjs7QUFFdkMsazdIQUFrN0g7O0FBRWw3SCxZQUFZLG1CQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsOEZBQUssRUFBQyIsImZpbGUiOiI1Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgdmFyIGNhY2hlID0ge307XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemU7XG4iLCJpbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIHJlYWN0UHJvcHNSZWdleCA9IC9eKChjaGlsZHJlbnxkYW5nZXJvdXNseVNldElubmVySFRNTHxrZXl8cmVmfGF1dG9Gb2N1c3xkZWZhdWx0VmFsdWV8ZGVmYXVsdENoZWNrZWR8aW5uZXJIVE1MfHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ3xzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmd8dmFsdWVMaW5rfGFjY2VwdHxhY2NlcHRDaGFyc2V0fGFjY2Vzc0tleXxhY3Rpb258YWxsb3d8YWxsb3dVc2VyTWVkaWF8YWxsb3dQYXltZW50UmVxdWVzdHxhbGxvd0Z1bGxTY3JlZW58YWxsb3dUcmFuc3BhcmVuY3l8YWx0fGFzeW5jfGF1dG9Db21wbGV0ZXxhdXRvUGxheXxjYXB0dXJlfGNlbGxQYWRkaW5nfGNlbGxTcGFjaW5nfGNoYWxsZW5nZXxjaGFyU2V0fGNoZWNrZWR8Y2l0ZXxjbGFzc0lEfGNsYXNzTmFtZXxjb2xzfGNvbFNwYW58Y29udGVudHxjb250ZW50RWRpdGFibGV8Y29udGV4dE1lbnV8Y29udHJvbHN8Y29udHJvbHNMaXN0fGNvb3Jkc3xjcm9zc09yaWdpbnxkYXRhfGRhdGVUaW1lfGRlY29kaW5nfGRlZmF1bHR8ZGVmZXJ8ZGlyfGRpc2FibGVkfGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlfGRvd25sb2FkfGRyYWdnYWJsZXxlbmNUeXBlfGZvcm18Zm9ybUFjdGlvbnxmb3JtRW5jVHlwZXxmb3JtTWV0aG9kfGZvcm1Ob1ZhbGlkYXRlfGZvcm1UYXJnZXR8ZnJhbWVCb3JkZXJ8aGVhZGVyc3xoZWlnaHR8aGlkZGVufGhpZ2h8aHJlZnxocmVmTGFuZ3xodG1sRm9yfGh0dHBFcXVpdnxpZHxpbnB1dE1vZGV8aW50ZWdyaXR5fGlzfGtleVBhcmFtc3xrZXlUeXBlfGtpbmR8bGFiZWx8bGFuZ3xsaXN0fGxvYWRpbmd8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpbmVydHxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8b258cmVzdWx0c3xzZWN1cml0eXx1bnNlbGVjdGFibGV8YWNjZW50SGVpZ2h0fGFjY3VtdWxhdGV8YWRkaXRpdmV8YWxpZ25tZW50QmFzZWxpbmV8YWxsb3dSZW9yZGVyfGFscGhhYmV0aWN8YW1wbGl0dWRlfGFyYWJpY0Zvcm18YXNjZW50fGF0dHJpYnV0ZU5hbWV8YXR0cmlidXRlVHlwZXxhdXRvUmV2ZXJzZXxhemltdXRofGJhc2VGcmVxdWVuY3l8YmFzZWxpbmVTaGlmdHxiYXNlUHJvZmlsZXxiYm94fGJlZ2lufGJpYXN8Ynl8Y2FsY01vZGV8Y2FwSGVpZ2h0fGNsaXB8Y2xpcFBhdGhVbml0c3xjbGlwUGF0aHxjbGlwUnVsZXxjb2xvckludGVycG9sYXRpb258Y29sb3JJbnRlcnBvbGF0aW9uRmlsdGVyc3xjb2xvclByb2ZpbGV8Y29sb3JSZW5kZXJpbmd8Y29udGVudFNjcmlwdFR5cGV8Y29udGVudFN0eWxlVHlwZXxjdXJzb3J8Y3h8Y3l8ZHxkZWNlbGVyYXRlfGRlc2NlbnR8ZGlmZnVzZUNvbnN0YW50fGRpcmVjdGlvbnxkaXNwbGF5fGRpdmlzb3J8ZG9taW5hbnRCYXNlbGluZXxkdXJ8ZHh8ZHl8ZWRnZU1vZGV8ZWxldmF0aW9ufGVuYWJsZUJhY2tncm91bmR8ZW5kfGV4cG9uZW50fGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWR8ZmlsbHxmaWxsT3BhY2l0eXxmaWxsUnVsZXxmaWx0ZXJ8ZmlsdGVyUmVzfGZpbHRlclVuaXRzfGZsb29kQ29sb3J8Zmxvb2RPcGFjaXR5fGZvY3VzYWJsZXxmb250RmFtaWx5fGZvbnRTaXplfGZvbnRTaXplQWRqdXN0fGZvbnRTdHJldGNofGZvbnRTdHlsZXxmb250VmFyaWFudHxmb250V2VpZ2h0fGZvcm1hdHxmcm9tfGZyfGZ4fGZ5fGcxfGcyfGdseXBoTmFtZXxnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbHxnbHlwaE9yaWVudGF0aW9uVmVydGljYWx8Z2x5cGhSZWZ8Z3JhZGllbnRUcmFuc2Zvcm18Z3JhZGllbnRVbml0c3xoYW5naW5nfGhvcml6QWR2WHxob3Jpek9yaWdpblh8aWRlb2dyYXBoaWN8aW1hZ2VSZW5kZXJpbmd8aW58aW4yfGludGVyY2VwdHxrfGsxfGsyfGszfGs0fGtlcm5lbE1hdHJpeHxrZXJuZWxVbml0TGVuZ3RofGtlcm5pbmd8a2V5UG9pbnRzfGtleVNwbGluZXN8a2V5VGltZXN8bGVuZ3RoQWRqdXN0fGxldHRlclNwYWNpbmd8bGlnaHRpbmdDb2xvcnxsaW1pdGluZ0NvbmVBbmdsZXxsb2NhbHxtYXJrZXJFbmR8bWFya2VyTWlkfG1hcmtlclN0YXJ0fG1hcmtlckhlaWdodHxtYXJrZXJVbml0c3xtYXJrZXJXaWR0aHxtYXNrfG1hc2tDb250ZW50VW5pdHN8bWFza1VuaXRzfG1hdGhlbWF0aWNhbHxtb2RlfG51bU9jdGF2ZXN8b2Zmc2V0fG9wYWNpdHl8b3BlcmF0b3J8b3JkZXJ8b3JpZW50fG9yaWVudGF0aW9ufG9yaWdpbnxvdmVyZmxvd3xvdmVybGluZVBvc2l0aW9ufG92ZXJsaW5lVGhpY2tuZXNzfHBhbm9zZTF8cGFpbnRPcmRlcnxwYXRoTGVuZ3RofHBhdHRlcm5Db250ZW50VW5pdHN8cGF0dGVyblRyYW5zZm9ybXxwYXR0ZXJuVW5pdHN8cG9pbnRlckV2ZW50c3xwb2ludHN8cG9pbnRzQXRYfHBvaW50c0F0WXxwb2ludHNBdFp8cHJlc2VydmVBbHBoYXxwcmVzZXJ2ZUFzcGVjdFJhdGlvfHByaW1pdGl2ZVVuaXRzfHJ8cmFkaXVzfHJlZlh8cmVmWXxyZW5kZXJpbmdJbnRlbnR8cmVwZWF0Q291bnR8cmVwZWF0RHVyfHJlcXVpcmVkRXh0ZW5zaW9uc3xyZXF1aXJlZEZlYXR1cmVzfHJlc3RhcnR8cmVzdWx0fHJvdGF0ZXxyeHxyeXxzY2FsZXxzZWVkfHNoYXBlUmVuZGVyaW5nfHNsb3BlfHNwYWNpbmd8c3BlY3VsYXJDb25zdGFudHxzcGVjdWxhckV4cG9uZW50fHNwZWVkfHNwcmVhZE1ldGhvZHxzdGFydE9mZnNldHxzdGREZXZpYXRpb258c3RlbWh8c3RlbXZ8c3RpdGNoVGlsZXN8c3RvcENvbG9yfHN0b3BPcGFjaXR5fHN0cmlrZXRocm91Z2hQb3NpdGlvbnxzdHJpa2V0aHJvdWdoVGhpY2tuZXNzfHN0cmluZ3xzdHJva2V8c3Ryb2tlRGFzaGFycmF5fHN0cm9rZURhc2hvZmZzZXR8c3Ryb2tlTGluZWNhcHxzdHJva2VMaW5lam9pbnxzdHJva2VNaXRlcmxpbWl0fHN0cm9rZU9wYWNpdHl8c3Ryb2tlV2lkdGh8c3VyZmFjZVNjYWxlfHN5c3RlbUxhbmd1YWdlfHRhYmxlVmFsdWVzfHRhcmdldFh8dGFyZ2V0WXx0ZXh0QW5jaG9yfHRleHREZWNvcmF0aW9ufHRleHRSZW5kZXJpbmd8dGV4dExlbmd0aHx0b3x0cmFuc2Zvcm18dTF8dTJ8dW5kZXJsaW5lUG9zaXRpb258dW5kZXJsaW5lVGhpY2tuZXNzfHVuaWNvZGV8dW5pY29kZUJpZGl8dW5pY29kZVJhbmdlfHVuaXRzUGVyRW18dkFscGhhYmV0aWN8dkhhbmdpbmd8dklkZW9ncmFwaGljfHZNYXRoZW1hdGljYWx8dmFsdWVzfHZlY3RvckVmZmVjdHx2ZXJzaW9ufHZlcnRBZHZZfHZlcnRPcmlnaW5YfHZlcnRPcmlnaW5ZfHZpZXdCb3h8dmlld1RhcmdldHx2aXNpYmlsaXR5fHdpZHRoc3x3b3JkU3BhY2luZ3x3cml0aW5nTW9kZXx4fHhIZWlnaHR8eDF8eDJ8eENoYW5uZWxTZWxlY3Rvcnx4bGlua0FjdHVhdGV8eGxpbmtBcmNyb2xlfHhsaW5rSHJlZnx4bGlua1JvbGV8eGxpbmtTaG93fHhsaW5rVGl0bGV8eGxpbmtUeXBlfHhtbEJhc2V8eG1sbnN8eG1sbnNYbGlua3x4bWxMYW5nfHhtbFNwYWNlfHl8eTF8eTJ8eUNoYW5uZWxTZWxlY3Rvcnx6fHpvb21BbmRQYW58Zm9yfGNsYXNzfGF1dG9mb2N1cyl8KChbRGRdW0FhXVtUdF1bQWFdfFtBYV1bUnJdW0lpXVtBYV18eCktLiopKSQvOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZmVlNjhhNGNkN2U2MDA5ZWY2MWQyM1xuXG52YXIgaW5kZXggPSBtZW1vaXplKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHJldHVybiByZWFjdFByb3BzUmVnZXgudGVzdChwcm9wKSB8fCBwcm9wLmNoYXJDb2RlQXQoMCkgPT09IDExMVxuICAvKiBvICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgxKSA9PT0gMTEwXG4gIC8qIG4gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDIpIDwgOTE7XG59XG4vKiBaKzEgKi9cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// UNUSED EXPORTS: concatArrays, merge\n\n// CONCATENATED MODULE: ./node_modules/is-what/dist/index.esm.js\n/**\r\n * Returns the object type of the given payload\r\n *\r\n * @param {*} payload\r\n * @returns {string}\r\n */\r\nfunction getType(payload) {\r\n    return Object.prototype.toString.call(payload).slice(8, -1);\r\n}\r\n/**\r\n * Returns whether the payload is undefined\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isUndefined(payload) {\r\n    return getType(payload) === 'Undefined';\r\n}\r\n/**\r\n * Returns whether the payload is null\r\n *\r\n * @param {*} payload\r\n * @returns {payload is null}\r\n */\r\nfunction isNull(payload) {\r\n    return getType(payload) === 'Null';\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isPlainObject(payload) {\r\n    if (getType(payload) !== 'Object')\r\n        return false;\r\n    return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isObject(payload) {\r\n    return isPlainObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {}}\r\n */\r\nfunction isEmptyObject(payload) {\r\n    return isPlainObject(payload) && Object.keys(payload).length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isAnyObject(payload) {\r\n    return getType(payload) === 'Object';\r\n}\r\n/**\r\n * Returns whether the payload is an object like a type passed in < >\r\n *\r\n * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.\r\n *\r\n * @template T this must be passed in < >\r\n * @param {*} payload\r\n * @returns {payload is T}\r\n */\r\nfunction isObjectLike(payload) {\r\n    return isAnyObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a function\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Function}\r\n */\r\nfunction isFunction(payload) {\r\n    return getType(payload) === 'Function';\r\n}\r\n/**\r\n * Returns whether the payload is an array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isArray(payload) {\r\n    return getType(payload) === 'Array';\r\n}\r\n/**\r\n * Returns whether the payload is a string\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isString(payload) {\r\n    return getType(payload) === 'String';\r\n}\r\n/**\r\n * Returns whether the payload is a string, BUT returns false for ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isFullString(payload) {\r\n    return isString(payload) && payload !== '';\r\n}\r\n/**\r\n * Returns whether the payload is ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isEmptyString(payload) {\r\n    return payload === '';\r\n}\r\n/**\r\n * Returns whether the payload is a number\r\n *\r\n * This will return false for NaN\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNumber(payload) {\r\n    return getType(payload) === 'Number' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a boolean\r\n *\r\n * @param {*} payload\r\n * @returns {payload is boolean}\r\n */\r\nfunction isBoolean(payload) {\r\n    return getType(payload) === 'Boolean';\r\n}\r\n/**\r\n * Returns whether the payload is a regular expression (RegExp)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is RegExp}\r\n */\r\nfunction isRegExp(payload) {\r\n    return getType(payload) === 'RegExp';\r\n}\r\n/**\r\n * Returns whether the payload is a Map\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Map}\r\n */\r\nfunction isMap(payload) {\r\n    return getType(payload) === 'Map';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakMap\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakMap}\r\n */\r\nfunction isWeakMap(payload) {\r\n    return getType(payload) === 'WeakMap';\r\n}\r\n/**\r\n * Returns whether the payload is a Set\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Set}\r\n */\r\nfunction isSet(payload) {\r\n    return getType(payload) === 'Set';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakSet\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakSet}\r\n */\r\nfunction isWeakSet(payload) {\r\n    return getType(payload) === 'WeakSet';\r\n}\r\n/**\r\n * Returns whether the payload is a Symbol\r\n *\r\n * @param {*} payload\r\n * @returns {payload is symbol}\r\n */\r\nfunction isSymbol(payload) {\r\n    return getType(payload) === 'Symbol';\r\n}\r\n/**\r\n * Returns whether the payload is a Date, and that the date is valid\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Date}\r\n */\r\nfunction isDate(payload) {\r\n    return getType(payload) === 'Date' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a Blob\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Blob}\r\n */\r\nfunction isBlob(payload) {\r\n    return getType(payload) === 'Blob';\r\n}\r\n/**\r\n * Returns whether the payload is a File\r\n *\r\n * @param {*} payload\r\n * @returns {payload is File}\r\n */\r\nfunction isFile(payload) {\r\n    return getType(payload) === 'File';\r\n}\r\n/**\r\n * Returns whether the payload is a Promise\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Promise}\r\n */\r\nfunction isPromise(payload) {\r\n    return getType(payload) === 'Promise';\r\n}\r\n/**\r\n * Returns whether the payload is an Error\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Error}\r\n */\r\nfunction isError(payload) {\r\n    return getType(payload) === 'Error';\r\n}\r\n/**\r\n * Returns whether the payload is `NaN` but also a `number`\r\n *\r\n * @param {*} payload\r\n * @returns {payload is typeof NaN}\r\n */\r\nfunction isNaNValue(payload) {\r\n    return getType(payload) === 'Number' && isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is boolean | null | undefined | number | string | symbol)}\r\n */\r\nfunction isPrimitive(payload) {\r\n    return (isBoolean(payload) ||\r\n        isNull(payload) ||\r\n        isUndefined(payload) ||\r\n        isNumber(payload) ||\r\n        isString(payload) ||\r\n        isSymbol(payload));\r\n}\r\n/**\r\n * Returns true whether the payload is null or undefined\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is null | undefined)}\r\n */\r\nfunction isNullOrUndefined(payload) {\r\n    return isNull(payload) || isUndefined(payload);\r\n}\r\n/**\r\n * Does a generic check to check that the given payload is of a given type.\r\n * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);\r\n * It will, however, differentiate between object and null\r\n *\r\n * @template T\r\n * @param {*} payload\r\n * @param {T} type\r\n * @throws {TypeError} Will throw type error if type is an invalid type\r\n * @returns {payload is T}\r\n */\r\nfunction isType(payload, type) {\r\n    if (!(type instanceof Function)) {\r\n        throw new TypeError('Type must be a function');\r\n    }\r\n    if (!Object.prototype.hasOwnProperty.call(type, 'prototype')) {\r\n        throw new TypeError('Type is not a class');\r\n    }\r\n    // Classes usually have names (as functions usually have names)\r\n    var name = type.name;\r\n    return getType(payload) === name || Boolean(payload && payload.constructor === type);\r\n}\n\n\n\n// CONCATENATED MODULE: ./node_modules/merge-anything/dist/index.esm.js\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nfunction assignProp(carry, key, newVal, originalObject) {\r\n    var propType = originalObject.propertyIsEnumerable(key)\r\n        ? 'enumerable'\r\n        : 'nonenumerable';\r\n    if (propType === 'enumerable')\r\n        carry[key] = newVal;\r\n    if (propType === 'nonenumerable') {\r\n        Object.defineProperty(carry, key, {\r\n            value: newVal,\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true\r\n        });\r\n    }\r\n}\r\nfunction mergeRecursively(origin, newComer, extensions) {\r\n    // work directly on newComer if its not an object\r\n    if (!isPlainObject(newComer)) {\r\n        // extend merge rules\r\n        if (extensions && isArray(extensions)) {\r\n            extensions.forEach(function (extend) {\r\n                newComer = extend(origin, newComer);\r\n            });\r\n        }\r\n        return newComer;\r\n    }\r\n    // define newObject to merge all values upon\r\n    var newObject = {};\r\n    if (isPlainObject(origin)) {\r\n        var props_1 = Object.getOwnPropertyNames(origin);\r\n        var symbols_1 = Object.getOwnPropertySymbols(origin);\r\n        newObject = __spreadArrays(props_1, symbols_1).reduce(function (carry, key) {\r\n            // @ts-ignore\r\n            var targetVal = origin[key];\r\n            if ((!isSymbol(key) && !Object.getOwnPropertyNames(newComer).includes(key)) ||\r\n                (isSymbol(key) && !Object.getOwnPropertySymbols(newComer).includes(key))) {\r\n                assignProp(carry, key, targetVal, origin);\r\n            }\r\n            return carry;\r\n        }, {});\r\n    }\r\n    var props = Object.getOwnPropertyNames(newComer);\r\n    var symbols = Object.getOwnPropertySymbols(newComer);\r\n    var result = __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n        // re-define the origin and newComer as targetVal and newVal\r\n        var newVal = newComer[key];\r\n        var targetVal = (isPlainObject(origin))\r\n            // @ts-ignore\r\n            ? origin[key]\r\n            : undefined;\r\n        // extend merge rules\r\n        if (extensions && isArray(extensions)) {\r\n            extensions.forEach(function (extend) {\r\n                newVal = extend(targetVal, newVal);\r\n            });\r\n        }\r\n        // When newVal is an object do the merge recursively\r\n        if (targetVal !== undefined && isPlainObject(newVal)) {\r\n            newVal = mergeRecursively(targetVal, newVal, extensions);\r\n        }\r\n        assignProp(carry, key, newVal, newComer);\r\n        return carry;\r\n    }, newObject);\r\n    return result;\r\n}\r\n/**\r\n * Merge anything recursively.\r\n * Objects get merged, special objects (classes etc.) are re-assigned \"as is\".\r\n * Basic types overwrite objects or other basic types.\r\n *\r\n * @param {(IConfig | any)} origin\r\n * @param {...any[]} newComers\r\n * @returns the result\r\n */\r\nfunction merge(origin) {\r\n    var newComers = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        newComers[_i - 1] = arguments[_i];\r\n    }\r\n    var extensions = null;\r\n    var base = origin;\r\n    if (isPlainObject(origin) && origin.extensions && Object.keys(origin).length === 1) {\r\n        base = {};\r\n        extensions = origin.extensions;\r\n    }\r\n    return newComers.reduce(function (result, newComer) {\r\n        return mergeRecursively(result, newComer, extensions);\r\n    }, base);\r\n}\n\nfunction concatArrays(originVal, newVal) {\r\n    if (isArray(originVal) && isArray(newVal)) {\r\n        // concat logic\r\n        return originVal.concat(newVal);\r\n    }\r\n    return newVal; // always return newVal as fallback!!\r\n}\n\n/* harmony default export */ var index_esm = __webpack_exports__[\"a\"] = (merge);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///57\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  return typeof Map !== 'undefined' && value instanceof Map;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc01hcC5qcz9kNGQwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFnQjtBQUNoQjtBQUNBLENBQUMiLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgTWFwICE9PSAndW5kZWZpbmVkJyAmJiB2YWx1ZSBpbnN0YW5jZW9mIE1hcDtcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///58\n")},,,function(module,exports){eval('module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "exports", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanM/ODJiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XG5cdGlmICghb3JpZ2luYWxNb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///61\n')},,function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  undefined;\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level :  false || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///63\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ownKeys; });\n/* harmony import */ var _isMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(58);\n\nfunction ownKeys(object) {\n  if (Object(_isMap__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(object)) {\n    // We are using loose transforms in babel. Here we are trying to convert an\n    // interable to an array. Loose mode expects everything to already be an\n    // array. The problem is that our eslint rules encourage us to prefer\n    // spread over Array.from.\n    //\n    // Instead of disabling loose mode we simply disable the warning.\n    // eslint-disable-next-line unicorn/prefer-spread\n    return Array.from(object.keys());\n  }\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object);\n  }\n\n  var keys = Object.getOwnPropertyNames(object);\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    keys = keys.concat(Object.getOwnPropertySymbols(object));\n  }\n\n  return keys;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9vd25LZXlzLmpzPzdkNGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUE0QjtBQUNiO0FBQ2YsTUFBTSw4REFBSztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaXNNYXAgZnJvbSAnLi9pc01hcCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvd25LZXlzKG9iamVjdCkge1xuICBpZiAoaXNNYXAob2JqZWN0KSkge1xuICAgIC8vIFdlIGFyZSB1c2luZyBsb29zZSB0cmFuc2Zvcm1zIGluIGJhYmVsLiBIZXJlIHdlIGFyZSB0cnlpbmcgdG8gY29udmVydCBhblxuICAgIC8vIGludGVyYWJsZSB0byBhbiBhcnJheS4gTG9vc2UgbW9kZSBleHBlY3RzIGV2ZXJ5dGhpbmcgdG8gYWxyZWFkeSBiZSBhblxuICAgIC8vIGFycmF5LiBUaGUgcHJvYmxlbSBpcyB0aGF0IG91ciBlc2xpbnQgcnVsZXMgZW5jb3VyYWdlIHVzIHRvIHByZWZlclxuICAgIC8vIHNwcmVhZCBvdmVyIEFycmF5LmZyb20uXG4gICAgLy9cbiAgICAvLyBJbnN0ZWFkIG9mIGRpc2FibGluZyBsb29zZSBtb2RlIHdlIHNpbXBseSBkaXNhYmxlIHRoZSB3YXJuaW5nLlxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB1bmljb3JuL3ByZWZlci1zcHJlYWRcbiAgICByZXR1cm4gQXJyYXkuZnJvbShvYmplY3Qua2V5cygpKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIFJlZmxlY3Qub3duS2V5cyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBSZWZsZWN0Lm93bktleXMob2JqZWN0KTtcbiAgfVxuXG4gIHZhciBrZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqZWN0KTtcblxuICBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBrZXlzID0ga2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpKTtcbiAgfVxuXG4gIHJldHVybiBrZXlzO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///64\n")},,,function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {!function(e,t){ true?t(exports):undefined}(this,function(e){"use strict";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,"kind",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,"path",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,"E",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0}),Object.defineProperty(this,"rhs",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,"N",e),Object.defineProperty(this,"rhs",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,"D",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,"A",e),Object.defineProperty(this,"index",{value:t,enumerable:!0}),Object.defineProperty(this,"item",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t="undefined"==typeof e?"undefined":N(e);return"object"!==t?t:e===Math?"math":null===e?"null":Array.isArray(e)?"array":"[object Date]"===Object.prototype.toString.call(e)?"date":"function"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?"regexp":"object"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if("undefined"!=typeof d){if(c){if("function"==typeof c&&c(g,d))return;if("object"===("undefined"==typeof c?"undefined":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}"regexp"===u(e)&&"regexp"===u(t)&&(e=e.toString(),t=t.toString());var y="undefined"==typeof e?"undefined":N(e),v="undefined"==typeof t?"undefined":N(t),b="undefined"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m="undefined"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if("date"===u(e)&&e-t!==0)r(new n(g,e,t));else if("object"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&("number"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":s(o[r.path[n]],r.index,r.item);break;case"D":delete o[r.path[n]];break;case"E":case"N":o[r.path[n]]=r.rhs}}else switch(r.kind){case"A":s(e[t],r.index,r.item);break;case"D":e=f(e,t);break;case"E":case"N":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)"undefined"==typeof n[r.path[o]]&&(n[r.path[o]]="number"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case"A":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case"D":delete n[r.path[o]];break;case"E":case"N":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":p(o[r.path[n]],r.index,r.item);break;case"D":o[r.path[n]]=r.lhs;break;case"E":o[r.path[n]]=r.lhs;break;case"N":delete o[r.path[n]]}}else switch(r.kind){case"A":p(e[t],r.index,r.item);break;case"D":e[t]=r.lhs;break;case"E":e[t]=r.lhs;break;case"N":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)"undefined"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case"A":p(i[r.path[n]],r.index,r.item);break;case"D":i[r.path[n]]=r.lhs;break;case"E":i[r.path[n]]=r.lhs;break;case"N":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return"color: "+F[e].color+"; font-weight: bold"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case"E":return[r.join("."),n,"→",o];case"N":return[r.join("."),o];case"D":return[r.join(".")];case"A":return[r.join(".")+"["+i+"]",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed("diff"):r.group("diff")}catch(e){r.log("diff")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,["%c "+F[t].text,y(t)].concat(P(n)))}):r.log("—— no diff ——");try{r.groupEnd()}catch(e){r.log("—— diff end —— ")}}function m(e,t,r,n){switch("undefined"==typeof e?"undefined":N(e)){case"object":return"function"==typeof e[n]?e[n].apply(e,P(r)):e[n];case"function":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=["action"];return i.push("%c"+String(e.type)),t&&i.push("%c@ "+n),r&&i.push("%c(in "+o.toFixed(2)+" ms)"),i.join(" ")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c="undefined"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k="function"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?"color: "+f.title(S)+";":"",A=["color: gray; font-weight: lighter;"];A.push(E),t.timestamp&&A.push("color: gray; font-weight: lighter;"),t.duration&&A.push("color: gray; font-weight: lighter;");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,["%c "+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,["%c "+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],"prevState"),P=m(u,S,[S],"action"),C=m(u,S,[y,h],"error"),F=m(u,S,[w],"nextState");if(N)if(f.prevState){var L="color: "+f.prevState(h)+"; font-weight: bold";r[N]("%c prev state",L,h)}else r[N]("prev state",h);if(P)if(f.action){var T="color: "+f.action(S)+"; font-weight: bold";r[P]("%c action    ",T,S)}else r[P]("action    ",S);if(y&&C)if(f.error){var M="color: "+f.error(y,h)+"; font-weight: bold;";r[C]("%c error     ",M,y)}else r[C]("error     ",y);if(F)if(f.nextState){var _="color: "+f.nextState(w)+"; font-weight: bold";r[F]("%c next state",_,w)}else r[F]("next state",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log("—— log end ——")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if("undefined"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error("[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from \'redux-logger\'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from \'redux-logger\'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if("function"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&"function"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E("0",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+":"+A(e.getMinutes(),2)+":"+A(e.getSeconds(),2)+"."+A(e.getMilliseconds(),3)},O="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance:Date,N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k="object"===("undefined"==typeof global?"undefined":N(global))&&global?global:"undefined"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){"undefined"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return"undefined"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:"#2196F3",text:"CHANGED:"},N:{color:"#4CAF50",text:"ADDED:"},D:{color:"#F44336",text:"DELETED:"},A:{color:"#2196F3",text:"ARRAY:"}},L={level:"log",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return"inherit"},prevState:function(){return"#9E9E9E"},action:function(){return"#03A9F4"},nextState:function(){return"#4CAF50"},error:function(){return"#F20404"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return"function"==typeof t||"function"==typeof r?S()({dispatch:t,getState:r}):void console.error("\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from \'redux-logger\'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from \'redux-logger\'\\n")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,"__esModule",{value:!0})});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(24)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtbG9nZ2VyL2Rpc3QvcmVkdXgtbG9nZ2VyLmpzP2Q2NjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQWUsS0FBb0QsWUFBWSxTQUE4RixDQUFDLGtCQUFrQixhQUFhLGdCQUFnQixrREFBa0QsYUFBYSxtREFBbUQsRUFBRSxnQkFBZ0IsbUNBQW1DLHNCQUFzQixrREFBa0Qsc0JBQXNCLEVBQUUsa0JBQWtCLDREQUE0RCxzQkFBc0Isb0NBQW9DLHNCQUFzQixFQUFFLGdCQUFnQiw0REFBNEQsc0JBQXNCLEVBQUUsZ0JBQWdCLDREQUE0RCxzQkFBc0IsRUFBRSxrQkFBa0IsOERBQThELHNCQUFzQixxQ0FBcUMsc0JBQXNCLEVBQUUsa0JBQWtCLGtDQUFrQyxxREFBcUQsY0FBYyw2Q0FBNkMsdU5BQXVOLDBCQUEwQixnQkFBZ0IsaUJBQWlCLDBCQUEwQixNQUFNLHVDQUF1Qyx3REFBd0Qsd0NBQXdDLGdCQUFnQiwyQkFBMkIscUJBQXFCLFVBQVUsa0VBQWtFLGdQQUFnUCx1QkFBdUIsNEJBQTRCLG9DQUFvQywrQ0FBK0MsaUVBQWlFLGlCQUFpQixnQ0FBZ0MsS0FBSyxXQUFXLFlBQVksb0JBQW9CLE1BQU0sU0FBUyxRQUFRLFdBQVcsd0VBQXdFLEtBQUssV0FBVyxvQ0FBb0MsS0FBSyxzQ0FBc0Msd0JBQXdCLG1CQUFtQixnRUFBZ0Usd0JBQXdCLHlCQUF5QixFQUFFLG9CQUFvQixnRUFBZ0Usb0JBQW9CLGlDQUFpQyxhQUFhLHNCQUFzQixrQkFBa0IsMEJBQTBCLCtCQUErQixRQUFRLElBQUksbUJBQW1CLGVBQWUsdUNBQXVDLE1BQU0sNEJBQTRCLE1BQU0sb0NBQW9DLG9CQUFvQiwrQkFBK0IsTUFBTSxpQkFBaUIsTUFBTSwyQkFBMkIsU0FBUyxrQkFBa0Isb0JBQW9CLDRDQUE0QyxNQUFNLGlGQUFpRixpQkFBaUIsZUFBZSxnREFBZ0QsTUFBTSw0QkFBNEIsTUFBTSxxQ0FBcUMsa0JBQWtCLDBCQUEwQiwrQkFBK0IsUUFBUSxJQUFJLG1CQUFtQixlQUFlLHVDQUF1QyxNQUFNLDJCQUEyQixNQUFNLDJCQUEyQixNQUFNLDZCQUE2QixvQkFBb0IsK0JBQStCLE1BQU0sbUJBQW1CLE1BQU0sbUJBQW1CLE1BQU0saUJBQWlCLFNBQVMsa0JBQWtCLG9CQUFvQixZQUFZLDBCQUEwQixJQUFJLHNEQUFzRCxpQkFBaUIsZUFBZSx1Q0FBdUMsTUFBTSwyQkFBMkIsTUFBTSwyQkFBMkIsTUFBTSw4QkFBOEIsa0JBQWtCLFNBQVMsa0JBQWtCLHdCQUF3QixVQUFVLGNBQWMsNkJBQTZCLG9CQUFvQixjQUFjLHlEQUF5RCxVQUFVLG9DQUFvQyw4QkFBOEIsNEJBQTRCLHdDQUF3QyxrQkFBa0Isb0JBQW9CLGFBQWEsSUFBSSwyQ0FBMkMsU0FBUyxjQUFjLHdCQUF3QixvQkFBb0IsbURBQW1ELHlCQUF5QixJQUFJLGFBQWEsU0FBUywwQkFBMEIsb0JBQW9CLCtDQUErQyxtRUFBbUUsMkJBQTJCLGtCQUFrQixjQUFjLCtCQUErQix1QkFBdUIsaUJBQWlCLDRHQUE0RyxnQkFBZ0IsK0pBQStKLHdCQUF3QixtR0FBbUcsaUNBQWlDLCtDQUErQyxTQUFTLGdEQUFnRCxxQkFBcUIsc0JBQXNCLEdBQUcsMkNBQTJDLHNCQUFzQixtQ0FBbUMsc0JBQXNCLEdBQUcsZUFBZSxJQUFJLDBJQUEwSSxTQUFTLFNBQVMsbUdBQW1HLHFCQUFxQixpQ0FBaUMsb0JBQW9CLDBCQUEwQiwwQkFBMEIsa0JBQWtCLDhCQUE4QixvQkFBb0IsMEJBQTBCLDBCQUEwQixvQkFBb0IsK0JBQStCLG1CQUFtQixFQUFFLDBCQUEwQiwwQkFBMEIscUJBQXFCLGlDQUFpQyxvQkFBb0IsMEJBQTBCLDBCQUEwQixjQUFjLElBQUksYUFBYSxTQUFTLHdCQUF3QixFQUFFLGFBQWEsK0RBQStELG1CQUFtQix5R0FBeUcsMkNBQTJDLG1CQUFtQixtQkFBbUIsZUFBZSxxTEFBcUwsU0FBUywrUEFBK1Asb0JBQW9CLEVBQUUsc0ZBQXNGLG1CQUFtQixtQkFBbUIsZUFBZSxTQUFTLG1CQUFtQixpQkFBaUIsbUJBQW1CLG1CQUFtQiw2Q0FBNkMsU0FBUyxpRkFBaUYsYUFBYSxTQUFTLE9BQU8sU0FBUyxhQUFhLFlBQVksNENBQTRDLGlEQUFpRCx1QkFBdUIsSUFBSSxPQUFPLG9DQUFvQyxZQUFZLHdCQUF3Qiw4QkFBOEIsaUJBQWlCLHNDQUFzQyxlQUFlLHNHQUFzRyxzTEFBc0wsZ0JBQWdCLGFBQWEsb0dBQW9HLGVBQWUscUJBQXFCLDhCQUE4QixXQUFXLGNBQWMsU0FBUyxxQkFBcUIsTUFBTSxtSEFBbUgsbUNBQW1DLCtEQUErRCx5REFBeUQsTUFBTSxzQkFBc0IsaUJBQWlCLHNCQUFzQixZQUFZLHNCQUFzQixjQUFjLHNCQUFzQixlQUFlLHNCQUFzQixhQUFhLGlCQUFpQiw0QkFBNEIsZUFBZSxhQUFhLGlCQUFpQixpQ0FBaUMsSUFBSSxZQUFZLGdCQUFnQixFQUFFLE9BQU8sR0FBRyxnQ0FBZ0MsSUFBSSw4QkFBOEIsSUFBSSxnQ0FBZ0MsSUFBSSwrQkFBK0IsSUFBSSxnSUFBZ0ksU0FBUywrQkFBK0IsU0FBUyw4QkFBOEIsU0FBUyxTQUFTLGlCQUFpQixnQkFBZ0Isc0JBQXNCLGdCQUFnQixtQkFBbUIsZ0JBQWdCLHNCQUFzQixnQkFBZ0Isa0JBQWtCLGlCQUFpQixpREFBaUQsY0FBYywrREFBK0QsMkJBQTJCLHNEQUFzRCxzQkFBc0IsNlJBQTZSLGVBQWUsMEJBQTBCLDJGQUEyRixTQUFTLEVBQUUiLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIhZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT90KGV4cG9ydHMpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wiZXhwb3J0c1wiXSx0KTp0KGUucmVkdXhMb2dnZXI9ZS5yZWR1eExvZ2dlcnx8e30pfSh0aGlzLGZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHQoZSx0KXtlLnN1cGVyXz10LGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pfWZ1bmN0aW9uIHIoZSx0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImtpbmRcIix7dmFsdWU6ZSxlbnVtZXJhYmxlOiEwfSksdCYmdC5sZW5ndGgmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicGF0aFwiLHt2YWx1ZTp0LGVudW1lcmFibGU6ITB9KX1mdW5jdGlvbiBuKGUsdCxyKXtuLnN1cGVyXy5jYWxsKHRoaXMsXCJFXCIsZSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJsaHNcIix7dmFsdWU6dCxlbnVtZXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJyaHNcIix7dmFsdWU6cixlbnVtZXJhYmxlOiEwfSl9ZnVuY3Rpb24gbyhlLHQpe28uc3VwZXJfLmNhbGwodGhpcyxcIk5cIixlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInJoc1wiLHt2YWx1ZTp0LGVudW1lcmFibGU6ITB9KX1mdW5jdGlvbiBpKGUsdCl7aS5zdXBlcl8uY2FsbCh0aGlzLFwiRFwiLGUpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwibGhzXCIse3ZhbHVlOnQsZW51bWVyYWJsZTohMH0pfWZ1bmN0aW9uIGEoZSx0LHIpe2Euc3VwZXJfLmNhbGwodGhpcyxcIkFcIixlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImluZGV4XCIse3ZhbHVlOnQsZW51bWVyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaXRlbVwiLHt2YWx1ZTpyLGVudW1lcmFibGU6ITB9KX1mdW5jdGlvbiBmKGUsdCxyKXt2YXIgbj1lLnNsaWNlKChyfHx0KSsxfHxlLmxlbmd0aCk7cmV0dXJuIGUubGVuZ3RoPXQ8MD9lLmxlbmd0aCt0OnQsZS5wdXNoLmFwcGx5KGUsbiksZX1mdW5jdGlvbiB1KGUpe3ZhciB0PVwidW5kZWZpbmVkXCI9PXR5cGVvZiBlP1widW5kZWZpbmVkXCI6TihlKTtyZXR1cm5cIm9iamVjdFwiIT09dD90OmU9PT1NYXRoP1wibWF0aFwiOm51bGw9PT1lP1wibnVsbFwiOkFycmF5LmlzQXJyYXkoZSk/XCJhcnJheVwiOlwiW29iamVjdCBEYXRlXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpP1wiZGF0ZVwiOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUudG9TdHJpbmcmJi9eXFwvLipcXC8vLnRlc3QoZS50b1N0cmluZygpKT9cInJlZ2V4cFwiOlwib2JqZWN0XCJ9ZnVuY3Rpb24gbChlLHQscixjLHMsZCxwKXtzPXN8fFtdLHA9cHx8W107dmFyIGc9cy5zbGljZSgwKTtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgZCl7aWYoYyl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgYyYmYyhnLGQpKXJldHVybjtpZihcIm9iamVjdFwiPT09KFwidW5kZWZpbmVkXCI9PXR5cGVvZiBjP1widW5kZWZpbmVkXCI6TihjKSkpe2lmKGMucHJlZmlsdGVyJiZjLnByZWZpbHRlcihnLGQpKXJldHVybjtpZihjLm5vcm1hbGl6ZSl7dmFyIGg9Yy5ub3JtYWxpemUoZyxkLGUsdCk7aCYmKGU9aFswXSx0PWhbMV0pfX19Zy5wdXNoKGQpfVwicmVnZXhwXCI9PT11KGUpJiZcInJlZ2V4cFwiPT09dSh0KSYmKGU9ZS50b1N0cmluZygpLHQ9dC50b1N0cmluZygpKTt2YXIgeT1cInVuZGVmaW5lZFwiPT10eXBlb2YgZT9cInVuZGVmaW5lZFwiOk4oZSksdj1cInVuZGVmaW5lZFwiPT10eXBlb2YgdD9cInVuZGVmaW5lZFwiOk4odCksYj1cInVuZGVmaW5lZFwiIT09eXx8cCYmcFtwLmxlbmd0aC0xXS5saHMmJnBbcC5sZW5ndGgtMV0ubGhzLmhhc093blByb3BlcnR5KGQpLG09XCJ1bmRlZmluZWRcIiE9PXZ8fHAmJnBbcC5sZW5ndGgtMV0ucmhzJiZwW3AubGVuZ3RoLTFdLnJocy5oYXNPd25Qcm9wZXJ0eShkKTtpZighYiYmbSlyKG5ldyBvKGcsdCkpO2Vsc2UgaWYoIW0mJmIpcihuZXcgaShnLGUpKTtlbHNlIGlmKHUoZSkhPT11KHQpKXIobmV3IG4oZyxlLHQpKTtlbHNlIGlmKFwiZGF0ZVwiPT09dShlKSYmZS10IT09MClyKG5ldyBuKGcsZSx0KSk7ZWxzZSBpZihcIm9iamVjdFwiPT09eSYmbnVsbCE9PWUmJm51bGwhPT10KWlmKHAuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0Lmxocz09PWV9KS5sZW5ndGgpZSE9PXQmJnIobmV3IG4oZyxlLHQpKTtlbHNle2lmKHAucHVzaCh7bGhzOmUscmhzOnR9KSxBcnJheS5pc0FycmF5KGUpKXt2YXIgdztlLmxlbmd0aDtmb3Iodz0wO3c8ZS5sZW5ndGg7dysrKXc+PXQubGVuZ3RoP3IobmV3IGEoZyx3LG5ldyBpKHZvaWQgMCxlW3ddKSkpOmwoZVt3XSx0W3ddLHIsYyxnLHcscCk7Zm9yKDt3PHQubGVuZ3RoOylyKG5ldyBhKGcsdyxuZXcgbyh2b2lkIDAsdFt3KytdKSkpfWVsc2V7dmFyIHg9T2JqZWN0LmtleXMoZSksUz1PYmplY3Qua2V5cyh0KTt4LmZvckVhY2goZnVuY3Rpb24obixvKXt2YXIgaT1TLmluZGV4T2Yobik7aT49MD8obChlW25dLHRbbl0scixjLGcsbixwKSxTPWYoUyxpKSk6bChlW25dLHZvaWQgMCxyLGMsZyxuLHApfSksUy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2wodm9pZCAwLHRbZV0scixjLGcsZSxwKX0pfXAubGVuZ3RoPXAubGVuZ3RoLTF9ZWxzZSBlIT09dCYmKFwibnVtYmVyXCI9PT15JiZpc05hTihlKSYmaXNOYU4odCl8fHIobmV3IG4oZyxlLHQpKSl9ZnVuY3Rpb24gYyhlLHQscixuKXtyZXR1cm4gbj1ufHxbXSxsKGUsdCxmdW5jdGlvbihlKXtlJiZuLnB1c2goZSl9LHIpLG4ubGVuZ3RoP246dm9pZCAwfWZ1bmN0aW9uIHMoZSx0LHIpe2lmKHIucGF0aCYmci5wYXRoLmxlbmd0aCl7dmFyIG4sbz1lW3RdLGk9ci5wYXRoLmxlbmd0aC0xO2ZvcihuPTA7bjxpO24rKylvPW9bci5wYXRoW25dXTtzd2l0Y2goci5raW5kKXtjYXNlXCJBXCI6cyhvW3IucGF0aFtuXV0sci5pbmRleCxyLml0ZW0pO2JyZWFrO2Nhc2VcIkRcIjpkZWxldGUgb1tyLnBhdGhbbl1dO2JyZWFrO2Nhc2VcIkVcIjpjYXNlXCJOXCI6b1tyLnBhdGhbbl1dPXIucmhzfX1lbHNlIHN3aXRjaChyLmtpbmQpe2Nhc2VcIkFcIjpzKGVbdF0sci5pbmRleCxyLml0ZW0pO2JyZWFrO2Nhc2VcIkRcIjplPWYoZSx0KTticmVhaztjYXNlXCJFXCI6Y2FzZVwiTlwiOmVbdF09ci5yaHN9cmV0dXJuIGV9ZnVuY3Rpb24gZChlLHQscil7aWYoZSYmdCYmciYmci5raW5kKXtmb3IodmFyIG49ZSxvPS0xLGk9ci5wYXRoP3IucGF0aC5sZW5ndGgtMTowOysrbzxpOylcInVuZGVmaW5lZFwiPT10eXBlb2YgbltyLnBhdGhbb11dJiYobltyLnBhdGhbb11dPVwibnVtYmVyXCI9PXR5cGVvZiByLnBhdGhbb10/W106e30pLG49bltyLnBhdGhbb11dO3N3aXRjaChyLmtpbmQpe2Nhc2VcIkFcIjpzKHIucGF0aD9uW3IucGF0aFtvXV06bixyLmluZGV4LHIuaXRlbSk7YnJlYWs7Y2FzZVwiRFwiOmRlbGV0ZSBuW3IucGF0aFtvXV07YnJlYWs7Y2FzZVwiRVwiOmNhc2VcIk5cIjpuW3IucGF0aFtvXV09ci5yaHN9fX1mdW5jdGlvbiBwKGUsdCxyKXtpZihyLnBhdGgmJnIucGF0aC5sZW5ndGgpe3ZhciBuLG89ZVt0XSxpPXIucGF0aC5sZW5ndGgtMTtmb3Iobj0wO248aTtuKyspbz1vW3IucGF0aFtuXV07c3dpdGNoKHIua2luZCl7Y2FzZVwiQVwiOnAob1tyLnBhdGhbbl1dLHIuaW5kZXgsci5pdGVtKTticmVhaztjYXNlXCJEXCI6b1tyLnBhdGhbbl1dPXIubGhzO2JyZWFrO2Nhc2VcIkVcIjpvW3IucGF0aFtuXV09ci5saHM7YnJlYWs7Y2FzZVwiTlwiOmRlbGV0ZSBvW3IucGF0aFtuXV19fWVsc2Ugc3dpdGNoKHIua2luZCl7Y2FzZVwiQVwiOnAoZVt0XSxyLmluZGV4LHIuaXRlbSk7YnJlYWs7Y2FzZVwiRFwiOmVbdF09ci5saHM7YnJlYWs7Y2FzZVwiRVwiOmVbdF09ci5saHM7YnJlYWs7Y2FzZVwiTlwiOmU9ZihlLHQpfXJldHVybiBlfWZ1bmN0aW9uIGcoZSx0LHIpe2lmKGUmJnQmJnImJnIua2luZCl7dmFyIG4sbyxpPWU7Zm9yKG89ci5wYXRoLmxlbmd0aC0xLG49MDtuPG87bisrKVwidW5kZWZpbmVkXCI9PXR5cGVvZiBpW3IucGF0aFtuXV0mJihpW3IucGF0aFtuXV09e30pLGk9aVtyLnBhdGhbbl1dO3N3aXRjaChyLmtpbmQpe2Nhc2VcIkFcIjpwKGlbci5wYXRoW25dXSxyLmluZGV4LHIuaXRlbSk7YnJlYWs7Y2FzZVwiRFwiOmlbci5wYXRoW25dXT1yLmxoczticmVhaztjYXNlXCJFXCI6aVtyLnBhdGhbbl1dPXIubGhzO2JyZWFrO2Nhc2VcIk5cIjpkZWxldGUgaVtyLnBhdGhbbl1dfX19ZnVuY3Rpb24gaChlLHQscil7aWYoZSYmdCl7dmFyIG49ZnVuY3Rpb24obil7ciYmIXIoZSx0LG4pfHxkKGUsdCxuKX07bChlLHQsbil9fWZ1bmN0aW9uIHkoZSl7cmV0dXJuXCJjb2xvcjogXCIrRltlXS5jb2xvcitcIjsgZm9udC13ZWlnaHQ6IGJvbGRcIn1mdW5jdGlvbiB2KGUpe3ZhciB0PWUua2luZCxyPWUucGF0aCxuPWUubGhzLG89ZS5yaHMsaT1lLmluZGV4LGE9ZS5pdGVtO3N3aXRjaCh0KXtjYXNlXCJFXCI6cmV0dXJuW3Iuam9pbihcIi5cIiksbixcIuKGklwiLG9dO2Nhc2VcIk5cIjpyZXR1cm5bci5qb2luKFwiLlwiKSxvXTtjYXNlXCJEXCI6cmV0dXJuW3Iuam9pbihcIi5cIildO2Nhc2VcIkFcIjpyZXR1cm5bci5qb2luKFwiLlwiKStcIltcIitpK1wiXVwiLGFdO2RlZmF1bHQ6cmV0dXJuW119fWZ1bmN0aW9uIGIoZSx0LHIsbil7dmFyIG89YyhlLHQpO3RyeXtuP3IuZ3JvdXBDb2xsYXBzZWQoXCJkaWZmXCIpOnIuZ3JvdXAoXCJkaWZmXCIpfWNhdGNoKGUpe3IubG9nKFwiZGlmZlwiKX1vP28uZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1lLmtpbmQsbj12KGUpO3IubG9nLmFwcGx5KHIsW1wiJWMgXCIrRlt0XS50ZXh0LHkodCldLmNvbmNhdChQKG4pKSl9KTpyLmxvZyhcIuKAlOKAlCBubyBkaWZmIOKAlOKAlFwiKTt0cnl7ci5ncm91cEVuZCgpfWNhdGNoKGUpe3IubG9nKFwi4oCU4oCUIGRpZmYgZW5kIOKAlOKAlCBcIil9fWZ1bmN0aW9uIG0oZSx0LHIsbil7c3dpdGNoKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBlP1widW5kZWZpbmVkXCI6TihlKSl7Y2FzZVwib2JqZWN0XCI6cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZVtuXT9lW25dLmFwcGx5KGUsUChyKSk6ZVtuXTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiBlKHQpO2RlZmF1bHQ6cmV0dXJuIGV9fWZ1bmN0aW9uIHcoZSl7dmFyIHQ9ZS50aW1lc3RhbXAscj1lLmR1cmF0aW9uO3JldHVybiBmdW5jdGlvbihlLG4sbyl7dmFyIGk9W1wiYWN0aW9uXCJdO3JldHVybiBpLnB1c2goXCIlY1wiK1N0cmluZyhlLnR5cGUpKSx0JiZpLnB1c2goXCIlY0AgXCIrbiksciYmaS5wdXNoKFwiJWMoaW4gXCIrby50b0ZpeGVkKDIpK1wiIG1zKVwiKSxpLmpvaW4oXCIgXCIpfX1mdW5jdGlvbiB4KGUsdCl7dmFyIHI9dC5sb2dnZXIsbj10LmFjdGlvblRyYW5zZm9ybWVyLG89dC50aXRsZUZvcm1hdHRlcixpPXZvaWQgMD09PW8/dyh0KTpvLGE9dC5jb2xsYXBzZWQsZj10LmNvbG9ycyx1PXQubGV2ZWwsbD10LmRpZmYsYz1cInVuZGVmaW5lZFwiPT10eXBlb2YgdC50aXRsZUZvcm1hdHRlcjtlLmZvckVhY2goZnVuY3Rpb24obyxzKXt2YXIgZD1vLnN0YXJ0ZWQscD1vLnN0YXJ0ZWRUaW1lLGc9by5hY3Rpb24saD1vLnByZXZTdGF0ZSx5PW8uZXJyb3Isdj1vLnRvb2ssdz1vLm5leHRTdGF0ZSx4PWVbcysxXTt4JiYodz14LnByZXZTdGF0ZSx2PXguc3RhcnRlZC1kKTt2YXIgUz1uKGcpLGs9XCJmdW5jdGlvblwiPT10eXBlb2YgYT9hKGZ1bmN0aW9uKCl7cmV0dXJuIHd9LGcsbyk6YSxqPUQocCksRT1mLnRpdGxlP1wiY29sb3I6IFwiK2YudGl0bGUoUykrXCI7XCI6XCJcIixBPVtcImNvbG9yOiBncmF5OyBmb250LXdlaWdodDogbGlnaHRlcjtcIl07QS5wdXNoKEUpLHQudGltZXN0YW1wJiZBLnB1c2goXCJjb2xvcjogZ3JheTsgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XCIpLHQuZHVyYXRpb24mJkEucHVzaChcImNvbG9yOiBncmF5OyBmb250LXdlaWdodDogbGlnaHRlcjtcIik7dmFyIE89aShTLGosdik7dHJ5e2s/Zi50aXRsZSYmYz9yLmdyb3VwQ29sbGFwc2VkLmFwcGx5KHIsW1wiJWMgXCIrT10uY29uY2F0KEEpKTpyLmdyb3VwQ29sbGFwc2VkKE8pOmYudGl0bGUmJmM/ci5ncm91cC5hcHBseShyLFtcIiVjIFwiK09dLmNvbmNhdChBKSk6ci5ncm91cChPKX1jYXRjaChlKXtyLmxvZyhPKX12YXIgTj1tKHUsUyxbaF0sXCJwcmV2U3RhdGVcIiksUD1tKHUsUyxbU10sXCJhY3Rpb25cIiksQz1tKHUsUyxbeSxoXSxcImVycm9yXCIpLEY9bSh1LFMsW3ddLFwibmV4dFN0YXRlXCIpO2lmKE4paWYoZi5wcmV2U3RhdGUpe3ZhciBMPVwiY29sb3I6IFwiK2YucHJldlN0YXRlKGgpK1wiOyBmb250LXdlaWdodDogYm9sZFwiO3JbTl0oXCIlYyBwcmV2IHN0YXRlXCIsTCxoKX1lbHNlIHJbTl0oXCJwcmV2IHN0YXRlXCIsaCk7aWYoUClpZihmLmFjdGlvbil7dmFyIFQ9XCJjb2xvcjogXCIrZi5hY3Rpb24oUykrXCI7IGZvbnQtd2VpZ2h0OiBib2xkXCI7cltQXShcIiVjIGFjdGlvbiAgICBcIixULFMpfWVsc2UgcltQXShcImFjdGlvbiAgICBcIixTKTtpZih5JiZDKWlmKGYuZXJyb3Ipe3ZhciBNPVwiY29sb3I6IFwiK2YuZXJyb3IoeSxoKStcIjsgZm9udC13ZWlnaHQ6IGJvbGQ7XCI7cltDXShcIiVjIGVycm9yICAgICBcIixNLHkpfWVsc2UgcltDXShcImVycm9yICAgICBcIix5KTtpZihGKWlmKGYubmV4dFN0YXRlKXt2YXIgXz1cImNvbG9yOiBcIitmLm5leHRTdGF0ZSh3KStcIjsgZm9udC13ZWlnaHQ6IGJvbGRcIjtyW0ZdKFwiJWMgbmV4dCBzdGF0ZVwiLF8sdyl9ZWxzZSByW0ZdKFwibmV4dCBzdGF0ZVwiLHcpO2wmJmIoaCx3LHIsayk7dHJ5e3IuZ3JvdXBFbmQoKX1jYXRjaChlKXtyLmxvZyhcIuKAlOKAlCBsb2cgZW5kIOKAlOKAlFwiKX19KX1mdW5jdGlvbiBTKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9T2JqZWN0LmFzc2lnbih7fSxMLGUpLHI9dC5sb2dnZXIsbj10LnN0YXRlVHJhbnNmb3JtZXIsbz10LmVycm9yVHJhbnNmb3JtZXIsaT10LnByZWRpY2F0ZSxhPXQubG9nRXJyb3JzLGY9dC5kaWZmUHJlZGljYXRlO2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiByKXJldHVybiBmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGUodCl9fX07aWYoZS5nZXRTdGF0ZSYmZS5kaXNwYXRjaClyZXR1cm4gY29uc29sZS5lcnJvcihcIltyZWR1eC1sb2dnZXJdIHJlZHV4LWxvZ2dlciBub3QgaW5zdGFsbGVkLiBNYWtlIHN1cmUgdG8gcGFzcyBsb2dnZXIgaW5zdGFuY2UgYXMgbWlkZGxld2FyZTpcXG4vLyBMb2dnZXIgd2l0aCBkZWZhdWx0IG9wdGlvbnNcXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdyZWR1eC1sb2dnZXInXFxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShcXG4gIHJlZHVjZXIsXFxuICBhcHBseU1pZGRsZXdhcmUobG9nZ2VyKVxcbilcXG4vLyBPciB5b3UgY2FuIGNyZWF0ZSB5b3VyIG93biBsb2dnZXIgd2l0aCBjdXN0b20gb3B0aW9ucyBodHRwOi8vYml0Lmx5L3JlZHV4LWxvZ2dlci1vcHRpb25zXFxuaW1wb3J0IGNyZWF0ZUxvZ2dlciBmcm9tICdyZWR1eC1sb2dnZXInXFxuY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcXG4gIC8vIC4uLm9wdGlvbnNcXG59KTtcXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKFxcbiAgcmVkdWNlcixcXG4gIGFwcGx5TWlkZGxld2FyZShsb2dnZXIpXFxuKVxcblwiKSxmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGUodCl9fX07dmFyIHU9W107cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciByPWUuZ2V0U3RhdGU7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihsKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBpJiYhaShyLGwpKXJldHVybiBlKGwpO3ZhciBjPXt9O3UucHVzaChjKSxjLnN0YXJ0ZWQ9Ty5ub3coKSxjLnN0YXJ0ZWRUaW1lPW5ldyBEYXRlLGMucHJldlN0YXRlPW4ocigpKSxjLmFjdGlvbj1sO3ZhciBzPXZvaWQgMDtpZihhKXRyeXtzPWUobCl9Y2F0Y2goZSl7Yy5lcnJvcj1vKGUpfWVsc2Ugcz1lKGwpO2MudG9vaz1PLm5vdygpLWMuc3RhcnRlZCxjLm5leHRTdGF0ZT1uKHIoKSk7dmFyIGQ9dC5kaWZmJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBmP2YocixsKTp0LmRpZmY7aWYoeCh1LE9iamVjdC5hc3NpZ24oe30sdCx7ZGlmZjpkfSkpLHUubGVuZ3RoPTAsYy5lcnJvcil0aHJvdyBjLmVycm9yO3JldHVybiBzfX19fXZhciBrLGosRT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgQXJyYXkodCsxKS5qb2luKGUpfSxBPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIEUoXCIwXCIsdC1lLnRvU3RyaW5nKCkubGVuZ3RoKStlfSxEPWZ1bmN0aW9uKGUpe3JldHVybiBBKGUuZ2V0SG91cnMoKSwyKStcIjpcIitBKGUuZ2V0TWludXRlcygpLDIpK1wiOlwiK0EoZS5nZXRTZWNvbmRzKCksMikrXCIuXCIrQShlLmdldE1pbGxpc2Vjb25kcygpLDMpfSxPPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwZXJmb3JtYW5jZSYmbnVsbCE9PXBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3c/cGVyZm9ybWFuY2U6RGF0ZSxOPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LFA9ZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKHZhciB0PTAscj1BcnJheShlLmxlbmd0aCk7dDxlLmxlbmd0aDt0Kyspclt0XT1lW3RdO3JldHVybiByfXJldHVybiBBcnJheS5mcm9tKGUpfSxDPVtdO2s9XCJvYmplY3RcIj09PShcInVuZGVmaW5lZFwiPT10eXBlb2YgZ2xvYmFsP1widW5kZWZpbmVkXCI6TihnbG9iYWwpKSYmZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSxqPWsuRGVlcERpZmYsaiYmQy5wdXNoKGZ1bmN0aW9uKCl7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGomJmsuRGVlcERpZmY9PT1jJiYoay5EZWVwRGlmZj1qLGo9dm9pZCAwKX0pLHQobixyKSx0KG8sciksdChpLHIpLHQoYSxyKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhjLHtkaWZmOnt2YWx1ZTpjLGVudW1lcmFibGU6ITB9LG9ic2VydmFibGVEaWZmOnt2YWx1ZTpsLGVudW1lcmFibGU6ITB9LGFwcGx5RGlmZjp7dmFsdWU6aCxlbnVtZXJhYmxlOiEwfSxhcHBseUNoYW5nZTp7dmFsdWU6ZCxlbnVtZXJhYmxlOiEwfSxyZXZlcnRDaGFuZ2U6e3ZhbHVlOmcsZW51bWVyYWJsZTohMH0saXNDb25mbGljdDp7dmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2Ygan0sZW51bWVyYWJsZTohMH0sbm9Db25mbGljdDp7dmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gQyYmKEMuZm9yRWFjaChmdW5jdGlvbihlKXtlKCl9KSxDPW51bGwpLGN9LGVudW1lcmFibGU6ITB9fSk7dmFyIEY9e0U6e2NvbG9yOlwiIzIxOTZGM1wiLHRleHQ6XCJDSEFOR0VEOlwifSxOOntjb2xvcjpcIiM0Q0FGNTBcIix0ZXh0OlwiQURERUQ6XCJ9LEQ6e2NvbG9yOlwiI0Y0NDMzNlwiLHRleHQ6XCJERUxFVEVEOlwifSxBOntjb2xvcjpcIiMyMTk2RjNcIix0ZXh0OlwiQVJSQVk6XCJ9fSxMPXtsZXZlbDpcImxvZ1wiLGxvZ2dlcjpjb25zb2xlLGxvZ0Vycm9yczohMCxjb2xsYXBzZWQ6dm9pZCAwLHByZWRpY2F0ZTp2b2lkIDAsZHVyYXRpb246ITEsdGltZXN0YW1wOiEwLHN0YXRlVHJhbnNmb3JtZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGFjdGlvblRyYW5zZm9ybWVyOmZ1bmN0aW9uKGUpe3JldHVybiBlfSxlcnJvclRyYW5zZm9ybWVyOmZ1bmN0aW9uKGUpe3JldHVybiBlfSxjb2xvcnM6e3RpdGxlOmZ1bmN0aW9uKCl7cmV0dXJuXCJpbmhlcml0XCJ9LHByZXZTdGF0ZTpmdW5jdGlvbigpe3JldHVyblwiIzlFOUU5RVwifSxhY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm5cIiMwM0E5RjRcIn0sbmV4dFN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuXCIjNENBRjUwXCJ9LGVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuXCIjRjIwNDA0XCJ9fSxkaWZmOiExLGRpZmZQcmVkaWNhdGU6dm9pZCAwLHRyYW5zZm9ybWVyOnZvaWQgMH0sVD1mdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PWUuZGlzcGF0Y2gscj1lLmdldFN0YXRlO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHR8fFwiZnVuY3Rpb25cIj09dHlwZW9mIHI/UygpKHtkaXNwYXRjaDp0LGdldFN0YXRlOnJ9KTp2b2lkIGNvbnNvbGUuZXJyb3IoXCJcXG5bcmVkdXgtbG9nZ2VyIHYzXSBCUkVBS0lORyBDSEFOR0VcXG5bcmVkdXgtbG9nZ2VyIHYzXSBTaW5jZSAzLjAuMCByZWR1eC1sb2dnZXIgZXhwb3J0cyBieSBkZWZhdWx0IGxvZ2dlciB3aXRoIGRlZmF1bHQgc2V0dGluZ3MuXFxuW3JlZHV4LWxvZ2dlciB2M10gQ2hhbmdlXFxuW3JlZHV4LWxvZ2dlciB2M10gaW1wb3J0IGNyZWF0ZUxvZ2dlciBmcm9tICdyZWR1eC1sb2dnZXInXFxuW3JlZHV4LWxvZ2dlciB2M10gdG9cXG5bcmVkdXgtbG9nZ2VyIHYzXSBpbXBvcnQgeyBjcmVhdGVMb2dnZXIgfSBmcm9tICdyZWR1eC1sb2dnZXInXFxuXCIpfTtlLmRlZmF1bHRzPUwsZS5jcmVhdGVMb2dnZXI9UyxlLmxvZ2dlcj1ULGUuZGVmYXVsdD1ULE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///67\n')},,function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///69\n")},,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/*global angular jQuery*/\n\n/**\n * Angular Controllers: Edit Post Widget Controller.\n *\n * This adapter provides a bridge to the legacy AngularJS app.\n *\n * @since 3.11.0\n */\n// Cache the instance.\nlet scope;\n/**\n * Get the `EditPostWidgetController`\'s scope.\n *\n * @since 3.11.0\n * @returns {{onSelectedEntityTile: (function)}} The `EditPostWidgetController`\n *     instance.\n * @constructor\n */\n\nfunction EditPostWidgetController() {\n  // Return the cached instance or get the instance and cache it.\n  return scope ? scope : scope = angular.element(jQuery(\'[ng-controller="EditPostWidgetController"]\')).scope();\n} // Finally export the function.\n\n\n/* harmony default export */ __webpack_exports__["a"] = (EditPostWidgetController);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9hbmd1bGFyL0VkaXRQb3N0V2lkZ2V0Q29udHJvbGxlci5qcz9lMTYxIl0sIm5hbWVzIjpbInNjb3BlIiwiRWRpdFBvc3RXaWRnZXRDb250cm9sbGVyIiwiYW5ndWxhciIsImVsZW1lbnQiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOzs7Ozs7O0FBUUE7QUFDQSxJQUFJQSxLQUFKO0FBRUE7Ozs7Ozs7OztBQVFBLFNBQVNDLHdCQUFULEdBQW9DO0FBRWxDO0FBQ0EsU0FBT0QsS0FBSyxHQUFHQSxLQUFILEdBQVlBLEtBQUssR0FBR0UsT0FBTyxDQUFDQyxPQUFSLENBQWdCQyxNQUFNLENBQUMsNENBQUQsQ0FBdEIsRUFBc0VKLEtBQXRFLEVBQWhDO0FBQ0QsQyxDQUVEOzs7QUFDZUMsaUZBQWYiLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmdsb2JhbCBhbmd1bGFyIGpRdWVyeSovXG5cbi8qKlxuICogQW5ndWxhciBDb250cm9sbGVyczogRWRpdCBQb3N0IFdpZGdldCBDb250cm9sbGVyLlxuICpcbiAqIFRoaXMgYWRhcHRlciBwcm92aWRlcyBhIGJyaWRnZSB0byB0aGUgbGVnYWN5IEFuZ3VsYXJKUyBhcHAuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICovXG5cbi8vIENhY2hlIHRoZSBpbnN0YW5jZS5cbmxldCBzY29wZTtcblxuLyoqXG4gKiBHZXQgdGhlIGBFZGl0UG9zdFdpZGdldENvbnRyb2xsZXJgJ3Mgc2NvcGUuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICogQHJldHVybnMge3tvblNlbGVjdGVkRW50aXR5VGlsZTogKGZ1bmN0aW9uKX19IFRoZSBgRWRpdFBvc3RXaWRnZXRDb250cm9sbGVyYFxuICogICAgIGluc3RhbmNlLlxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIEVkaXRQb3N0V2lkZ2V0Q29udHJvbGxlcigpIHtcblxuICAvLyBSZXR1cm4gdGhlIGNhY2hlZCBpbnN0YW5jZSBvciBnZXQgdGhlIGluc3RhbmNlIGFuZCBjYWNoZSBpdC5cbiAgcmV0dXJuIHNjb3BlID8gc2NvcGUgOiAoc2NvcGUgPSBhbmd1bGFyLmVsZW1lbnQoalF1ZXJ5KCdbbmctY29udHJvbGxlcj1cIkVkaXRQb3N0V2lkZ2V0Q29udHJvbGxlclwiXScpKS5zY29wZSgpKTtcbn1cblxuLy8gRmluYWxseSBleHBvcnQgdGhlIGZ1bmN0aW9uLlxuZXhwb3J0IGRlZmF1bHQgRWRpdFBvc3RXaWRnZXRDb250cm9sbGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// CONCATENATED MODULE: ./src/Edit/services/EditorService.js\n/*global tinyMCE*/\n\n/**\n * Services: EditorService.\n *\n * Provide TinyMCE editor services.\n *\n * @since 3.11.0\n */\n\n/**\n * Cached TinyMCE instances.\n *\n * @since 3.11.0\n */\nconst instances = [];\n/**\n * The `EditorService` class provides access to the in-page TinyMCE editor.\n *\n * @since 3.11.0\n */\n\nclass EditorService {\n  /**\n   * Get the TinyMCE editor with the specified id.\n   *\n   * @since 3.11.0\n   * @param {string} [id=content] The editor id, by default `content`.\n   * @return {Object} A TinyMCE editor instance.\n   */\n  get(id = window["wlSettings"]["default_editor_id"]) {\n    // Get the editor id from the `wlSettings` or use `content`.\n    // Allow 3rd parties to change the editor id.\n    //\n    // @see https://github.com/insideout10/wordlift-plugin/issues/850.\n    // @see https://github.com/insideout10/wordlift-plugin/issues/851.\n    const editorId = "undefined" !== typeof window["wp"].hooks ? window["wp"].hooks.applyFilters("wl_default_editor_id", id) : id;\n    return instances[editorId] ? instances[editorId] : instances[editorId] = tinyMCE.get(editorId);\n  }\n\n} // Finally export the `EditorService`.\n\n\n/* harmony default export */ var services_EditorService = (new EditorService());\n// CONCATENATED MODULE: ./src/Edit/services/LinkService.js\n/*global wlSettings*/\n\n/**\n * Services: Link Service.\n *\n * A service which handles the link/no link attribute for entity\'s occurrences.\n *\n * @since 3.11.0\n */\n\n/**\n * Internal dependencies\n */\n\n/**\n * Define the `LinkService` class.\n *\n * @since 3.11.0\n */\n\nclass LinkService_LinkService {\n  /**\n   * Create an `LinkService` instance.\n   *\n   * @since 3.13.0\n   * @param {boolean} linkByDefault Whether to link by default.\n   */\n  constructor(linkByDefault) {\n    // Set the `link by default` setting.\n    this.linkByDefault = linkByDefault;\n  }\n  /**\n   * Set the link flag on the provided `occurrences`.\n   *\n   * @since 3.11.0\n   * @param {Array} occurrences An array of occurrences ids (which match dom\n   *     elements).\n   * @param {boolean} value True to enable linking or false to disable it.\n   */\n\n\n  setLink(occurrences, value) {\n    // If the request is to enable links, remove the `wl-no-link` class on\n    // all the occurrences.\n    if (value) {\n      occurrences.forEach(x => this.setYesLink(x));\n    } else {\n      // If the request is to disable links, add the `wl-no-link` class to\n      // all occurrences.\n      occurrences.forEach(x => this.setNoLink(x));\n    }\n  }\n  /**\n   * Switch the link on.\n   *\n   * @since 3.13.0\n   * @param {object} elem A DOM element.\n   */\n\n\n  setYesLink(elem) {\n    const dom = services_EditorService.get().dom;\n    dom.removeClass(elem, "wl-no-link");\n    dom.addClass(elem, "wl-link");\n  }\n  /**\n   * Switch the link off.\n   *\n   * @since 3.13.0\n   * @param {object} elem A DOM element.\n   */\n\n\n  setNoLink(elem) {\n    const dom = services_EditorService.get().dom;\n    dom.removeClass(elem, "wl-link");\n    dom.addClass(elem, "wl-no-link");\n  }\n  /**\n   * Get the link flag given the provided `occurrences`. A link flag is\n   * considered true when at least one occurrences enables linking.\n   *\n   * @since 3.11.0\n   * @param {Array} occurrences An array of occurrences dom ids.\n   * @return {boolean} True if at least one occurrences enables linking,\n   *     otherwise false.\n   */\n\n\n  getLink(occurrences) {\n    const ed = services_EditorService.get();\n\n    if (ed) {\n      // Handle classic editor\n      return occurrences.reduce((acc, id) => {\n        const dom = ed.dom;\n        return acc || (this.linkByDefault ? !dom.hasClass(id, "wl-no-link") : dom.hasClass(id, "wl-link"));\n      }, false);\n    } else {\n      // Handle block editor\n      const divElem = document.createElement("div");\n      divElem.innerHTML = wp.data.select("core/editor").getBlocks().map(block => block.originalContent).join();\n      return occurrences.reduce((acc, id) => {\n        return acc || (this.linkByDefault ? !(divElem.querySelector(`[id="${id}"]`) && divElem.querySelector(`[id="${id}"]`).classList.contains("wl-no-link")) : divElem.querySelector(`[id="${id}"]`) && divElem.querySelector(`[id="${id}"]`).classList.contains("wl-link"));\n      }, false);\n    }\n  }\n\n} // Finally export the `LinkService`.\n\n\n/* harmony default export */ var services_LinkService = __webpack_exports__["a"] = (new LinkService_LinkService("1" === wlSettings.link_by_default));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///76\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(43);\n/* harmony import */ var _ownKeys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64);\n/* harmony import */ var _get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78);\n\n\n\n/* harmony default export */ __webpack_exports__["a"] = (function (predicate) {\n  return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$namespace = _ref.namespace,\n        namespace = _ref$namespace === void 0 ? _constants__WEBPACK_IMPORTED_MODULE_0__[/* DEFAULT_NAMESPACE */ "b"] : _ref$namespace,\n        prefix = _ref.prefix;\n\n    if (partialFlatMap === void 0) {\n      partialFlatMap = {};\n    }\n\n    if (partialFlatActionType === void 0) {\n      partialFlatActionType = \'\';\n    }\n\n    function connectNamespace(type) {\n      var _ref2;\n\n      if (!partialFlatActionType) return type;\n      var types = type.toString().split(_constants__WEBPACK_IMPORTED_MODULE_0__[/* ACTION_TYPE_DELIMITER */ "a"]);\n      var partials = partialFlatActionType.split(_constants__WEBPACK_IMPORTED_MODULE_0__[/* ACTION_TYPE_DELIMITER */ "a"]);\n      return (_ref2 = []).concat.apply(_ref2, partials.map(function (p) {\n        return types.map(function (t) {\n          return "" + p + namespace + t;\n        });\n      })).join(_constants__WEBPACK_IMPORTED_MODULE_0__[/* ACTION_TYPE_DELIMITER */ "a"]);\n    }\n\n    function connectPrefix(type) {\n      if (partialFlatActionType || !prefix || prefix && new RegExp("^" + prefix + namespace).test(type)) {\n        return type;\n      }\n\n      return "" + prefix + namespace + type;\n    }\n\n    Object(_ownKeys__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(map).forEach(function (type) {\n      var nextNamespace = connectPrefix(connectNamespace(type));\n      var mapValue = Object(_get__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(type, map);\n\n      if (predicate(mapValue)) {\n        flatten(mapValue, {\n          namespace: namespace,\n          prefix: prefix\n        }, partialFlatMap, nextNamespace);\n      } else {\n        partialFlatMap[nextNamespace] = mapValue;\n      }\n    });\n    return partialFlatMap;\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9mbGF0dGVuV2hlbk5vZGUuanM/NzM0OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBd0U7QUFDeEM7QUFDUjtBQUNSO0FBQ2hCO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0EsZ0RBQWdELG9FQUFpQjtBQUNqRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSx3Q0FBd0Msd0VBQXFCO0FBQzdELGlEQUFpRCx3RUFBcUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU8sUUFBUSx3RUFBcUI7QUFDcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxJQUFJLGdFQUFPO0FBQ1g7QUFDQSxxQkFBcUIsNERBQUc7O0FBRXhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxDQUFDIiwiZmlsZSI6Ijc3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVGQVVMVF9OQU1FU1BBQ0UsIEFDVElPTl9UWVBFX0RFTElNSVRFUiB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgb3duS2V5cyBmcm9tICcuL293bktleXMnO1xuaW1wb3J0IGdldCBmcm9tICcuL2dldCc7XG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHByZWRpY2F0ZSkge1xuICByZXR1cm4gZnVuY3Rpb24gZmxhdHRlbihtYXAsIF90ZW1wLCBwYXJ0aWFsRmxhdE1hcCwgcGFydGlhbEZsYXRBY3Rpb25UeXBlKSB7XG4gICAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCxcbiAgICAgICAgX3JlZiRuYW1lc3BhY2UgPSBfcmVmLm5hbWVzcGFjZSxcbiAgICAgICAgbmFtZXNwYWNlID0gX3JlZiRuYW1lc3BhY2UgPT09IHZvaWQgMCA/IERFRkFVTFRfTkFNRVNQQUNFIDogX3JlZiRuYW1lc3BhY2UsXG4gICAgICAgIHByZWZpeCA9IF9yZWYucHJlZml4O1xuXG4gICAgaWYgKHBhcnRpYWxGbGF0TWFwID09PSB2b2lkIDApIHtcbiAgICAgIHBhcnRpYWxGbGF0TWFwID0ge307XG4gICAgfVxuXG4gICAgaWYgKHBhcnRpYWxGbGF0QWN0aW9uVHlwZSA9PT0gdm9pZCAwKSB7XG4gICAgICBwYXJ0aWFsRmxhdEFjdGlvblR5cGUgPSAnJztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb25uZWN0TmFtZXNwYWNlKHR5cGUpIHtcbiAgICAgIHZhciBfcmVmMjtcblxuICAgICAgaWYgKCFwYXJ0aWFsRmxhdEFjdGlvblR5cGUpIHJldHVybiB0eXBlO1xuICAgICAgdmFyIHR5cGVzID0gdHlwZS50b1N0cmluZygpLnNwbGl0KEFDVElPTl9UWVBFX0RFTElNSVRFUik7XG4gICAgICB2YXIgcGFydGlhbHMgPSBwYXJ0aWFsRmxhdEFjdGlvblR5cGUuc3BsaXQoQUNUSU9OX1RZUEVfREVMSU1JVEVSKTtcbiAgICAgIHJldHVybiAoX3JlZjIgPSBbXSkuY29uY2F0LmFwcGx5KF9yZWYyLCBwYXJ0aWFscy5tYXAoZnVuY3Rpb24gKHApIHtcbiAgICAgICAgcmV0dXJuIHR5cGVzLm1hcChmdW5jdGlvbiAodCkge1xuICAgICAgICAgIHJldHVybiBcIlwiICsgcCArIG5hbWVzcGFjZSArIHQ7XG4gICAgICAgIH0pO1xuICAgICAgfSkpLmpvaW4oQUNUSU9OX1RZUEVfREVMSU1JVEVSKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb25uZWN0UHJlZml4KHR5cGUpIHtcbiAgICAgIGlmIChwYXJ0aWFsRmxhdEFjdGlvblR5cGUgfHwgIXByZWZpeCB8fCBwcmVmaXggJiYgbmV3IFJlZ0V4cChcIl5cIiArIHByZWZpeCArIG5hbWVzcGFjZSkudGVzdCh0eXBlKSkge1xuICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFwiXCIgKyBwcmVmaXggKyBuYW1lc3BhY2UgKyB0eXBlO1xuICAgIH1cblxuICAgIG93bktleXMobWFwKS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICB2YXIgbmV4dE5hbWVzcGFjZSA9IGNvbm5lY3RQcmVmaXgoY29ubmVjdE5hbWVzcGFjZSh0eXBlKSk7XG4gICAgICB2YXIgbWFwVmFsdWUgPSBnZXQodHlwZSwgbWFwKTtcblxuICAgICAgaWYgKHByZWRpY2F0ZShtYXBWYWx1ZSkpIHtcbiAgICAgICAgZmxhdHRlbihtYXBWYWx1ZSwge1xuICAgICAgICAgIG5hbWVzcGFjZTogbmFtZXNwYWNlLFxuICAgICAgICAgIHByZWZpeDogcHJlZml4XG4gICAgICAgIH0sIHBhcnRpYWxGbGF0TWFwLCBuZXh0TmFtZXNwYWNlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnRpYWxGbGF0TWFwW25leHROYW1lc3BhY2VdID0gbWFwVmFsdWU7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHBhcnRpYWxGbGF0TWFwO1xuICB9O1xufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///77\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return get; });\n/* harmony import */ var _isMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(58);\n\nfunction get(key, x) {\n  return Object(_isMap__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(x) ? x.get(key) : x[key];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9nZXQuanM/NTc5ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQTRCO0FBQ2I7QUFDZixTQUFTLDhEQUFLO0FBQ2QiLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaXNNYXAgZnJvbSAnLi9pc01hcCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXQoa2V5LCB4KSB7XG4gIHJldHVybiBpc01hcCh4KSA/IHguZ2V0KGtleSkgOiB4W2tleV07XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///78\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = (function (value) {\n  return value === null || value === undefined;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc05pbC5qcz9jNTllIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFnQjtBQUNoQjtBQUNBLENBQUMiLCJmaWxlIjoiNzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkO1xufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///79\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/**\n * Components: Cloud.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Cloud = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].i`\n  display: ${props => props.local ? "none" : "inline-block !important"};\n  position: absolute;\n  right: 20px;\n  top: 8px;\n  font-size: 14px;\n  line-height: 1;\n  color: #cbcbcb;\n  user-select: none;\n  transition: opacity 150ms ease;\n`; // Finally export the `Cloud`.\n\n/* harmony default export */ __webpack_exports__["a"] = (Cloud);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9jb21wb25lbnRzL0VudGl0eVRpbGUvQ2xvdWQuanM/NjY4MiJdLCJuYW1lcyI6WyJDbG91ZCIsInN0eWxlZCIsImkiLCJwcm9wcyIsImxvY2FsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOzs7Ozs7QUFNQTs7O0FBR0E7QUFFQTs7OztBQUdBLE1BQU1BLEtBQUssR0FBR0MseURBQU0sQ0FBQ0MsQ0FBRTthQUNWQyxLQUFLLElBQUtBLEtBQUssQ0FBQ0MsS0FBTixHQUFjLE1BQWQsR0FBdUIseUJBQTJCOzs7Ozs7Ozs7Q0FEekUsQyxDQVlBOztBQUNlSiw4REFBZiIsImZpbGUiOiI4MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29tcG9uZW50czogQ2xvdWQuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICovXG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XG5cbi8qKlxuICogQGluaGVyaXREb2NcbiAqL1xuY29uc3QgQ2xvdWQgPSBzdHlsZWQuaWBcbiAgZGlzcGxheTogJHtwcm9wcyA9PiAocHJvcHMubG9jYWwgPyBcIm5vbmVcIiA6IFwiaW5saW5lLWJsb2NrICFpbXBvcnRhbnRcIil9O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAyMHB4O1xuICB0b3A6IDhweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMTtcbiAgY29sb3I6ICNjYmNiY2I7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDE1MG1zIGVhc2U7XG5gO1xuXG4vLyBGaW5hbGx5IGV4cG9ydCB0aGUgYENsb3VkYC5cbmV4cG9ydCBkZWZhdWx0IENsb3VkO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///80\n')},,,function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar sizerStyle = {\n\tposition: 'absolute',\n\ttop: 0,\n\tleft: 0,\n\tvisibility: 'hidden',\n\theight: 0,\n\toverflow: 'scroll',\n\twhiteSpace: 'pre'\n};\n\nvar INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];\n\nvar cleanInputProps = function cleanInputProps(inputProps) {\n\tINPUT_PROPS_BLACKLIST.forEach(function (field) {\n\t\treturn delete inputProps[field];\n\t});\n\treturn inputProps;\n};\n\nvar copyStyles = function copyStyles(styles, node) {\n\tnode.style.fontSize = styles.fontSize;\n\tnode.style.fontFamily = styles.fontFamily;\n\tnode.style.fontWeight = styles.fontWeight;\n\tnode.style.fontStyle = styles.fontStyle;\n\tnode.style.letterSpacing = styles.letterSpacing;\n\tnode.style.textTransform = styles.textTransform;\n};\n\nvar isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent) : false;\n\nvar generateId = function generateId() {\n\t// we only need an auto-generated ID for stylesheet injection, which is only\n\t// used for IE. so if the browser is not IE, this should return undefined.\n\treturn isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nvar AutosizeInput = function (_Component) {\n\t_inherits(AutosizeInput, _Component);\n\n\tfunction AutosizeInput(props) {\n\t\t_classCallCheck(this, AutosizeInput);\n\n\t\tvar _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));\n\n\t\t_this.inputRef = function (el) {\n\t\t\t_this.input = el;\n\t\t\tif (typeof _this.props.inputRef === 'function') {\n\t\t\t\t_this.props.inputRef(el);\n\t\t\t}\n\t\t};\n\n\t\t_this.placeHolderSizerRef = function (el) {\n\t\t\t_this.placeHolderSizer = el;\n\t\t};\n\n\t\t_this.sizerRef = function (el) {\n\t\t\t_this.sizer = el;\n\t\t};\n\n\t\t_this.state = {\n\t\t\tinputWidth: props.minWidth,\n\t\t\tinputId: props.id || generateId()\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(AutosizeInput, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.mounted = true;\n\t\t\tthis.copyInputStyles();\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'UNSAFE_componentWillReceiveProps',\n\t\tvalue: function UNSAFE_componentWillReceiveProps(nextProps) {\n\t\t\tvar id = nextProps.id;\n\n\t\t\tif (id !== this.props.id) {\n\t\t\t\tthis.setState({ inputId: id || generateId() });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\tif (prevState.inputWidth !== this.state.inputWidth) {\n\t\t\t\tif (typeof this.props.onAutosize === 'function') {\n\t\t\t\t\tthis.props.onAutosize(this.state.inputWidth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis.mounted = false;\n\t\t}\n\t}, {\n\t\tkey: 'copyInputStyles',\n\t\tvalue: function copyInputStyles() {\n\t\t\tif (!this.mounted || !window.getComputedStyle) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar inputStyles = this.input && window.getComputedStyle(this.input);\n\t\t\tif (!inputStyles) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcopyStyles(inputStyles, this.sizer);\n\t\t\tif (this.placeHolderSizer) {\n\t\t\t\tcopyStyles(inputStyles, this.placeHolderSizer);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateInputWidth',\n\t\tvalue: function updateInputWidth() {\n\t\t\tif (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newInputWidth = void 0;\n\t\t\tif (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n\t\t\t\tnewInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n\t\t\t} else {\n\t\t\t\tnewInputWidth = this.sizer.scrollWidth + 2;\n\t\t\t}\n\t\t\t// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n\t\t\tvar extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;\n\t\t\tnewInputWidth += extraWidth;\n\t\t\tif (newInputWidth < this.props.minWidth) {\n\t\t\t\tnewInputWidth = this.props.minWidth;\n\t\t\t}\n\t\t\tif (newInputWidth !== this.state.inputWidth) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputWidth: newInputWidth\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getInput',\n\t\tvalue: function getInput() {\n\t\t\treturn this.input;\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.input.focus();\n\t\t}\n\t}, {\n\t\tkey: 'blur',\n\t\tvalue: function blur() {\n\t\t\tthis.input.blur();\n\t\t}\n\t}, {\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.input.select();\n\t\t}\n\t}, {\n\t\tkey: 'renderStyles',\n\t\tvalue: function renderStyles() {\n\t\t\t// this method injects styles to hide IE's clear indicator, which messes\n\t\t\t// with input size detection. the stylesheet is only injected when the\n\t\t\t// browser is IE, and can also be disabled by the `injectStyles` prop.\n\t\t\tvar injectStyles = this.props.injectStyles;\n\n\t\t\treturn isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n\t\t\t\t\t__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'\n\t\t\t\t} }) : null;\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {\n\t\t\t\tif (previousValue !== null && previousValue !== undefined) {\n\t\t\t\t\treturn previousValue;\n\t\t\t\t}\n\t\t\t\treturn currentValue;\n\t\t\t});\n\n\t\t\tvar wrapperStyle = _extends({}, this.props.style);\n\t\t\tif (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n\t\t\tvar inputStyle = _extends({\n\t\t\t\tboxSizing: 'content-box',\n\t\t\t\twidth: this.state.inputWidth + 'px'\n\t\t\t}, this.props.inputStyle);\n\n\t\t\tvar inputProps = _objectWithoutProperties(this.props, []);\n\n\t\t\tcleanInputProps(inputProps);\n\t\t\tinputProps.className = this.props.inputClassName;\n\t\t\tinputProps.id = this.state.inputId;\n\t\t\tinputProps.style = inputStyle;\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: this.props.className, style: wrapperStyle },\n\t\t\t\tthis.renderStyles(),\n\t\t\t\t_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.sizerRef, style: sizerStyle },\n\t\t\t\t\tsizerValue\n\t\t\t\t),\n\t\t\t\tthis.props.placeholder ? _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.placeHolderSizerRef, style: sizerStyle },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t) : null\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn AutosizeInput;\n}(_react.Component);\n\nAutosizeInput.propTypes = {\n\tclassName: _propTypes2.default.string, // className for the outer element\n\tdefaultValue: _propTypes2.default.any, // default field value\n\textraWidth: _propTypes2.default.oneOfType([// additional width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tid: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots\n\tinjectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true\n\tinputClassName: _propTypes2.default.string, // className for the input element\n\tinputRef: _propTypes2.default.func, // ref callback for the input element\n\tinputStyle: _propTypes2.default.object, // css styles for the input element\n\tminWidth: _propTypes2.default.oneOfType([// minimum width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tonAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}\n\tonChange: _propTypes2.default.func, // onChange handler: function(event) {}\n\tplaceholder: _propTypes2.default.string, // placeholder text\n\tplaceholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder\n\tstyle: _propTypes2.default.object, // css styles for the outer element\n\tvalue: _propTypes2.default.any // field value\n};\nAutosizeInput.defaultProps = {\n\tminWidth: 1,\n\tinjectStyles: true\n};\n\nexports.default = AutosizeInput;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./src/Edit/components/Autocomplete/AutocompleteSelect/index.css\nvar Autocomplete_AutocompleteSelect = __webpack_require__(100);\n\n// EXTERNAL MODULE: external {\"this\":\"React\"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(2);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ./node_modules/react-input-autosize/lib/AutosizeInput.js\nvar AutosizeInput = __webpack_require__(83);\nvar AutosizeInput_default = /*#__PURE__*/__webpack_require__.n(AutosizeInput);\n\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(36);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: external {\"this\":\"ReactDOM\"}\nvar external_this_ReactDOM_ = __webpack_require__(20);\n\n// CONCATENATED MODULE: ./node_modules/react-select/dist/react-select.es.js\n\n\n\n\n\n\nvar react_select_es_arrowRenderer = function arrowRenderer(_ref) {\n\tvar onMouseDown = _ref.onMouseDown;\n\n\treturn external_this_React_default.a.createElement('span', {\n\t\tclassName: 'Select-arrow',\n\t\tonMouseDown: onMouseDown\n\t});\n};\n\nreact_select_es_arrowRenderer.propTypes = {\n\tonMouseDown: prop_types_default.a.func\n};\n\nvar react_select_es_clearRenderer = function clearRenderer() {\n\treturn external_this_React_default.a.createElement('span', {\n\t\tclassName: 'Select-clear',\n\t\tdangerouslySetInnerHTML: { __html: '&times;' }\n\t});\n};\n\nvar map = [{ 'base': 'A', 'letters': /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g }, { 'base': 'AA', 'letters': /[\\uA732]/g }, { 'base': 'AE', 'letters': /[\\u00C6\\u01FC\\u01E2]/g }, { 'base': 'AO', 'letters': /[\\uA734]/g }, { 'base': 'AU', 'letters': /[\\uA736]/g }, { 'base': 'AV', 'letters': /[\\uA738\\uA73A]/g }, { 'base': 'AY', 'letters': /[\\uA73C]/g }, { 'base': 'B', 'letters': /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g }, { 'base': 'C', 'letters': /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g }, { 'base': 'D', 'letters': /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g }, { 'base': 'DZ', 'letters': /[\\u01F1\\u01C4]/g }, { 'base': 'Dz', 'letters': /[\\u01F2\\u01C5]/g }, { 'base': 'E', 'letters': /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g }, { 'base': 'F', 'letters': /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g }, { 'base': 'G', 'letters': /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g }, { 'base': 'H', 'letters': /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g }, { 'base': 'I', 'letters': /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g }, { 'base': 'J', 'letters': /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g }, { 'base': 'K', 'letters': /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g }, { 'base': 'L', 'letters': /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g }, { 'base': 'LJ', 'letters': /[\\u01C7]/g }, { 'base': 'Lj', 'letters': /[\\u01C8]/g }, { 'base': 'M', 'letters': /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g }, { 'base': 'N', 'letters': /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g }, { 'base': 'NJ', 'letters': /[\\u01CA]/g }, { 'base': 'Nj', 'letters': /[\\u01CB]/g }, { 'base': 'O', 'letters': /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g }, { 'base': 'OI', 'letters': /[\\u01A2]/g }, { 'base': 'OO', 'letters': /[\\uA74E]/g }, { 'base': 'OU', 'letters': /[\\u0222]/g }, { 'base': 'P', 'letters': /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g }, { 'base': 'Q', 'letters': /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g }, { 'base': 'R', 'letters': /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g }, { 'base': 'S', 'letters': /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g }, { 'base': 'T', 'letters': /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g }, { 'base': 'TZ', 'letters': /[\\uA728]/g }, { 'base': 'U', 'letters': /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g }, { 'base': 'V', 'letters': /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g }, { 'base': 'VY', 'letters': /[\\uA760]/g }, { 'base': 'W', 'letters': /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g }, { 'base': 'X', 'letters': /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g }, { 'base': 'Y', 'letters': /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g }, { 'base': 'Z', 'letters': /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g }, { 'base': 'a', 'letters': /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g }, { 'base': 'aa', 'letters': /[\\uA733]/g }, { 'base': 'ae', 'letters': /[\\u00E6\\u01FD\\u01E3]/g }, { 'base': 'ao', 'letters': /[\\uA735]/g }, { 'base': 'au', 'letters': /[\\uA737]/g }, { 'base': 'av', 'letters': /[\\uA739\\uA73B]/g }, { 'base': 'ay', 'letters': /[\\uA73D]/g }, { 'base': 'b', 'letters': /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g }, { 'base': 'c', 'letters': /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g }, { 'base': 'd', 'letters': /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g }, { 'base': 'dz', 'letters': /[\\u01F3\\u01C6]/g }, { 'base': 'e', 'letters': /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g }, { 'base': 'f', 'letters': /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g }, { 'base': 'g', 'letters': /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g }, { 'base': 'h', 'letters': /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g }, { 'base': 'hv', 'letters': /[\\u0195]/g }, { 'base': 'i', 'letters': /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g }, { 'base': 'j', 'letters': /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g }, { 'base': 'k', 'letters': /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g }, { 'base': 'l', 'letters': /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g }, { 'base': 'lj', 'letters': /[\\u01C9]/g }, { 'base': 'm', 'letters': /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g }, { 'base': 'n', 'letters': /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g }, { 'base': 'nj', 'letters': /[\\u01CC]/g }, { 'base': 'o', 'letters': /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g }, { 'base': 'oi', 'letters': /[\\u01A3]/g }, { 'base': 'ou', 'letters': /[\\u0223]/g }, { 'base': 'oo', 'letters': /[\\uA74F]/g }, { 'base': 'p', 'letters': /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g }, { 'base': 'q', 'letters': /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g }, { 'base': 'r', 'letters': /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g }, { 'base': 's', 'letters': /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g }, { 'base': 't', 'letters': /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g }, { 'base': 'tz', 'letters': /[\\uA729]/g }, { 'base': 'u', 'letters': /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g }, { 'base': 'v', 'letters': /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g }, { 'base': 'vy', 'letters': /[\\uA761]/g }, { 'base': 'w', 'letters': /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g }, { 'base': 'x', 'letters': /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g }, { 'base': 'y', 'letters': /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g }, { 'base': 'z', 'letters': /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g }];\n\nvar stripDiacritics = function stripDiacritics(str) {\n\tfor (var i = 0; i < map.length; i++) {\n\t\tstr = str.replace(map[i].letters, map[i].base);\n\t}\n\treturn str;\n};\n\nvar trim = function trim(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\nvar isValid = function isValid(value) {\n\treturn typeof value !== 'undefined' && value !== null && value !== '';\n};\n\nvar filterOptions = function filterOptions(options, filterValue, excludeOptions, props) {\n\tif (props.ignoreAccents) {\n\t\tfilterValue = stripDiacritics(filterValue);\n\t}\n\n\tif (props.ignoreCase) {\n\t\tfilterValue = filterValue.toLowerCase();\n\t}\n\n\tif (props.trimFilter) {\n\t\tfilterValue = trim(filterValue);\n\t}\n\n\tif (excludeOptions) excludeOptions = excludeOptions.map(function (i) {\n\t\treturn i[props.valueKey];\n\t});\n\n\treturn options.filter(function (option) {\n\t\tif (excludeOptions && excludeOptions.indexOf(option[props.valueKey]) > -1) return false;\n\t\tif (props.filterOption) return props.filterOption.call(undefined, option, filterValue);\n\t\tif (!filterValue) return true;\n\n\t\tvar value = option[props.valueKey];\n\t\tvar label = option[props.labelKey];\n\t\tvar hasValue = isValid(value);\n\t\tvar hasLabel = isValid(label);\n\n\t\tif (!hasValue && !hasLabel) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar valueTest = hasValue ? String(value) : null;\n\t\tvar labelTest = hasLabel ? String(label) : null;\n\n\t\tif (props.ignoreAccents) {\n\t\t\tif (valueTest && props.matchProp !== 'label') valueTest = stripDiacritics(valueTest);\n\t\t\tif (labelTest && props.matchProp !== 'value') labelTest = stripDiacritics(labelTest);\n\t\t}\n\n\t\tif (props.ignoreCase) {\n\t\t\tif (valueTest && props.matchProp !== 'label') valueTest = valueTest.toLowerCase();\n\t\t\tif (labelTest && props.matchProp !== 'value') labelTest = labelTest.toLowerCase();\n\t\t}\n\n\t\treturn props.matchPos === 'start' ? valueTest && props.matchProp !== 'label' && valueTest.substr(0, filterValue.length) === filterValue || labelTest && props.matchProp !== 'value' && labelTest.substr(0, filterValue.length) === filterValue : valueTest && props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0 || labelTest && props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0;\n\t});\n};\n\nvar react_select_es_menuRenderer = function menuRenderer(_ref) {\n\tvar focusedOption = _ref.focusedOption,\n\t    focusOption = _ref.focusOption,\n\t    inputValue = _ref.inputValue,\n\t    instancePrefix = _ref.instancePrefix,\n\t    onFocus = _ref.onFocus,\n\t    onOptionRef = _ref.onOptionRef,\n\t    onSelect = _ref.onSelect,\n\t    optionClassName = _ref.optionClassName,\n\t    optionComponent = _ref.optionComponent,\n\t    optionRenderer = _ref.optionRenderer,\n\t    options = _ref.options,\n\t    removeValue = _ref.removeValue,\n\t    selectValue = _ref.selectValue,\n\t    valueArray = _ref.valueArray,\n\t    valueKey = _ref.valueKey;\n\n\tvar Option = optionComponent;\n\n\treturn options.map(function (option, i) {\n\t\tvar isSelected = valueArray && valueArray.some(function (x) {\n\t\t\treturn x[valueKey] === option[valueKey];\n\t\t});\n\t\tvar isFocused = option === focusedOption;\n\t\tvar optionClass = classnames_default()(optionClassName, {\n\t\t\t'Select-option': true,\n\t\t\t'is-selected': isSelected,\n\t\t\t'is-focused': isFocused,\n\t\t\t'is-disabled': option.disabled\n\t\t});\n\n\t\treturn external_this_React_default.a.createElement(\n\t\t\tOption,\n\t\t\t{\n\t\t\t\tclassName: optionClass,\n\t\t\t\tfocusOption: focusOption,\n\t\t\t\tinputValue: inputValue,\n\t\t\t\tinstancePrefix: instancePrefix,\n\t\t\t\tisDisabled: option.disabled,\n\t\t\t\tisFocused: isFocused,\n\t\t\t\tisSelected: isSelected,\n\t\t\t\tkey: 'option-' + i + '-' + option[valueKey],\n\t\t\t\tonFocus: onFocus,\n\t\t\t\tonSelect: onSelect,\n\t\t\t\toption: option,\n\t\t\t\toptionIndex: i,\n\t\t\t\tref: function ref(_ref2) {\n\t\t\t\t\tonOptionRef(_ref2, isFocused);\n\t\t\t\t},\n\t\t\t\tremoveValue: removeValue,\n\t\t\t\tselectValue: selectValue\n\t\t\t},\n\t\t\toptionRenderer(option, i, inputValue)\n\t\t);\n\t});\n};\n\nreact_select_es_menuRenderer.propTypes = {\n\tfocusOption: prop_types_default.a.func,\n\tfocusedOption: prop_types_default.a.object,\n\tinputValue: prop_types_default.a.string,\n\tinstancePrefix: prop_types_default.a.string,\n\tonFocus: prop_types_default.a.func,\n\tonOptionRef: prop_types_default.a.func,\n\tonSelect: prop_types_default.a.func,\n\toptionClassName: prop_types_default.a.string,\n\toptionComponent: prop_types_default.a.func,\n\toptionRenderer: prop_types_default.a.func,\n\toptions: prop_types_default.a.array,\n\tremoveValue: prop_types_default.a.func,\n\tselectValue: prop_types_default.a.func,\n\tvalueArray: prop_types_default.a.array,\n\tvalueKey: prop_types_default.a.string\n};\n\nvar blockEvent = (function (event) {\n\tevent.preventDefault();\n\tevent.stopPropagation();\n\tif (event.target.tagName !== 'A' || !('href' in event.target)) {\n\t\treturn;\n\t}\n\tif (event.target.target) {\n\t\twindow.open(event.target.href, event.target.target);\n\t} else {\n\t\twindow.location.href = event.target.href;\n\t}\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar react_select_es_Option = function (_React$Component) {\n\tinherits(Option, _React$Component);\n\n\tfunction Option(props) {\n\t\tclassCallCheck(this, Option);\n\n\t\tvar _this = possibleConstructorReturn(this, (Option.__proto__ || Object.getPrototypeOf(Option)).call(this, props));\n\n\t\t_this.handleMouseDown = _this.handleMouseDown.bind(_this);\n\t\t_this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n\t\t_this.handleMouseMove = _this.handleMouseMove.bind(_this);\n\t\t_this.handleTouchStart = _this.handleTouchStart.bind(_this);\n\t\t_this.handleTouchEnd = _this.handleTouchEnd.bind(_this);\n\t\t_this.handleTouchMove = _this.handleTouchMove.bind(_this);\n\t\t_this.onFocus = _this.onFocus.bind(_this);\n\t\treturn _this;\n\t}\n\n\tcreateClass(Option, [{\n\t\tkey: 'handleMouseDown',\n\t\tvalue: function handleMouseDown(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.props.onSelect(this.props.option, event);\n\t\t}\n\t}, {\n\t\tkey: 'handleMouseEnter',\n\t\tvalue: function handleMouseEnter(event) {\n\t\t\tthis.onFocus(event);\n\t\t}\n\t}, {\n\t\tkey: 'handleMouseMove',\n\t\tvalue: function handleMouseMove(event) {\n\t\t\tthis.onFocus(event);\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchEnd',\n\t\tvalue: function handleTouchEnd(event) {\n\t\t\t// Check if the view is being dragged, In this case\n\t\t\t// we don't want to fire the click event (because the user only wants to scroll)\n\t\t\tif (this.dragging) return;\n\n\t\t\tthis.handleMouseDown(event);\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchMove',\n\t\tvalue: function handleTouchMove() {\n\t\t\t// Set a flag that the view is being dragged\n\t\t\tthis.dragging = true;\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchStart',\n\t\tvalue: function handleTouchStart() {\n\t\t\t// Set a flag that the view is not being dragged\n\t\t\tthis.dragging = false;\n\t\t}\n\t}, {\n\t\tkey: 'onFocus',\n\t\tvalue: function onFocus(event) {\n\t\t\tif (!this.props.isFocused) {\n\t\t\t\tthis.props.onFocus(this.props.option, event);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _props = this.props,\n\t\t\t    option = _props.option,\n\t\t\t    instancePrefix = _props.instancePrefix,\n\t\t\t    optionIndex = _props.optionIndex;\n\n\t\t\tvar className = classnames_default()(this.props.className, option.className);\n\n\t\t\treturn option.disabled ? external_this_React_default.a.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: className,\n\t\t\t\t\tonMouseDown: blockEvent,\n\t\t\t\t\tonClick: blockEvent },\n\t\t\t\tthis.props.children\n\t\t\t) : external_this_React_default.a.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: className,\n\t\t\t\t\tstyle: option.style,\n\t\t\t\t\trole: 'option',\n\t\t\t\t\t'aria-label': option.label,\n\t\t\t\t\tonMouseDown: this.handleMouseDown,\n\t\t\t\t\tonMouseEnter: this.handleMouseEnter,\n\t\t\t\t\tonMouseMove: this.handleMouseMove,\n\t\t\t\t\tonTouchStart: this.handleTouchStart,\n\t\t\t\t\tonTouchMove: this.handleTouchMove,\n\t\t\t\t\tonTouchEnd: this.handleTouchEnd,\n\t\t\t\t\tid: instancePrefix + '-option-' + optionIndex,\n\t\t\t\t\ttitle: option.title },\n\t\t\t\tthis.props.children\n\t\t\t);\n\t\t}\n\t}]);\n\treturn Option;\n}(external_this_React_default.a.Component);\n\nreact_select_es_Option.propTypes = {\n\tchildren: prop_types_default.a.node,\n\tclassName: prop_types_default.a.string, // className (based on mouse position)\n\tinstancePrefix: prop_types_default.a.string.isRequired, // unique prefix for the ids (used for aria)\n\tisDisabled: prop_types_default.a.bool, // the option is disabled\n\tisFocused: prop_types_default.a.bool, // the option is focused\n\tisSelected: prop_types_default.a.bool, // the option is selected\n\tonFocus: prop_types_default.a.func, // method to handle mouseEnter on option element\n\tonSelect: prop_types_default.a.func, // method to handle click on option element\n\tonUnfocus: prop_types_default.a.func, // method to handle mouseLeave on option element\n\toption: prop_types_default.a.object.isRequired, // object that is base for that option\n\toptionIndex: prop_types_default.a.number // index of the option, used to generate unique ids for aria\n};\n\nvar react_select_es_Value = function (_React$Component) {\n\tinherits(Value, _React$Component);\n\n\tfunction Value(props) {\n\t\tclassCallCheck(this, Value);\n\n\t\tvar _this = possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).call(this, props));\n\n\t\t_this.handleMouseDown = _this.handleMouseDown.bind(_this);\n\t\t_this.onRemove = _this.onRemove.bind(_this);\n\t\t_this.handleTouchEndRemove = _this.handleTouchEndRemove.bind(_this);\n\t\t_this.handleTouchMove = _this.handleTouchMove.bind(_this);\n\t\t_this.handleTouchStart = _this.handleTouchStart.bind(_this);\n\t\treturn _this;\n\t}\n\n\tcreateClass(Value, [{\n\t\tkey: 'handleMouseDown',\n\t\tvalue: function handleMouseDown(event) {\n\t\t\tif (event.type === 'mousedown' && event.button !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.props.onClick) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis.props.onClick(this.props.value, event);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.props.value.href) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'onRemove',\n\t\tvalue: function onRemove(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.props.onRemove(this.props.value);\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchEndRemove',\n\t\tvalue: function handleTouchEndRemove(event) {\n\t\t\t// Check if the view is being dragged, In this case\n\t\t\t// we don't want to fire the click event (because the user only wants to scroll)\n\t\t\tif (this.dragging) return;\n\n\t\t\t// Fire the mouse events\n\t\t\tthis.onRemove(event);\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchMove',\n\t\tvalue: function handleTouchMove() {\n\t\t\t// Set a flag that the view is being dragged\n\t\t\tthis.dragging = true;\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchStart',\n\t\tvalue: function handleTouchStart() {\n\t\t\t// Set a flag that the view is not being dragged\n\t\t\tthis.dragging = false;\n\t\t}\n\t}, {\n\t\tkey: 'renderRemoveIcon',\n\t\tvalue: function renderRemoveIcon() {\n\t\t\tif (this.props.disabled || !this.props.onRemove) return;\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'span',\n\t\t\t\t{ className: 'Select-value-icon',\n\t\t\t\t\t'aria-hidden': 'true',\n\t\t\t\t\tonMouseDown: this.onRemove,\n\t\t\t\t\tonTouchEnd: this.handleTouchEndRemove,\n\t\t\t\t\tonTouchStart: this.handleTouchStart,\n\t\t\t\t\tonTouchMove: this.handleTouchMove },\n\t\t\t\t'\\xD7'\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'renderLabel',\n\t\tvalue: function renderLabel() {\n\t\t\tvar className = 'Select-value-label';\n\t\t\treturn this.props.onClick || this.props.value.href ? external_this_React_default.a.createElement(\n\t\t\t\t'a',\n\t\t\t\t{ className: className, href: this.props.value.href, target: this.props.value.target, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown },\n\t\t\t\tthis.props.children\n\t\t\t) : external_this_React_default.a.createElement(\n\t\t\t\t'span',\n\t\t\t\t{ className: className, role: 'option', 'aria-selected': 'true', id: this.props.id },\n\t\t\t\tthis.props.children\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: classnames_default()('Select-value', this.props.value.disabled ? 'Select-value-disabled' : '', this.props.value.className),\n\t\t\t\t\tstyle: this.props.value.style,\n\t\t\t\t\ttitle: this.props.value.title\n\t\t\t\t},\n\t\t\t\tthis.renderRemoveIcon(),\n\t\t\t\tthis.renderLabel()\n\t\t\t);\n\t\t}\n\t}]);\n\treturn Value;\n}(external_this_React_default.a.Component);\n\nreact_select_es_Value.propTypes = {\n\tchildren: prop_types_default.a.node,\n\tdisabled: prop_types_default.a.bool, // disabled prop passed to ReactSelect\n\tid: prop_types_default.a.string, // Unique id for the value - used for aria\n\tonClick: prop_types_default.a.func, // method to handle click on value label\n\tonRemove: prop_types_default.a.func, // method to handle removal of the value\n\tvalue: prop_types_default.a.object.isRequired // the option object for this value\n};\n\n/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/react-select\n*/\nvar stringifyValue = function stringifyValue(value) {\n\treturn typeof value === 'string' ? value : value !== null && JSON.stringify(value) || '';\n};\n\nvar stringOrNode = prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.node]);\nvar stringOrNumber = prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]);\n\nvar instanceId = 1;\n\nvar shouldShowValue = function shouldShowValue(state, props) {\n\tvar inputValue = state.inputValue,\n\t    isPseudoFocused = state.isPseudoFocused,\n\t    isFocused = state.isFocused;\n\tvar onSelectResetsInput = props.onSelectResetsInput;\n\n\n\tif (!inputValue) return true;\n\n\tif (!onSelectResetsInput) {\n\t\treturn !(!isFocused && isPseudoFocused || isFocused && !isPseudoFocused);\n\t}\n\n\treturn false;\n};\n\nvar shouldShowPlaceholder = function shouldShowPlaceholder(state, props, isOpen) {\n\tvar inputValue = state.inputValue,\n\t    isPseudoFocused = state.isPseudoFocused,\n\t    isFocused = state.isFocused;\n\tvar onSelectResetsInput = props.onSelectResetsInput;\n\n\n\treturn !inputValue || !onSelectResetsInput && !isOpen && !isPseudoFocused && !isFocused;\n};\n\n/**\n * Retrieve a value from the given options and valueKey\n * @param {String|Number|Array} value\t- the selected value(s)\n * @param {Object}\t\t props\t- the Select component's props (or nextProps)\n */\nvar expandValue = function expandValue(value, props) {\n\tvar valueType = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\tif (valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') return value;\n\tvar options = props.options,\n\t    valueKey = props.valueKey;\n\n\tif (!options) return;\n\tfor (var i = 0; i < options.length; i++) {\n\t\tif (String(options[i][valueKey]) === String(value)) return options[i];\n\t}\n};\n\nvar handleRequired = function handleRequired(value, multi) {\n\tif (!value) return true;\n\treturn multi ? value.length === 0 : Object.keys(value).length === 0;\n};\n\nvar Select$1 = function (_React$Component) {\n\tinherits(Select, _React$Component);\n\n\tfunction Select(props) {\n\t\tclassCallCheck(this, Select);\n\n\t\tvar _this = possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));\n\n\t\t['clearValue', 'focusOption', 'getOptionLabel', 'handleInputBlur', 'handleInputChange', 'handleInputFocus', 'handleInputValueChange', 'handleKeyDown', 'handleMenuScroll', 'handleMouseDown', 'handleMouseDownOnArrow', 'handleMouseDownOnMenu', 'handleTouchEnd', 'handleTouchEndClearValue', 'handleTouchMove', 'handleTouchOutside', 'handleTouchStart', 'handleValueClick', 'onOptionRef', 'removeValue', 'selectValue'].forEach(function (fn) {\n\t\t\treturn _this[fn] = _this[fn].bind(_this);\n\t\t});\n\n\t\t_this.state = {\n\t\t\tinputValue: '',\n\t\t\tisFocused: false,\n\t\t\tisOpen: false,\n\t\t\tisPseudoFocused: false,\n\t\t\trequired: false\n\t\t};\n\t\treturn _this;\n\t}\n\n\tcreateClass(Select, [{\n\t\tkey: 'componentWillMount',\n\t\tvalue: function componentWillMount() {\n\t\t\tthis._instancePrefix = 'react-select-' + (this.props.instanceId || ++instanceId) + '-';\n\t\t\tvar valueArray = this.getValueArray(this.props.value);\n\n\t\t\tif (this.props.required) {\n\t\t\t\tthis.setState({\n\t\t\t\t\trequired: handleRequired(valueArray[0], this.props.multi)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tif (typeof this.props.autofocus !== 'undefined' && typeof console !== 'undefined') {\n\t\t\t\tconsole.warn('Warning: The autofocus prop has changed to autoFocus, support will be removed after react-select@1.0');\n\t\t\t}\n\t\t\tif (this.props.autoFocus || this.props.autofocus) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tvar valueArray = this.getValueArray(nextProps.value, nextProps);\n\n\t\t\tif (nextProps.required) {\n\t\t\t\tthis.setState({\n\t\t\t\t\trequired: handleRequired(valueArray[0], nextProps.multi)\n\t\t\t\t});\n\t\t\t} else if (this.props.required) {\n\t\t\t\t// Used to be required but it's not any more\n\t\t\t\tthis.setState({ required: false });\n\t\t\t}\n\n\t\t\tif (this.state.inputValue && this.props.value !== nextProps.value && nextProps.onSelectResetsInput) {\n\t\t\t\tthis.setState({ inputValue: this.handleInputValueChange('') });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\t// focus to the selected option\n\t\t\tif (this.menu && this.focused && this.state.isOpen && !this.hasScrolledToOption) {\n\t\t\t\tvar focusedOptionNode = Object(external_this_ReactDOM_[\"findDOMNode\"])(this.focused);\n\t\t\t\tvar menuNode = Object(external_this_ReactDOM_[\"findDOMNode\"])(this.menu);\n\n\t\t\t\tvar scrollTop = menuNode.scrollTop;\n\t\t\t\tvar scrollBottom = scrollTop + menuNode.offsetHeight;\n\t\t\t\tvar optionTop = focusedOptionNode.offsetTop;\n\t\t\t\tvar optionBottom = optionTop + focusedOptionNode.offsetHeight;\n\n\t\t\t\tif (scrollTop > optionTop || scrollBottom < optionBottom) {\n\t\t\t\t\tmenuNode.scrollTop = focusedOptionNode.offsetTop;\n\t\t\t\t}\n\n\t\t\t\t// We still set hasScrolledToOption to true even if we didn't\n\t\t\t\t// actually need to scroll, as we've still confirmed that the\n\t\t\t\t// option is in view.\n\t\t\t\tthis.hasScrolledToOption = true;\n\t\t\t} else if (!this.state.isOpen) {\n\t\t\t\tthis.hasScrolledToOption = false;\n\t\t\t}\n\n\t\t\tif (this._scrollToFocusedOptionOnUpdate && this.focused && this.menu) {\n\t\t\t\tthis._scrollToFocusedOptionOnUpdate = false;\n\t\t\t\tvar focusedDOM = Object(external_this_ReactDOM_[\"findDOMNode\"])(this.focused);\n\t\t\t\tvar menuDOM = Object(external_this_ReactDOM_[\"findDOMNode\"])(this.menu);\n\t\t\t\tvar focusedRect = focusedDOM.getBoundingClientRect();\n\t\t\t\tvar menuRect = menuDOM.getBoundingClientRect();\n\t\t\t\tif (focusedRect.bottom > menuRect.bottom) {\n\t\t\t\t\tmenuDOM.scrollTop = focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;\n\t\t\t\t} else if (focusedRect.top < menuRect.top) {\n\t\t\t\t\tmenuDOM.scrollTop = focusedDOM.offsetTop;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.props.scrollMenuIntoView && this.menuContainer) {\n\t\t\t\tvar menuContainerRect = this.menuContainer.getBoundingClientRect();\n\t\t\t\tif (window.innerHeight < menuContainerRect.bottom + this.props.menuBuffer) {\n\t\t\t\t\twindow.scrollBy(0, menuContainerRect.bottom + this.props.menuBuffer - window.innerHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (prevProps.disabled !== this.props.disabled) {\n\t\t\t\tthis.setState({ isFocused: false }); // eslint-disable-line react/no-did-update-set-state\n\t\t\t\tthis.closeMenu();\n\t\t\t}\n\t\t\tif (prevState.isOpen !== this.state.isOpen) {\n\t\t\t\tthis.toggleTouchOutsideEvent(this.state.isOpen);\n\t\t\t\tvar handler = this.state.isOpen ? this.props.onOpen : this.props.onClose;\n\t\t\t\thandler && handler();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis.toggleTouchOutsideEvent(false);\n\t\t}\n\t}, {\n\t\tkey: 'toggleTouchOutsideEvent',\n\t\tvalue: function toggleTouchOutsideEvent(enabled) {\n\t\t\tvar eventTogglerName = enabled ? document.addEventListener ? 'addEventListener' : 'attachEvent' : document.removeEventListener ? 'removeEventListener' : 'detachEvent';\n\t\t\tvar pref = document.addEventListener ? '' : 'on';\n\n\t\t\tdocument[eventTogglerName](pref + 'touchstart', this.handleTouchOutside);\n\t\t\tdocument[eventTogglerName](pref + 'mousedown', this.handleTouchOutside);\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchOutside',\n\t\tvalue: function handleTouchOutside(event) {\n\t\t\t// handle touch outside on ios to dismiss menu\n\t\t\tif (this.wrapper && !this.wrapper.contains(event.target)) {\n\t\t\t\tthis.closeMenu();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tif (!this.input) return;\n\t\t\tthis.input.focus();\n\t\t}\n\t}, {\n\t\tkey: 'blurInput',\n\t\tvalue: function blurInput() {\n\t\t\tif (!this.input) return;\n\t\t\tthis.input.blur();\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchMove',\n\t\tvalue: function handleTouchMove() {\n\t\t\t// Set a flag that the view is being dragged\n\t\t\tthis.dragging = true;\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchStart',\n\t\tvalue: function handleTouchStart() {\n\t\t\t// Set a flag that the view is not being dragged\n\t\t\tthis.dragging = false;\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchEnd',\n\t\tvalue: function handleTouchEnd(event) {\n\t\t\t// Check if the view is being dragged, In this case\n\t\t\t// we don't want to fire the click event (because the user only wants to scroll)\n\t\t\tif (this.dragging) return;\n\n\t\t\t// Fire the mouse events\n\t\t\tthis.handleMouseDown(event);\n\t\t}\n\t}, {\n\t\tkey: 'handleTouchEndClearValue',\n\t\tvalue: function handleTouchEndClearValue(event) {\n\t\t\t// Check if the view is being dragged, In this case\n\t\t\t// we don't want to fire the click event (because the user only wants to scroll)\n\t\t\tif (this.dragging) return;\n\n\t\t\t// Clear the value\n\t\t\tthis.clearValue(event);\n\t\t}\n\t}, {\n\t\tkey: 'handleMouseDown',\n\t\tvalue: function handleMouseDown(event) {\n\t\t\t// if the event was triggered by a mousedown and not the primary\n\t\t\t// button, or if the component is disabled, ignore it.\n\t\t\tif (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (event.target.tagName === 'INPUT') {\n\t\t\t\tif (!this.state.isFocused) {\n\t\t\t\t\tthis._openAfterFocus = this.props.openOnClick;\n\t\t\t\t\tthis.focus();\n\t\t\t\t} else if (!this.state.isOpen) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisOpen: true,\n\t\t\t\t\t\tisPseudoFocused: false,\n\t\t\t\t\t\tfocusedOption: null\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// prevent default event handlers\n\t\t\tevent.preventDefault();\n\n\t\t\t// for the non-searchable select, toggle the menu\n\t\t\tif (!this.props.searchable) {\n\t\t\t\t// This code means that if a select is searchable, onClick the options menu will not appear, only on subsequent click will it open.\n\t\t\t\tthis.focus();\n\t\t\t\treturn this.setState({\n\t\t\t\t\tisOpen: !this.state.isOpen,\n\t\t\t\t\tfocusedOption: null\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.state.isFocused) {\n\t\t\t\t// On iOS, we can get into a state where we think the input is focused but it isn't really,\n\t\t\t\t// since iOS ignores programmatic calls to input.focus() that weren't triggered by a click event.\n\t\t\t\t// Call focus() again here to be safe.\n\t\t\t\tthis.focus();\n\n\t\t\t\tvar input = this.input;\n\t\t\t\tvar toOpen = true;\n\n\t\t\t\tif (typeof input.getInput === 'function') {\n\t\t\t\t\t// Get the actual DOM input if the ref is an <AutosizeInput /> component\n\t\t\t\t\tinput = input.getInput();\n\t\t\t\t}\n\n\t\t\t\t// clears the value so that the cursor will be at the end of input when the component re-renders\n\t\t\t\tinput.value = '';\n\n\t\t\t\tif (this._focusAfterClear) {\n\t\t\t\t\ttoOpen = false;\n\t\t\t\t\tthis._focusAfterClear = false;\n\t\t\t\t}\n\n\t\t\t\t// if the input is focused, ensure the menu is open\n\t\t\t\tthis.setState({\n\t\t\t\t\tisOpen: toOpen,\n\t\t\t\t\tisPseudoFocused: false,\n\t\t\t\t\tfocusedOption: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// otherwise, focus the input and open the menu\n\t\t\t\tthis._openAfterFocus = this.props.openOnClick;\n\t\t\t\tthis.focus();\n\t\t\t\tthis.setState({ focusedOption: null });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'handleMouseDownOnArrow',\n\t\tvalue: function handleMouseDownOnArrow(event) {\n\t\t\t// if the event was triggered by a mousedown and not the primary\n\t\t\t// button, or if the component is disabled, ignore it.\n\t\t\tif (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.state.isOpen) {\n\t\t\t\t// prevent default event handlers\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// close the menu\n\t\t\t\tthis.closeMenu();\n\t\t\t} else {\n\t\t\t\t// If the menu isn't open, let the event bubble to the main handleMouseDown\n\t\t\t\tthis.setState({\n\t\t\t\t\tisOpen: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'handleMouseDownOnMenu',\n\t\tvalue: function handleMouseDownOnMenu(event) {\n\t\t\t// if the event was triggered by a mousedown and not the primary\n\t\t\t// button, or if the component is disabled, ignore it.\n\t\t\tif (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\n\t\t\tthis._openAfterFocus = true;\n\t\t\tthis.focus();\n\t\t}\n\t}, {\n\t\tkey: 'closeMenu',\n\t\tvalue: function closeMenu() {\n\t\t\tif (this.props.onCloseResetsInput) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputValue: this.handleInputValueChange(''),\n\t\t\t\t\tisOpen: false,\n\t\t\t\t\tisPseudoFocused: this.state.isFocused && !this.props.multi\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisOpen: false,\n\t\t\t\t\tisPseudoFocused: this.state.isFocused && !this.props.multi\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.hasScrolledToOption = false;\n\t\t}\n\t}, {\n\t\tkey: 'handleInputFocus',\n\t\tvalue: function handleInputFocus(event) {\n\t\t\tif (this.props.disabled) return;\n\n\t\t\tvar toOpen = this.state.isOpen || this._openAfterFocus || this.props.openOnFocus;\n\t\t\ttoOpen = this._focusAfterClear ? false : toOpen; //if focus happens after clear values, don't open dropdown yet.\n\n\t\t\tif (this.props.onFocus) {\n\t\t\t\tthis.props.onFocus(event);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tisFocused: true,\n\t\t\t\tisOpen: !!toOpen\n\t\t\t});\n\n\t\t\tthis._focusAfterClear = false;\n\t\t\tthis._openAfterFocus = false;\n\t\t}\n\t}, {\n\t\tkey: 'handleInputBlur',\n\t\tvalue: function handleInputBlur(event) {\n\t\t\t// The check for menu.contains(activeElement) is necessary to prevent IE11's scrollbar from closing the menu in certain contexts.\n\t\t\tif (this.menu && (this.menu === document.activeElement || this.menu.contains(document.activeElement))) {\n\t\t\t\tthis.focus();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.props.onBlur) {\n\t\t\t\tthis.props.onBlur(event);\n\t\t\t}\n\t\t\tvar onBlurredState = {\n\t\t\t\tisFocused: false,\n\t\t\t\tisOpen: false,\n\t\t\t\tisPseudoFocused: false\n\t\t\t};\n\t\t\tif (this.props.onBlurResetsInput) {\n\t\t\t\tonBlurredState.inputValue = this.handleInputValueChange('');\n\t\t\t}\n\t\t\tthis.setState(onBlurredState);\n\t\t}\n\t}, {\n\t\tkey: 'handleInputChange',\n\t\tvalue: function handleInputChange(event) {\n\t\t\tvar newInputValue = event.target.value;\n\n\t\t\tif (this.state.inputValue !== event.target.value) {\n\t\t\t\tnewInputValue = this.handleInputValueChange(newInputValue);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tinputValue: newInputValue,\n\t\t\t\tisOpen: true,\n\t\t\t\tisPseudoFocused: false\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'setInputValue',\n\t\tvalue: function setInputValue(newValue) {\n\t\t\tif (this.props.onInputChange) {\n\t\t\t\tvar nextState = this.props.onInputChange(newValue);\n\t\t\t\tif (nextState != null && (typeof nextState === 'undefined' ? 'undefined' : _typeof(nextState)) !== 'object') {\n\t\t\t\t\tnewValue = '' + nextState;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tinputValue: newValue\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'handleInputValueChange',\n\t\tvalue: function handleInputValueChange(newValue) {\n\t\t\tif (this.props.onInputChange) {\n\t\t\t\tvar nextState = this.props.onInputChange(newValue);\n\t\t\t\t// Note: != used deliberately here to catch undefined and null\n\t\t\t\tif (nextState != null && (typeof nextState === 'undefined' ? 'undefined' : _typeof(nextState)) !== 'object') {\n\t\t\t\t\tnewValue = '' + nextState;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newValue;\n\t\t}\n\t}, {\n\t\tkey: 'handleKeyDown',\n\t\tvalue: function handleKeyDown(event) {\n\t\t\tif (this.props.disabled) return;\n\n\t\t\tif (typeof this.props.onInputKeyDown === 'function') {\n\t\t\t\tthis.props.onInputKeyDown(event);\n\t\t\t\tif (event.defaultPrevented) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tswitch (event.keyCode) {\n\t\t\t\tcase 8:\n\t\t\t\t\t// backspace\n\t\t\t\t\tif (!this.state.inputValue && this.props.backspaceRemoves) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tthis.popValue();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\t// tab\n\t\t\t\t\tif (event.shiftKey || !this.state.isOpen || !this.props.tabSelectsValue) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.selectFocusedOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13:\n\t\t\t\t\t// enter\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif (this.state.isOpen) {\n\t\t\t\t\t\tthis.selectFocusedOption();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.focusNextOption();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 27:\n\t\t\t\t\t// escape\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (this.state.isOpen) {\n\t\t\t\t\t\tthis.closeMenu();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t} else if (this.props.clearable && this.props.escapeClearsValue) {\n\t\t\t\t\t\tthis.clearValue(event);\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 32:\n\t\t\t\t\t// space\n\t\t\t\t\tif (this.props.searchable) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (!this.state.isOpen) {\n\t\t\t\t\t\tthis.focusNextOption();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tthis.selectFocusedOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 38:\n\t\t\t\t\t// up\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.focusPreviousOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 40:\n\t\t\t\t\t// down\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.focusNextOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 33:\n\t\t\t\t\t// page up\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.focusPageUpOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 34:\n\t\t\t\t\t// page down\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.focusPageDownOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 35:\n\t\t\t\t\t// end key\n\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.focusEndOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 36:\n\t\t\t\t\t// home key\n\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.focusStartOption();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 46:\n\t\t\t\t\t// delete\n\t\t\t\t\tif (!this.state.inputValue && this.props.deleteRemoves) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tthis.popValue();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'handleValueClick',\n\t\tvalue: function handleValueClick(option, event) {\n\t\t\tif (!this.props.onValueClick) return;\n\t\t\tthis.props.onValueClick(option, event);\n\t\t}\n\t}, {\n\t\tkey: 'handleMenuScroll',\n\t\tvalue: function handleMenuScroll(event) {\n\t\t\tif (!this.props.onMenuScrollToBottom) return;\n\t\t\tvar target = event.target;\n\n\t\t\tif (target.scrollHeight > target.offsetHeight && target.scrollHeight - target.offsetHeight - target.scrollTop <= 0) {\n\t\t\t\tthis.props.onMenuScrollToBottom();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getOptionLabel',\n\t\tvalue: function getOptionLabel(op) {\n\t\t\treturn op[this.props.labelKey];\n\t\t}\n\n\t\t/**\n   * Turns a value into an array from the given options\n   * @param {String|Number|Array} value\t\t- the value of the select input\n   * @param {Object}\t\tnextProps\t- optionally specify the nextProps so the returned array uses the latest configuration\n   * @returns\t{Array}\tthe value of the select represented in an array\n   */\n\n\t}, {\n\t\tkey: 'getValueArray',\n\t\tvalue: function getValueArray(value) {\n\t\t\tvar nextProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\t\t/** support optionally passing in the `nextProps` so `componentWillReceiveProps` updates will function as expected */\n\t\t\tvar props = (typeof nextProps === 'undefined' ? 'undefined' : _typeof(nextProps)) === 'object' ? nextProps : this.props;\n\t\t\tif (props.multi) {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\tvalue = value.split(props.delimiter);\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\tif (value === null || value === undefined) return [];\n\t\t\t\t\tvalue = [value];\n\t\t\t\t}\n\t\t\t\treturn value.map(function (value) {\n\t\t\t\t\treturn expandValue(value, props);\n\t\t\t\t}).filter(function (i) {\n\t\t\t\t\treturn i;\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar expandedValue = expandValue(value, props);\n\t\t\treturn expandedValue ? [expandedValue] : [];\n\t\t}\n\t}, {\n\t\tkey: 'setValue',\n\t\tvalue: function setValue(value) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this.props.autoBlur) {\n\t\t\t\tthis.blurInput();\n\t\t\t}\n\t\t\tif (this.props.required) {\n\t\t\t\tvar required = handleRequired(value, this.props.multi);\n\t\t\t\tthis.setState({ required: required });\n\t\t\t}\n\t\t\tif (this.props.simpleValue && value) {\n\t\t\t\tvalue = this.props.multi ? value.map(function (i) {\n\t\t\t\t\treturn i[_this2.props.valueKey];\n\t\t\t\t}).join(this.props.delimiter) : value[this.props.valueKey];\n\t\t\t}\n\t\t\tif (this.props.onChange) {\n\t\t\t\tthis.props.onChange(value);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'selectValue',\n\t\tvalue: function selectValue(value) {\n\t\t\tvar _this3 = this;\n\n\t\t\t// NOTE: we actually add/set the value in a callback to make sure the\n\t\t\t// input value is empty to avoid styling issues in Chrome\n\t\t\tif (this.props.closeOnSelect) {\n\t\t\t\tthis.hasScrolledToOption = false;\n\t\t\t}\n\t\t\tvar updatedValue = this.props.onSelectResetsInput ? '' : this.state.inputValue;\n\t\t\tif (this.props.multi) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tfocusedIndex: null,\n\t\t\t\t\tinputValue: this.handleInputValueChange(updatedValue),\n\t\t\t\t\tisOpen: !this.props.closeOnSelect\n\t\t\t\t}, function () {\n\t\t\t\t\tvar valueArray = _this3.getValueArray(_this3.props.value);\n\t\t\t\t\tif (valueArray.some(function (i) {\n\t\t\t\t\t\treturn i[_this3.props.valueKey] === value[_this3.props.valueKey];\n\t\t\t\t\t})) {\n\t\t\t\t\t\t_this3.removeValue(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this3.addValue(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputValue: this.handleInputValueChange(updatedValue),\n\t\t\t\t\tisOpen: !this.props.closeOnSelect,\n\t\t\t\t\tisPseudoFocused: this.state.isFocused\n\t\t\t\t}, function () {\n\t\t\t\t\t_this3.setValue(value);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'addValue',\n\t\tvalue: function addValue(value) {\n\t\t\tvar valueArray = this.getValueArray(this.props.value);\n\t\t\tvar visibleOptions = this._visibleOptions.filter(function (val) {\n\t\t\t\treturn !val.disabled;\n\t\t\t});\n\t\t\tvar lastValueIndex = visibleOptions.indexOf(value);\n\t\t\tthis.setValue(valueArray.concat(value));\n\t\t\tif (!this.props.closeOnSelect) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (visibleOptions.length - 1 === lastValueIndex) {\n\t\t\t\t// the last option was selected; focus the second-last one\n\t\t\t\tthis.focusOption(visibleOptions[lastValueIndex - 1]);\n\t\t\t} else if (visibleOptions.length > lastValueIndex) {\n\t\t\t\t// focus the option below the selected one\n\t\t\t\tthis.focusOption(visibleOptions[lastValueIndex + 1]);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'popValue',\n\t\tvalue: function popValue() {\n\t\t\tvar valueArray = this.getValueArray(this.props.value);\n\t\t\tif (!valueArray.length) return;\n\t\t\tif (valueArray[valueArray.length - 1].clearableValue === false) return;\n\t\t\tthis.setValue(this.props.multi ? valueArray.slice(0, valueArray.length - 1) : null);\n\t\t}\n\t}, {\n\t\tkey: 'removeValue',\n\t\tvalue: function removeValue(value) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar valueArray = this.getValueArray(this.props.value);\n\t\t\tthis.setValue(valueArray.filter(function (i) {\n\t\t\t\treturn i[_this4.props.valueKey] !== value[_this4.props.valueKey];\n\t\t\t}));\n\t\t\tthis.focus();\n\t\t}\n\t}, {\n\t\tkey: 'clearValue',\n\t\tvalue: function clearValue(event) {\n\t\t\t// if the event was triggered by a mousedown and not the primary\n\t\t\t// button, ignore it.\n\t\t\tif (event && event.type === 'mousedown' && event.button !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.setValue(this.getResetValue());\n\t\t\tthis.setState({\n\t\t\t\tinputValue: this.handleInputValueChange(''),\n\t\t\t\tisOpen: false\n\t\t\t}, this.focus);\n\n\t\t\tthis._focusAfterClear = true;\n\t\t}\n\t}, {\n\t\tkey: 'getResetValue',\n\t\tvalue: function getResetValue() {\n\t\t\tif (this.props.resetValue !== undefined) {\n\t\t\t\treturn this.props.resetValue;\n\t\t\t} else if (this.props.multi) {\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'focusOption',\n\t\tvalue: function focusOption(option) {\n\t\t\tthis.setState({\n\t\t\t\tfocusedOption: option\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'focusNextOption',\n\t\tvalue: function focusNextOption() {\n\t\t\tthis.focusAdjacentOption('next');\n\t\t}\n\t}, {\n\t\tkey: 'focusPreviousOption',\n\t\tvalue: function focusPreviousOption() {\n\t\t\tthis.focusAdjacentOption('previous');\n\t\t}\n\t}, {\n\t\tkey: 'focusPageUpOption',\n\t\tvalue: function focusPageUpOption() {\n\t\t\tthis.focusAdjacentOption('page_up');\n\t\t}\n\t}, {\n\t\tkey: 'focusPageDownOption',\n\t\tvalue: function focusPageDownOption() {\n\t\t\tthis.focusAdjacentOption('page_down');\n\t\t}\n\t}, {\n\t\tkey: 'focusStartOption',\n\t\tvalue: function focusStartOption() {\n\t\t\tthis.focusAdjacentOption('start');\n\t\t}\n\t}, {\n\t\tkey: 'focusEndOption',\n\t\tvalue: function focusEndOption() {\n\t\t\tthis.focusAdjacentOption('end');\n\t\t}\n\t}, {\n\t\tkey: 'focusAdjacentOption',\n\t\tvalue: function focusAdjacentOption(dir) {\n\t\t\tvar options = this._visibleOptions.map(function (option, index) {\n\t\t\t\treturn { option: option, index: index };\n\t\t\t}).filter(function (option) {\n\t\t\t\treturn !option.option.disabled;\n\t\t\t});\n\t\t\tthis._scrollToFocusedOptionOnUpdate = true;\n\t\t\tif (!this.state.isOpen) {\n\t\t\t\tvar newState = {\n\t\t\t\t\tfocusedOption: this._focusedOption || (options.length ? options[dir === 'next' ? 0 : options.length - 1].option : null),\n\t\t\t\t\tisOpen: true\n\t\t\t\t};\n\t\t\t\tif (this.props.onSelectResetsInput) {\n\t\t\t\t\tnewState.inputValue = '';\n\t\t\t\t}\n\t\t\t\tthis.setState(newState);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!options.length) return;\n\t\t\tvar focusedIndex = -1;\n\t\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\t\tif (this._focusedOption === options[i].option) {\n\t\t\t\t\tfocusedIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dir === 'next' && focusedIndex !== -1) {\n\t\t\t\tfocusedIndex = (focusedIndex + 1) % options.length;\n\t\t\t} else if (dir === 'previous') {\n\t\t\t\tif (focusedIndex > 0) {\n\t\t\t\t\tfocusedIndex = focusedIndex - 1;\n\t\t\t\t} else {\n\t\t\t\t\tfocusedIndex = options.length - 1;\n\t\t\t\t}\n\t\t\t} else if (dir === 'start') {\n\t\t\t\tfocusedIndex = 0;\n\t\t\t} else if (dir === 'end') {\n\t\t\t\tfocusedIndex = options.length - 1;\n\t\t\t} else if (dir === 'page_up') {\n\t\t\t\tvar potentialIndex = focusedIndex - this.props.pageSize;\n\t\t\t\tif (potentialIndex < 0) {\n\t\t\t\t\tfocusedIndex = 0;\n\t\t\t\t} else {\n\t\t\t\t\tfocusedIndex = potentialIndex;\n\t\t\t\t}\n\t\t\t} else if (dir === 'page_down') {\n\t\t\t\tvar _potentialIndex = focusedIndex + this.props.pageSize;\n\t\t\t\tif (_potentialIndex > options.length - 1) {\n\t\t\t\t\tfocusedIndex = options.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tfocusedIndex = _potentialIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (focusedIndex === -1) {\n\t\t\t\tfocusedIndex = 0;\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tfocusedIndex: options[focusedIndex].index,\n\t\t\t\tfocusedOption: options[focusedIndex].option\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'getFocusedOption',\n\t\tvalue: function getFocusedOption() {\n\t\t\treturn this._focusedOption;\n\t\t}\n\t}, {\n\t\tkey: 'selectFocusedOption',\n\t\tvalue: function selectFocusedOption() {\n\t\t\tif (this._focusedOption) {\n\t\t\t\treturn this.selectValue(this._focusedOption);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'renderLoading',\n\t\tvalue: function renderLoading() {\n\t\t\tif (!this.props.isLoading) return;\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'span',\n\t\t\t\t{ className: 'Select-loading-zone', 'aria-hidden': 'true' },\n\t\t\t\texternal_this_React_default.a.createElement('span', { className: 'Select-loading' })\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'renderValue',\n\t\tvalue: function renderValue(valueArray, isOpen) {\n\t\t\tvar _this5 = this;\n\n\t\t\tvar renderLabel = this.props.valueRenderer || this.getOptionLabel;\n\t\t\tvar ValueComponent = this.props.valueComponent;\n\t\t\tif (!valueArray.length) {\n\t\t\t\tvar showPlaceholder = shouldShowPlaceholder(this.state, this.props, isOpen);\n\t\t\t\treturn showPlaceholder ? external_this_React_default.a.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'Select-placeholder' },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t) : null;\n\t\t\t}\n\t\t\tvar onClick = this.props.onValueClick ? this.handleValueClick : null;\n\t\t\tif (this.props.multi) {\n\t\t\t\treturn valueArray.map(function (value, i) {\n\t\t\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t\t\tValueComponent,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisabled: _this5.props.disabled || value.clearableValue === false,\n\t\t\t\t\t\t\tid: _this5._instancePrefix + '-value-' + i,\n\t\t\t\t\t\t\tinstancePrefix: _this5._instancePrefix,\n\t\t\t\t\t\t\tkey: 'value-' + i + '-' + value[_this5.props.valueKey],\n\t\t\t\t\t\t\tonClick: onClick,\n\t\t\t\t\t\t\tonRemove: _this5.removeValue,\n\t\t\t\t\t\t\tplaceholder: _this5.props.placeholder,\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\tvalues: valueArray\n\t\t\t\t\t\t},\n\t\t\t\t\t\trenderLabel(value, i),\n\t\t\t\t\t\texternal_this_React_default.a.createElement(\n\t\t\t\t\t\t\t'span',\n\t\t\t\t\t\t\t{ className: 'Select-aria-only' },\n\t\t\t\t\t\t\t'\\xA0'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else if (shouldShowValue(this.state, this.props)) {\n\t\t\t\tif (isOpen) onClick = null;\n\t\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t\tValueComponent,\n\t\t\t\t\t{\n\t\t\t\t\t\tdisabled: this.props.disabled,\n\t\t\t\t\t\tid: this._instancePrefix + '-value-item',\n\t\t\t\t\t\tinstancePrefix: this._instancePrefix,\n\t\t\t\t\t\tonClick: onClick,\n\t\t\t\t\t\tplaceholder: this.props.placeholder,\n\t\t\t\t\t\tvalue: valueArray[0]\n\t\t\t\t\t},\n\t\t\t\t\trenderLabel(valueArray[0])\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'renderInput',\n\t\tvalue: function renderInput(valueArray, focusedOptionIndex) {\n\t\t\tvar _classNames,\n\t\t\t    _this6 = this;\n\n\t\t\tvar className = classnames_default()('Select-input', this.props.inputProps.className);\n\t\t\tvar isOpen = this.state.isOpen;\n\n\t\t\tvar ariaOwns = classnames_default()((_classNames = {}, defineProperty(_classNames, this._instancePrefix + '-list', isOpen), defineProperty(_classNames, this._instancePrefix + '-backspace-remove-message', this.props.multi && !this.props.disabled && this.state.isFocused && !this.state.inputValue), _classNames));\n\n\t\t\tvar value = this.state.inputValue;\n\t\t\tif (value && !this.props.onSelectResetsInput && !this.state.isFocused) {\n\t\t\t\t// it hides input value when it is not focused and was not reset on select\n\t\t\t\tvalue = '';\n\t\t\t}\n\n\t\t\tvar inputProps = _extends({}, this.props.inputProps, {\n\t\t\t\t'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',\n\t\t\t\t'aria-describedby': this.props['aria-describedby'],\n\t\t\t\t'aria-expanded': '' + isOpen,\n\t\t\t\t'aria-haspopup': '' + isOpen,\n\t\t\t\t'aria-label': this.props['aria-label'],\n\t\t\t\t'aria-labelledby': this.props['aria-labelledby'],\n\t\t\t\t'aria-owns': ariaOwns,\n\t\t\t\tonBlur: this.handleInputBlur,\n\t\t\t\tonChange: this.handleInputChange,\n\t\t\t\tonFocus: this.handleInputFocus,\n\t\t\t\tref: function ref(_ref) {\n\t\t\t\t\treturn _this6.input = _ref;\n\t\t\t\t},\n\t\t\t\trole: 'combobox',\n\t\t\t\trequired: this.state.required,\n\t\t\t\ttabIndex: this.props.tabIndex,\n\t\t\t\tvalue: value\n\t\t\t});\n\n\t\t\tif (this.props.inputRenderer) {\n\t\t\t\treturn this.props.inputRenderer(inputProps);\n\t\t\t}\n\n\t\t\tif (this.props.disabled || !this.props.searchable) {\n\t\t\t\tvar divProps = objectWithoutProperties(this.props.inputProps, []);\n\n\n\t\t\t\tvar _ariaOwns = classnames_default()(defineProperty({}, this._instancePrefix + '-list', isOpen));\n\t\t\t\treturn external_this_React_default.a.createElement('div', _extends({}, divProps, {\n\t\t\t\t\t'aria-expanded': isOpen,\n\t\t\t\t\t'aria-owns': _ariaOwns,\n\t\t\t\t\t'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',\n\t\t\t\t\t'aria-disabled': '' + this.props.disabled,\n\t\t\t\t\t'aria-label': this.props['aria-label'],\n\t\t\t\t\t'aria-labelledby': this.props['aria-labelledby'],\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tonBlur: this.handleInputBlur,\n\t\t\t\t\tonFocus: this.handleInputFocus,\n\t\t\t\t\tref: function ref(_ref2) {\n\t\t\t\t\t\treturn _this6.input = _ref2;\n\t\t\t\t\t},\n\t\t\t\t\trole: 'combobox',\n\t\t\t\t\tstyle: { border: 0, width: 1, display: 'inline-block' },\n\t\t\t\t\ttabIndex: this.props.tabIndex || 0\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tif (this.props.autosize) {\n\t\t\t\treturn external_this_React_default.a.createElement(AutosizeInput_default.a, _extends({ id: this.props.id }, inputProps, { className: className, minWidth: '5' }));\n\t\t\t}\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: className, key: 'input-wrap', style: { display: 'inline-block' } },\n\t\t\t\texternal_this_React_default.a.createElement('input', _extends({ id: this.props.id }, inputProps))\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'renderClear',\n\t\tvalue: function renderClear() {\n\t\t\tvar valueArray = this.getValueArray(this.props.value);\n\t\t\tif (!this.props.clearable || !valueArray.length || this.props.disabled || this.props.isLoading) return;\n\t\t\tvar ariaLabel = this.props.multi ? this.props.clearAllText : this.props.clearValueText;\n\t\t\tvar clear = this.props.clearRenderer();\n\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'span',\n\t\t\t\t{\n\t\t\t\t\t'aria-label': ariaLabel,\n\t\t\t\t\tclassName: 'Select-clear-zone',\n\t\t\t\t\tonMouseDown: this.clearValue,\n\t\t\t\t\tonTouchEnd: this.handleTouchEndClearValue,\n\t\t\t\t\tonTouchMove: this.handleTouchMove,\n\t\t\t\t\tonTouchStart: this.handleTouchStart,\n\t\t\t\t\ttitle: ariaLabel\n\t\t\t\t},\n\t\t\t\tclear\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'renderArrow',\n\t\tvalue: function renderArrow() {\n\t\t\tif (!this.props.arrowRenderer) return;\n\n\t\t\tvar onMouseDown = this.handleMouseDownOnArrow;\n\t\t\tvar isOpen = this.state.isOpen;\n\t\t\tvar arrow = this.props.arrowRenderer({ onMouseDown: onMouseDown, isOpen: isOpen });\n\n\t\t\tif (!arrow) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'span',\n\t\t\t\t{\n\t\t\t\t\tclassName: 'Select-arrow-zone',\n\t\t\t\t\tonMouseDown: onMouseDown\n\t\t\t\t},\n\t\t\t\tarrow\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'filterOptions',\n\t\tvalue: function filterOptions$$1(excludeOptions) {\n\t\t\tvar filterValue = this.state.inputValue;\n\t\t\tvar options = this.props.options || [];\n\t\t\tif (this.props.filterOptions) {\n\t\t\t\t// Maintain backwards compatibility with boolean attribute\n\t\t\t\tvar filterOptions$$1 = typeof this.props.filterOptions === 'function' ? this.props.filterOptions : filterOptions;\n\n\t\t\t\treturn filterOptions$$1(options, filterValue, excludeOptions, {\n\t\t\t\t\tfilterOption: this.props.filterOption,\n\t\t\t\t\tignoreAccents: this.props.ignoreAccents,\n\t\t\t\t\tignoreCase: this.props.ignoreCase,\n\t\t\t\t\tlabelKey: this.props.labelKey,\n\t\t\t\t\tmatchPos: this.props.matchPos,\n\t\t\t\t\tmatchProp: this.props.matchProp,\n\t\t\t\t\ttrimFilter: this.props.trimFilter,\n\t\t\t\t\tvalueKey: this.props.valueKey\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn options;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'onOptionRef',\n\t\tvalue: function onOptionRef(ref, isFocused) {\n\t\t\tif (isFocused) {\n\t\t\t\tthis.focused = ref;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'renderMenu',\n\t\tvalue: function renderMenu(options, valueArray, focusedOption) {\n\t\t\tif (options && options.length) {\n\t\t\t\treturn this.props.menuRenderer({\n\t\t\t\t\tfocusedOption: focusedOption,\n\t\t\t\t\tfocusOption: this.focusOption,\n\t\t\t\t\tinputValue: this.state.inputValue,\n\t\t\t\t\tinstancePrefix: this._instancePrefix,\n\t\t\t\t\tlabelKey: this.props.labelKey,\n\t\t\t\t\tonFocus: this.focusOption,\n\t\t\t\t\tonOptionRef: this.onOptionRef,\n\t\t\t\t\tonSelect: this.selectValue,\n\t\t\t\t\toptionClassName: this.props.optionClassName,\n\t\t\t\t\toptionComponent: this.props.optionComponent,\n\t\t\t\t\toptionRenderer: this.props.optionRenderer || this.getOptionLabel,\n\t\t\t\t\toptions: options,\n\t\t\t\t\tremoveValue: this.removeValue,\n\t\t\t\t\tselectValue: this.selectValue,\n\t\t\t\t\tvalueArray: valueArray,\n\t\t\t\t\tvalueKey: this.props.valueKey\n\t\t\t\t});\n\t\t\t} else if (this.props.noResultsText) {\n\t\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'Select-noresults' },\n\t\t\t\t\tthis.props.noResultsText\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'renderHiddenField',\n\t\tvalue: function renderHiddenField(valueArray) {\n\t\t\tvar _this7 = this;\n\n\t\t\tif (!this.props.name) return;\n\t\t\tif (this.props.joinValues) {\n\t\t\t\tvar value = valueArray.map(function (i) {\n\t\t\t\t\treturn stringifyValue(i[_this7.props.valueKey]);\n\t\t\t\t}).join(this.props.delimiter);\n\t\t\t\treturn external_this_React_default.a.createElement('input', {\n\t\t\t\t\tdisabled: this.props.disabled,\n\t\t\t\t\tname: this.props.name,\n\t\t\t\t\tref: function ref(_ref3) {\n\t\t\t\t\t\treturn _this7.value = _ref3;\n\t\t\t\t\t},\n\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn valueArray.map(function (item, index) {\n\t\t\t\treturn external_this_React_default.a.createElement('input', {\n\t\t\t\t\tdisabled: _this7.props.disabled,\n\t\t\t\t\tkey: 'hidden.' + index,\n\t\t\t\t\tname: _this7.props.name,\n\t\t\t\t\tref: 'value' + index,\n\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\tvalue: stringifyValue(item[_this7.props.valueKey])\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'getFocusableOptionIndex',\n\t\tvalue: function getFocusableOptionIndex(selectedOption) {\n\t\t\tvar options = this._visibleOptions;\n\t\t\tif (!options.length) return null;\n\n\t\t\tvar valueKey = this.props.valueKey;\n\t\t\tvar focusedOption = this.state.focusedOption || selectedOption;\n\t\t\tif (focusedOption && !focusedOption.disabled) {\n\t\t\t\tvar focusedOptionIndex = -1;\n\t\t\t\toptions.some(function (option, index) {\n\t\t\t\t\tvar isOptionEqual = option[valueKey] === focusedOption[valueKey];\n\t\t\t\t\tif (isOptionEqual) {\n\t\t\t\t\t\tfocusedOptionIndex = index;\n\t\t\t\t\t}\n\t\t\t\t\treturn isOptionEqual;\n\t\t\t\t});\n\t\t\t\tif (focusedOptionIndex !== -1) {\n\t\t\t\t\treturn focusedOptionIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\t\tif (!options[i].disabled) return i;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'renderOuter',\n\t\tvalue: function renderOuter(options, valueArray, focusedOption) {\n\t\t\tvar _this8 = this;\n\n\t\t\tvar menu = this.renderMenu(options, valueArray, focusedOption);\n\t\t\tif (!menu) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ ref: function ref(_ref5) {\n\t\t\t\t\t\treturn _this8.menuContainer = _ref5;\n\t\t\t\t\t}, className: 'Select-menu-outer', style: this.props.menuContainerStyle },\n\t\t\t\texternal_this_React_default.a.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'Select-menu',\n\t\t\t\t\t\tid: this._instancePrefix + '-list',\n\t\t\t\t\t\tonMouseDown: this.handleMouseDownOnMenu,\n\t\t\t\t\t\tonScroll: this.handleMenuScroll,\n\t\t\t\t\t\tref: function ref(_ref4) {\n\t\t\t\t\t\t\treturn _this8.menu = _ref4;\n\t\t\t\t\t\t},\n\t\t\t\t\t\trole: 'listbox',\n\t\t\t\t\t\tstyle: this.props.menuStyle,\n\t\t\t\t\t\ttabIndex: -1\n\t\t\t\t\t},\n\t\t\t\t\tmenu\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this9 = this;\n\n\t\t\tvar valueArray = this.getValueArray(this.props.value);\n\t\t\tvar options = this._visibleOptions = this.filterOptions(this.props.multi && this.props.removeSelected ? valueArray : null);\n\t\t\tvar isOpen = this.state.isOpen;\n\t\t\tif (this.props.multi && !options.length && valueArray.length && !this.state.inputValue) isOpen = false;\n\t\t\tvar focusedOptionIndex = this.getFocusableOptionIndex(valueArray[0]);\n\n\t\t\tvar focusedOption = null;\n\t\t\tif (focusedOptionIndex !== null) {\n\t\t\t\tfocusedOption = this._focusedOption = options[focusedOptionIndex];\n\t\t\t} else {\n\t\t\t\tfocusedOption = this._focusedOption = null;\n\t\t\t}\n\t\t\tvar className = classnames_default()('Select', this.props.className, {\n\t\t\t\t'has-value': valueArray.length,\n\t\t\t\t'is-clearable': this.props.clearable,\n\t\t\t\t'is-disabled': this.props.disabled,\n\t\t\t\t'is-focused': this.state.isFocused,\n\t\t\t\t'is-loading': this.props.isLoading,\n\t\t\t\t'is-open': isOpen,\n\t\t\t\t'is-pseudo-focused': this.state.isPseudoFocused,\n\t\t\t\t'is-searchable': this.props.searchable,\n\t\t\t\t'Select--multi': this.props.multi,\n\t\t\t\t'Select--rtl': this.props.rtl,\n\t\t\t\t'Select--single': !this.props.multi\n\t\t\t});\n\n\t\t\tvar removeMessage = null;\n\t\t\tif (this.props.multi && !this.props.disabled && valueArray.length && !this.state.inputValue && this.state.isFocused && this.props.backspaceRemoves) {\n\t\t\t\tremoveMessage = external_this_React_default.a.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\t{ id: this._instancePrefix + '-backspace-remove-message', className: 'Select-aria-only', 'aria-live': 'assertive' },\n\t\t\t\t\tthis.props.backspaceToRemoveMessage.replace('{label}', valueArray[valueArray.length - 1][this.props.labelKey])\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ ref: function ref(_ref7) {\n\t\t\t\t\t\treturn _this9.wrapper = _ref7;\n\t\t\t\t\t},\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tstyle: this.props.wrapperStyle },\n\t\t\t\tthis.renderHiddenField(valueArray),\n\t\t\t\texternal_this_React_default.a.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: function ref(_ref6) {\n\t\t\t\t\t\t\treturn _this9.control = _ref6;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclassName: 'Select-control',\n\t\t\t\t\t\tonKeyDown: this.handleKeyDown,\n\t\t\t\t\t\tonMouseDown: this.handleMouseDown,\n\t\t\t\t\t\tonTouchEnd: this.handleTouchEnd,\n\t\t\t\t\t\tonTouchMove: this.handleTouchMove,\n\t\t\t\t\t\tonTouchStart: this.handleTouchStart,\n\t\t\t\t\t\tstyle: this.props.style\n\t\t\t\t\t},\n\t\t\t\t\texternal_this_React_default.a.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\t{ className: 'Select-multi-value-wrapper', id: this._instancePrefix + '-value' },\n\t\t\t\t\t\tthis.renderValue(valueArray, isOpen),\n\t\t\t\t\t\tthis.renderInput(valueArray, focusedOptionIndex)\n\t\t\t\t\t),\n\t\t\t\t\tremoveMessage,\n\t\t\t\t\tthis.renderLoading(),\n\t\t\t\t\tthis.renderClear(),\n\t\t\t\t\tthis.renderArrow()\n\t\t\t\t),\n\t\t\t\tisOpen ? this.renderOuter(options, valueArray, focusedOption) : null\n\t\t\t);\n\t\t}\n\t}]);\n\treturn Select;\n}(external_this_React_default.a.Component);\n\nSelect$1.propTypes = {\n\t'aria-describedby': prop_types_default.a.string, // html id(s) of element(s) that should be used to describe this input (for assistive tech)\n\t'aria-label': prop_types_default.a.string, // aria label (for assistive tech)\n\t'aria-labelledby': prop_types_default.a.string, // html id of an element that should be used as the label (for assistive tech)\n\tarrowRenderer: prop_types_default.a.func, // create the drop-down caret element\n\tautoBlur: prop_types_default.a.bool, // automatically blur the component when an option is selected\n\tautoFocus: prop_types_default.a.bool, // autofocus the component on mount\n\tautofocus: prop_types_default.a.bool, // deprecated; use autoFocus instead\n\tautosize: prop_types_default.a.bool, // whether to enable autosizing or not\n\tbackspaceRemoves: prop_types_default.a.bool, // whether backspace removes an item if there is no text input\n\tbackspaceToRemoveMessage: prop_types_default.a.string, // message to use for screenreaders to press backspace to remove the current item - {label} is replaced with the item label\n\tclassName: prop_types_default.a.string, // className for the outer element\n\tclearAllText: stringOrNode, // title for the \"clear\" control when multi: true\n\tclearRenderer: prop_types_default.a.func, // create clearable x element\n\tclearValueText: stringOrNode, // title for the \"clear\" control\n\tclearable: prop_types_default.a.bool, // should it be possible to reset value\n\tcloseOnSelect: prop_types_default.a.bool, // whether to close the menu when a value is selected\n\tdeleteRemoves: prop_types_default.a.bool, // whether delete removes an item if there is no text input\n\tdelimiter: prop_types_default.a.string, // delimiter to use to join multiple values for the hidden field value\n\tdisabled: prop_types_default.a.bool, // whether the Select is disabled or not\n\tescapeClearsValue: prop_types_default.a.bool, // whether escape clears the value when the menu is closed\n\tfilterOption: prop_types_default.a.func, // method to filter a single option (option, filterString)\n\tfilterOptions: prop_types_default.a.any, // boolean to enable default filtering or function to filter the options array ([options], filterString, [values])\n\tid: prop_types_default.a.string, // html id to set on the input element for accessibility or tests\n\tignoreAccents: prop_types_default.a.bool, // whether to strip diacritics when filtering\n\tignoreCase: prop_types_default.a.bool, // whether to perform case-insensitive filtering\n\tinputProps: prop_types_default.a.object, // custom attributes for the Input\n\tinputRenderer: prop_types_default.a.func, // returns a custom input component\n\tinstanceId: prop_types_default.a.string, // set the components instanceId\n\tisLoading: prop_types_default.a.bool, // whether the Select is loading externally or not (such as options being loaded)\n\tjoinValues: prop_types_default.a.bool, // joins multiple values into a single form field with the delimiter (legacy mode)\n\tlabelKey: prop_types_default.a.string, // path of the label value in option objects\n\tmatchPos: prop_types_default.a.string, // (any|start) match the start or entire string when filtering\n\tmatchProp: prop_types_default.a.string, // (any|label|value) which option property to filter on\n\tmenuBuffer: prop_types_default.a.number, // optional buffer (in px) between the bottom of the viewport and the bottom of the menu\n\tmenuContainerStyle: prop_types_default.a.object, // optional style to apply to the menu container\n\tmenuRenderer: prop_types_default.a.func, // renders a custom menu with options\n\tmenuStyle: prop_types_default.a.object, // optional style to apply to the menu\n\tmulti: prop_types_default.a.bool, // multi-value input\n\tname: prop_types_default.a.string, // generates a hidden <input /> tag with this field name for html forms\n\tnoResultsText: stringOrNode, // placeholder displayed when there are no matching search results\n\tonBlur: prop_types_default.a.func, // onBlur handler: function (event) {}\n\tonBlurResetsInput: prop_types_default.a.bool, // whether input is cleared on blur\n\tonChange: prop_types_default.a.func, // onChange handler: function (newValue) {}\n\tonClose: prop_types_default.a.func, // fires when the menu is closed\n\tonCloseResetsInput: prop_types_default.a.bool, // whether input is cleared when menu is closed through the arrow\n\tonFocus: prop_types_default.a.func, // onFocus handler: function (event) {}\n\tonInputChange: prop_types_default.a.func, // onInputChange handler: function (inputValue) {}\n\tonInputKeyDown: prop_types_default.a.func, // input keyDown handler: function (event) {}\n\tonMenuScrollToBottom: prop_types_default.a.func, // fires when the menu is scrolled to the bottom; can be used to paginate options\n\tonOpen: prop_types_default.a.func, // fires when the menu is opened\n\tonSelectResetsInput: prop_types_default.a.bool, // whether input is cleared on select (works only for multiselect)\n\tonValueClick: prop_types_default.a.func, // onClick handler for value labels: function (value, event) {}\n\topenOnClick: prop_types_default.a.bool, // boolean to control opening the menu when the control is clicked\n\topenOnFocus: prop_types_default.a.bool, // always open options menu on focus\n\toptionClassName: prop_types_default.a.string, // additional class(es) to apply to the <Option /> elements\n\toptionComponent: prop_types_default.a.func, // option component to render in dropdown\n\toptionRenderer: prop_types_default.a.func, // optionRenderer: function (option) {}\n\toptions: prop_types_default.a.array, // array of options\n\tpageSize: prop_types_default.a.number, // number of entries to page when using page up/down keys\n\tplaceholder: stringOrNode, // field placeholder, displayed when there's no value\n\tremoveSelected: prop_types_default.a.bool, // whether the selected option is removed from the dropdown on multi selects\n\trequired: prop_types_default.a.bool, // applies HTML5 required attribute when needed\n\tresetValue: prop_types_default.a.any, // value to use when you clear the control\n\trtl: prop_types_default.a.bool, // set to true in order to use react-select in right-to-left direction\n\tscrollMenuIntoView: prop_types_default.a.bool, // boolean to enable the viewport to shift so that the full menu fully visible when engaged\n\tsearchable: prop_types_default.a.bool, // whether to enable searching feature or not\n\tsimpleValue: prop_types_default.a.bool, // pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false\n\tstyle: prop_types_default.a.object, // optional style to apply to the control\n\ttabIndex: stringOrNumber, // optional tab index of the control\n\ttabSelectsValue: prop_types_default.a.bool, // whether to treat tabbing out while focused to be value selection\n\ttrimFilter: prop_types_default.a.bool, // whether to trim whitespace around filter value\n\tvalue: prop_types_default.a.any, // initial field value\n\tvalueComponent: prop_types_default.a.func, // value component to render\n\tvalueKey: prop_types_default.a.string, // path of the label value in option objects\n\tvalueRenderer: prop_types_default.a.func, // valueRenderer: function (option) {}\n\twrapperStyle: prop_types_default.a.object // optional style to apply to the component wrapper\n};\n\nSelect$1.defaultProps = {\n\tarrowRenderer: react_select_es_arrowRenderer,\n\tautosize: true,\n\tbackspaceRemoves: true,\n\tbackspaceToRemoveMessage: 'Press backspace to remove {label}',\n\tclearable: true,\n\tclearAllText: 'Clear all',\n\tclearRenderer: react_select_es_clearRenderer,\n\tclearValueText: 'Clear value',\n\tcloseOnSelect: true,\n\tdeleteRemoves: true,\n\tdelimiter: ',',\n\tdisabled: false,\n\tescapeClearsValue: true,\n\tfilterOptions: filterOptions,\n\tignoreAccents: true,\n\tignoreCase: true,\n\tinputProps: {},\n\tisLoading: false,\n\tjoinValues: false,\n\tlabelKey: 'label',\n\tmatchPos: 'any',\n\tmatchProp: 'any',\n\tmenuBuffer: 0,\n\tmenuRenderer: react_select_es_menuRenderer,\n\tmulti: false,\n\tnoResultsText: 'No results found',\n\tonBlurResetsInput: true,\n\tonCloseResetsInput: true,\n\tonSelectResetsInput: true,\n\topenOnClick: true,\n\toptionComponent: react_select_es_Option,\n\tpageSize: 5,\n\tplaceholder: 'Select...',\n\tremoveSelected: true,\n\trequired: false,\n\trtl: false,\n\tscrollMenuIntoView: true,\n\tsearchable: true,\n\tsimpleValue: false,\n\ttabSelectsValue: true,\n\ttrimFilter: true,\n\tvalueComponent: react_select_es_Value,\n\tvalueKey: 'value'\n};\n\nvar propTypes = {\n\tautoload: prop_types_default.a.bool.isRequired, // automatically call the `loadOptions` prop on-mount; defaults to true\n\tcache: prop_types_default.a.any, // object to use to cache results; set to null/false to disable caching\n\tchildren: prop_types_default.a.func.isRequired, // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element\n\tignoreAccents: prop_types_default.a.bool, // strip diacritics when filtering; defaults to true\n\tignoreCase: prop_types_default.a.bool, // perform case-insensitive filtering; defaults to true\n\tloadOptions: prop_types_default.a.func.isRequired, // callback to load options asynchronously; (inputValue: string, callback: Function): ?Promise\n\tloadingPlaceholder: prop_types_default.a.oneOfType([// replaces the placeholder while options are loading\n\tprop_types_default.a.string, prop_types_default.a.node]),\n\tmulti: prop_types_default.a.bool, // multi-value input\n\tnoResultsText: prop_types_default.a.oneOfType([// field noResultsText, displayed when no options come back from the server\n\tprop_types_default.a.string, prop_types_default.a.node]),\n\tonChange: prop_types_default.a.func, // onChange handler: function (newValue) {}\n\tonInputChange: prop_types_default.a.func, // optional for keeping track of what is being typed\n\toptions: prop_types_default.a.array.isRequired, // array of options\n\tplaceholder: prop_types_default.a.oneOfType([// field placeholder, displayed when there's no value (shared with Select)\n\tprop_types_default.a.string, prop_types_default.a.node]),\n\tsearchPromptText: prop_types_default.a.oneOfType([// label to prompt for search input\n\tprop_types_default.a.string, prop_types_default.a.node]),\n\tvalue: prop_types_default.a.any // initial field value\n};\n\nvar defaultCache = {};\n\nvar react_select_es_defaultChildren = function defaultChildren(props) {\n\treturn external_this_React_default.a.createElement(Select$1, props);\n};\n\nvar defaultProps = {\n\tautoload: true,\n\tcache: defaultCache,\n\tchildren: react_select_es_defaultChildren,\n\tignoreAccents: true,\n\tignoreCase: true,\n\tloadingPlaceholder: 'Loading...',\n\toptions: [],\n\tsearchPromptText: 'Type to search'\n};\n\nvar Async = function (_Component) {\n\tinherits(Async, _Component);\n\n\tfunction Async(props, context) {\n\t\tclassCallCheck(this, Async);\n\n\t\tvar _this = possibleConstructorReturn(this, (Async.__proto__ || Object.getPrototypeOf(Async)).call(this, props, context));\n\n\t\t_this._cache = props.cache === defaultCache ? {} : props.cache;\n\n\t\t_this.state = {\n\t\t\tinputValue: '',\n\t\t\tisLoading: false,\n\t\t\toptions: props.options\n\t\t};\n\n\t\t_this.onInputChange = _this.onInputChange.bind(_this);\n\t\treturn _this;\n\t}\n\n\tcreateClass(Async, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tvar autoload = this.props.autoload;\n\n\n\t\t\tif (autoload) {\n\t\t\t\tthis.loadOptions('');\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tif (nextProps.options !== this.props.options) {\n\t\t\t\tthis.setState({\n\t\t\t\t\toptions: nextProps.options\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis._callback = null;\n\t\t}\n\t}, {\n\t\tkey: 'loadOptions',\n\t\tvalue: function loadOptions(inputValue) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar loadOptions = this.props.loadOptions;\n\n\t\t\tvar cache = this._cache;\n\n\t\t\tif (cache && Object.prototype.hasOwnProperty.call(cache, inputValue)) {\n\t\t\t\tthis._callback = null;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\toptions: cache[inputValue]\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar callback = function callback(error, data) {\n\t\t\t\tvar options = data && data.options || [];\n\n\t\t\t\tif (cache) {\n\t\t\t\t\tcache[inputValue] = options;\n\t\t\t\t}\n\n\t\t\t\tif (callback === _this2._callback) {\n\t\t\t\t\t_this2._callback = null;\n\n\t\t\t\t\t_this2.setState({\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\toptions: options\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Ignore all but the most recent request\n\t\t\tthis._callback = callback;\n\n\t\t\tvar promise = loadOptions(inputValue, callback);\n\t\t\tif (promise) {\n\t\t\t\tpromise.then(function (data) {\n\t\t\t\t\treturn callback(null, data);\n\t\t\t\t}, function (error) {\n\t\t\t\t\treturn callback(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this._callback && !this.state.isLoading) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'onInputChange',\n\t\tvalue: function onInputChange(inputValue) {\n\t\t\tvar _props = this.props,\n\t\t\t    ignoreAccents = _props.ignoreAccents,\n\t\t\t    ignoreCase = _props.ignoreCase,\n\t\t\t    onInputChange = _props.onInputChange;\n\n\t\t\tvar newInputValue = inputValue;\n\n\t\t\tif (onInputChange) {\n\t\t\t\tvar value = onInputChange(newInputValue);\n\t\t\t\t// Note: != used deliberately here to catch undefined and null\n\t\t\t\tif (value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n\t\t\t\t\tnewInputValue = '' + value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar transformedInputValue = newInputValue;\n\n\t\t\tif (ignoreAccents) {\n\t\t\t\ttransformedInputValue = stripDiacritics(transformedInputValue);\n\t\t\t}\n\n\t\t\tif (ignoreCase) {\n\t\t\t\ttransformedInputValue = transformedInputValue.toLowerCase();\n\t\t\t}\n\n\t\t\tthis.setState({ inputValue: newInputValue });\n\t\t\tthis.loadOptions(transformedInputValue);\n\n\t\t\t// Return new input value, but without applying toLowerCase() to avoid modifying the user's view case of the input while typing.\n\t\t\treturn newInputValue;\n\t\t}\n\t}, {\n\t\tkey: 'noResultsText',\n\t\tvalue: function noResultsText() {\n\t\t\tvar _props2 = this.props,\n\t\t\t    loadingPlaceholder = _props2.loadingPlaceholder,\n\t\t\t    noResultsText = _props2.noResultsText,\n\t\t\t    searchPromptText = _props2.searchPromptText;\n\t\t\tvar _state = this.state,\n\t\t\t    inputValue = _state.inputValue,\n\t\t\t    isLoading = _state.isLoading;\n\n\n\t\t\tif (isLoading) {\n\t\t\t\treturn loadingPlaceholder;\n\t\t\t}\n\t\t\tif (inputValue && noResultsText) {\n\t\t\t\treturn noResultsText;\n\t\t\t}\n\t\t\treturn searchPromptText;\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.select.focus();\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar _props3 = this.props,\n\t\t\t    children = _props3.children,\n\t\t\t    loadingPlaceholder = _props3.loadingPlaceholder,\n\t\t\t    placeholder = _props3.placeholder;\n\t\t\tvar _state2 = this.state,\n\t\t\t    isLoading = _state2.isLoading,\n\t\t\t    options = _state2.options;\n\n\n\t\t\tvar props = {\n\t\t\t\tnoResultsText: this.noResultsText(),\n\t\t\t\tplaceholder: isLoading ? loadingPlaceholder : placeholder,\n\t\t\t\toptions: isLoading && loadingPlaceholder ? [] : options,\n\t\t\t\tref: function ref(_ref) {\n\t\t\t\t\treturn _this3.select = _ref;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn children(_extends({}, this.props, props, {\n\t\t\t\tisLoading: isLoading,\n\t\t\t\tonInputChange: this.onInputChange\n\t\t\t}));\n\t\t}\n\t}]);\n\treturn Async;\n}(external_this_React_[\"Component\"]);\n\nAsync.propTypes = propTypes;\nAsync.defaultProps = defaultProps;\n\nvar CreatableSelect = function (_React$Component) {\n\tinherits(CreatableSelect, _React$Component);\n\n\tfunction CreatableSelect(props, context) {\n\t\tclassCallCheck(this, CreatableSelect);\n\n\t\tvar _this = possibleConstructorReturn(this, (CreatableSelect.__proto__ || Object.getPrototypeOf(CreatableSelect)).call(this, props, context));\n\n\t\t_this.filterOptions = _this.filterOptions.bind(_this);\n\t\t_this.menuRenderer = _this.menuRenderer.bind(_this);\n\t\t_this.onInputKeyDown = _this.onInputKeyDown.bind(_this);\n\t\t_this.onInputChange = _this.onInputChange.bind(_this);\n\t\t_this.onOptionSelect = _this.onOptionSelect.bind(_this);\n\t\treturn _this;\n\t}\n\n\tcreateClass(CreatableSelect, [{\n\t\tkey: 'createNewOption',\n\t\tvalue: function createNewOption() {\n\t\t\tvar _props = this.props,\n\t\t\t    isValidNewOption = _props.isValidNewOption,\n\t\t\t    newOptionCreator = _props.newOptionCreator,\n\t\t\t    onNewOptionClick = _props.onNewOptionClick,\n\t\t\t    _props$options = _props.options,\n\t\t\t    options = _props$options === undefined ? [] : _props$options;\n\n\n\t\t\tif (isValidNewOption({ label: this.inputValue })) {\n\t\t\t\tvar option = newOptionCreator({ label: this.inputValue, labelKey: this.labelKey, valueKey: this.valueKey });\n\t\t\t\tvar _isOptionUnique = this.isOptionUnique({ option: option, options: options });\n\n\t\t\t\t// Don't add the same option twice.\n\t\t\t\tif (_isOptionUnique) {\n\t\t\t\t\tif (onNewOptionClick) {\n\t\t\t\t\t\tonNewOptionClick(option);\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.unshift(option);\n\n\t\t\t\t\t\tthis.select.selectValue(option);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'filterOptions',\n\t\tvalue: function filterOptions$$1() {\n\t\t\tvar _props2 = this.props,\n\t\t\t    filterOptions$$1 = _props2.filterOptions,\n\t\t\t    isValidNewOption = _props2.isValidNewOption,\n\t\t\t    promptTextCreator = _props2.promptTextCreator,\n\t\t\t    showNewOptionAtTop = _props2.showNewOptionAtTop;\n\n\t\t\t// TRICKY Check currently selected options as well.\n\t\t\t// Don't display a create-prompt for a value that's selected.\n\t\t\t// This covers async edge-cases where a newly-created Option isn't yet in the async-loaded array.\n\n\t\t\tvar excludeOptions = (arguments.length <= 2 ? undefined : arguments[2]) || [];\n\n\t\t\tvar filteredOptions = filterOptions$$1.apply(undefined, arguments) || [];\n\n\t\t\tif (isValidNewOption({ label: this.inputValue })) {\n\t\t\t\tvar _newOptionCreator = this.props.newOptionCreator;\n\n\n\t\t\t\tvar option = _newOptionCreator({\n\t\t\t\t\tlabel: this.inputValue,\n\t\t\t\t\tlabelKey: this.labelKey,\n\t\t\t\t\tvalueKey: this.valueKey\n\t\t\t\t});\n\n\t\t\t\t// TRICKY Compare to all options (not just filtered options) in case option has already been selected).\n\t\t\t\t// For multi-selects, this would remove it from the filtered list.\n\t\t\t\tvar _isOptionUnique2 = this.isOptionUnique({\n\t\t\t\t\toption: option,\n\t\t\t\t\toptions: excludeOptions.concat(filteredOptions)\n\t\t\t\t});\n\n\t\t\t\tif (_isOptionUnique2) {\n\t\t\t\t\tvar prompt = promptTextCreator(this.inputValue);\n\n\t\t\t\t\tthis._createPlaceholderOption = _newOptionCreator({\n\t\t\t\t\t\tlabel: prompt,\n\t\t\t\t\t\tlabelKey: this.labelKey,\n\t\t\t\t\t\tvalueKey: this.valueKey\n\t\t\t\t\t});\n\n\t\t\t\t\tif (showNewOptionAtTop) {\n\t\t\t\t\t\tfilteredOptions.unshift(this._createPlaceholderOption);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilteredOptions.push(this._createPlaceholderOption);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn filteredOptions;\n\t\t}\n\t}, {\n\t\tkey: 'isOptionUnique',\n\t\tvalue: function isOptionUnique(_ref) {\n\t\t\tvar option = _ref.option,\n\t\t\t    options = _ref.options;\n\t\t\tvar isOptionUnique = this.props.isOptionUnique;\n\n\n\t\t\toptions = options || this.props.options;\n\n\t\t\treturn isOptionUnique({\n\t\t\t\tlabelKey: this.labelKey,\n\t\t\t\toption: option,\n\t\t\t\toptions: options,\n\t\t\t\tvalueKey: this.valueKey\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'menuRenderer',\n\t\tvalue: function menuRenderer$$1(params) {\n\t\t\tvar menuRenderer$$1 = this.props.menuRenderer;\n\n\n\t\t\treturn menuRenderer$$1(_extends({}, params, {\n\t\t\t\tonSelect: this.onOptionSelect,\n\t\t\t\tselectValue: this.onOptionSelect\n\t\t\t}));\n\t\t}\n\t}, {\n\t\tkey: 'onInputChange',\n\t\tvalue: function onInputChange(input) {\n\t\t\tvar onInputChange = this.props.onInputChange;\n\n\t\t\t// This value may be needed in between Select mounts (when this.select is null)\n\n\t\t\tthis.inputValue = input;\n\n\t\t\tif (onInputChange) {\n\t\t\t\tthis.inputValue = onInputChange(input);\n\t\t\t}\n\n\t\t\treturn this.inputValue;\n\t\t}\n\t}, {\n\t\tkey: 'onInputKeyDown',\n\t\tvalue: function onInputKeyDown(event) {\n\t\t\tvar _props3 = this.props,\n\t\t\t    shouldKeyDownEventCreateNewOption = _props3.shouldKeyDownEventCreateNewOption,\n\t\t\t    onInputKeyDown = _props3.onInputKeyDown;\n\n\t\t\tvar focusedOption = this.select.getFocusedOption();\n\n\t\t\tif (focusedOption && focusedOption === this._createPlaceholderOption && shouldKeyDownEventCreateNewOption(event)) {\n\t\t\t\tthis.createNewOption();\n\n\t\t\t\t// Prevent decorated Select from doing anything additional with this keyDown event\n\t\t\t\tevent.preventDefault();\n\t\t\t} else if (onInputKeyDown) {\n\t\t\t\tonInputKeyDown(event);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'onOptionSelect',\n\t\tvalue: function onOptionSelect(option) {\n\t\t\tif (option === this._createPlaceholderOption) {\n\t\t\t\tthis.createNewOption();\n\t\t\t} else {\n\t\t\t\tthis.select.selectValue(option);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.select.focus();\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar _props4 = this.props,\n\t\t\t    refProp = _props4.ref,\n\t\t\t    restProps = objectWithoutProperties(_props4, ['ref']);\n\t\t\tvar children = this.props.children;\n\n\t\t\t// We can't use destructuring default values to set the children,\n\t\t\t// because it won't apply work if `children` is null. A falsy check is\n\t\t\t// more reliable in real world use-cases.\n\n\t\t\tif (!children) {\n\t\t\t\tchildren = defaultChildren$2;\n\t\t\t}\n\n\t\t\tvar props = _extends({}, restProps, {\n\t\t\t\tallowCreate: true,\n\t\t\t\tfilterOptions: this.filterOptions,\n\t\t\t\tmenuRenderer: this.menuRenderer,\n\t\t\t\tonInputChange: this.onInputChange,\n\t\t\t\tonInputKeyDown: this.onInputKeyDown,\n\t\t\t\tref: function ref(_ref2) {\n\t\t\t\t\t_this2.select = _ref2;\n\n\t\t\t\t\t// These values may be needed in between Select mounts (when this.select is null)\n\t\t\t\t\tif (_ref2) {\n\t\t\t\t\t\t_this2.labelKey = _ref2.props.labelKey;\n\t\t\t\t\t\t_this2.valueKey = _ref2.props.valueKey;\n\t\t\t\t\t}\n\t\t\t\t\tif (refProp) {\n\t\t\t\t\t\trefProp(_ref2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn children(props);\n\t\t}\n\t}]);\n\treturn CreatableSelect;\n}(external_this_React_default.a.Component);\n\nvar defaultChildren$2 = function defaultChildren(props) {\n\treturn external_this_React_default.a.createElement(Select$1, props);\n};\n\nvar isOptionUnique = function isOptionUnique(_ref3) {\n\tvar option = _ref3.option,\n\t    options = _ref3.options,\n\t    labelKey = _ref3.labelKey,\n\t    valueKey = _ref3.valueKey;\n\n\tif (!options || !options.length) {\n\t\treturn true;\n\t}\n\n\treturn options.filter(function (existingOption) {\n\t\treturn existingOption[labelKey] === option[labelKey] || existingOption[valueKey] === option[valueKey];\n\t}).length === 0;\n};\n\nvar isValidNewOption = function isValidNewOption(_ref4) {\n\tvar label = _ref4.label;\n\treturn !!label;\n};\n\nvar newOptionCreator = function newOptionCreator(_ref5) {\n\tvar label = _ref5.label,\n\t    labelKey = _ref5.labelKey,\n\t    valueKey = _ref5.valueKey;\n\n\tvar option = {};\n\toption[valueKey] = label;\n\toption[labelKey] = label;\n\toption.className = 'Select-create-option-placeholder';\n\n\treturn option;\n};\n\nvar promptTextCreator = function promptTextCreator(label) {\n\treturn 'Create option \"' + label + '\"';\n};\n\nvar shouldKeyDownEventCreateNewOption = function shouldKeyDownEventCreateNewOption(_ref6) {\n\tvar keyCode = _ref6.keyCode;\n\n\tswitch (keyCode) {\n\t\tcase 9: // TAB\n\t\tcase 13: // ENTER\n\t\tcase 188:\n\t\t\t// COMMA\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\n// Default prop methods\nCreatableSelect.isOptionUnique = isOptionUnique;\nCreatableSelect.isValidNewOption = isValidNewOption;\nCreatableSelect.newOptionCreator = newOptionCreator;\nCreatableSelect.promptTextCreator = promptTextCreator;\nCreatableSelect.shouldKeyDownEventCreateNewOption = shouldKeyDownEventCreateNewOption;\n\nCreatableSelect.defaultProps = {\n\tfilterOptions: filterOptions,\n\tisOptionUnique: isOptionUnique,\n\tisValidNewOption: isValidNewOption,\n\tmenuRenderer: react_select_es_menuRenderer,\n\tnewOptionCreator: newOptionCreator,\n\tpromptTextCreator: promptTextCreator,\n\tshouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption,\n\tshowNewOptionAtTop: true\n};\n\nCreatableSelect.propTypes = {\n\t// Child function responsible for creating the inner Select component\n\t// This component can be used to compose HOCs (eg Creatable and Async)\n\t// (props: Object): PropTypes.element\n\tchildren: prop_types_default.a.func,\n\n\t// See Select.propTypes.filterOptions\n\tfilterOptions: prop_types_default.a.any,\n\n\t// Searches for any matching option within the set of options.\n\t// This function prevents duplicate options from being created.\n\t// ({ option: Object, options: Array, labelKey: string, valueKey: string }): boolean\n\tisOptionUnique: prop_types_default.a.func,\n\n\t// Determines if the current input text represents a valid option.\n\t// ({ label: string }): boolean\n\tisValidNewOption: prop_types_default.a.func,\n\n\t// See Select.propTypes.menuRenderer\n\tmenuRenderer: prop_types_default.a.any,\n\n\t// Factory to create new option.\n\t// ({ label: string, labelKey: string, valueKey: string }): Object\n\tnewOptionCreator: prop_types_default.a.func,\n\n\t// input change handler: function (inputValue) {}\n\tonInputChange: prop_types_default.a.func,\n\n\t// input keyDown handler: function (event) {}\n\tonInputKeyDown: prop_types_default.a.func,\n\n\t// new option click handler: function (option) {}\n\tonNewOptionClick: prop_types_default.a.func,\n\n\t// See Select.propTypes.options\n\toptions: prop_types_default.a.array,\n\n\t// Creates prompt/placeholder option text.\n\t// (filterText: string): string\n\tpromptTextCreator: prop_types_default.a.func,\n\n\tref: prop_types_default.a.func,\n\n\t// Decides if a keyDown event (eg its `keyCode`) should result in the creation of a new option.\n\tshouldKeyDownEventCreateNewOption: prop_types_default.a.func,\n\n\t// Where to show prompt/placeholder option text.\n\t// true: new option prompt at top of list (default)\n\t// false: new option prompt at bottom of list\n\tshowNewOptionAtTop: prop_types_default.a.bool\n};\n\nvar react_select_es_AsyncCreatableSelect = function (_React$Component) {\n\tinherits(AsyncCreatableSelect, _React$Component);\n\n\tfunction AsyncCreatableSelect() {\n\t\tclassCallCheck(this, AsyncCreatableSelect);\n\t\treturn possibleConstructorReturn(this, (AsyncCreatableSelect.__proto__ || Object.getPrototypeOf(AsyncCreatableSelect)).apply(this, arguments));\n\t}\n\n\tcreateClass(AsyncCreatableSelect, [{\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.select.focus();\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this2 = this;\n\n\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\tAsync,\n\t\t\t\tthis.props,\n\t\t\t\tfunction (_ref) {\n\t\t\t\t\tvar ref = _ref.ref,\n\t\t\t\t\t    asyncProps = objectWithoutProperties(_ref, ['ref']);\n\n\t\t\t\t\tvar asyncRef = ref;\n\t\t\t\t\treturn external_this_React_default.a.createElement(\n\t\t\t\t\t\tCreatableSelect,\n\t\t\t\t\t\tasyncProps,\n\t\t\t\t\t\tfunction (_ref2) {\n\t\t\t\t\t\t\tvar ref = _ref2.ref,\n\t\t\t\t\t\t\t    creatableProps = objectWithoutProperties(_ref2, ['ref']);\n\n\t\t\t\t\t\t\tvar creatableRef = ref;\n\t\t\t\t\t\t\treturn _this2.props.children(_extends({}, creatableProps, {\n\t\t\t\t\t\t\t\tref: function ref(select) {\n\t\t\t\t\t\t\t\t\tcreatableRef(select);\n\t\t\t\t\t\t\t\t\tasyncRef(select);\n\t\t\t\t\t\t\t\t\t_this2.select = select;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}]);\n\treturn AsyncCreatableSelect;\n}(external_this_React_default.a.Component);\n\nvar defaultChildren$1 = function defaultChildren(props) {\n\treturn external_this_React_default.a.createElement(Select$1, props);\n};\n\nreact_select_es_AsyncCreatableSelect.propTypes = {\n\tchildren: prop_types_default.a.func.isRequired // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element\n};\n\nreact_select_es_AsyncCreatableSelect.defaultProps = {\n\tchildren: defaultChildren$1\n};\n\nSelect$1.Async = Async;\nSelect$1.AsyncCreatable = react_select_es_AsyncCreatableSelect;\nSelect$1.Creatable = CreatableSelect;\nSelect$1.Value = react_select_es_Value;\nSelect$1.Option = react_select_es_Option;\n\n\n/* harmony default export */ var react_select_es = (Select$1);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultOption/Wrapper.js\n\n/* harmony default export */ var Wrapper = (styled_components_browser_esm[\"default\"].div`\n\tposition: relative;\n\t\n  * {\n    vertical-align: middle;\n    line-height: 14px;\n  }\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultOption/Image.js\n\n/* harmony default export */ var Image = (styled_components_browser_esm[\"default\"].div`\n  background-image: url(${props => props.src});\n  width: 40px;\n  height: 40px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: 1px solid #efefef;\n  display: inline-block;\n  margin-right: 10px;\n  vertical-align: top;\n  ${props => props.src ? '' : 'border: 0;'}\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultOption/DisplayTypes.js\n\n/* harmony default export */ var DisplayTypes = (styled_components_browser_esm[\"default\"].div`\n  display: inline-block;\n  font-size: 10px;\n  font-weight: 600;\n  text-transform: lowercase;\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultOption/Description.js\n\n/* harmony default export */ var Description = (styled_components_browser_esm[\"default\"].div`\n  // Do not overlap with the scope icon.\n  width: 100%;\n  padding-right: 40px;\n  font-size: 12px;\n  margin-top: 2px;\n  text-align: justify;\n  \n  &:first-letter {\n    text-transform: capitalize;\n  }\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/FontAwesome/index.js\n/**\n * Components: Font Awesome.\n *\n * A Font Awesome element.\n *\n * @since 1.0.0\n */\n\n/* harmony default export */ var FontAwesome = (styled_components_browser_esm[\"default\"].i.attrs({\n  \"aria-hidden\": true\n})`\n  margin: 4px 8px;\n  font-size: 14px;\n\n  // ### ANY alignment.\t\n  ${props => \"right\" !== props.align && `\n    &:hover {\n      cursor: pointer;\n      color: #2e92ff;\n    }\n  `}\n  \n\t// ### RIGHT alignment.\n\t${props => \"right\" === props.align && `\n    position: absolute;\n    right: 0;\n    top: 4px;\n    \n    // Elements on the right are indicators and aren't clickable.\n    color: #cbcbcb;\n  `}\n\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultOption/Label.js\n\n/* harmony default export */ var Label = (styled_components_browser_esm[\"default\"].div`\n\tfont-size: 13px;\n\tfont-weight: 600;\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultOption/Block.js\n\n/* harmony default export */ var Block = (styled_components_browser_esm[\"default\"].div`\n\tdisplay: inline-block;\n\tmax-width: calc( 100% - 50px );\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultOption/index.js\n/**\n * Components: AutocompleteResultOption.\n *\n * A stateless component to display Autocomplete Results in the AutocompleteSelect.\n *\n * @since 1.0.0\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\n\n\n\n\n\n/**\n *\n * @param {array} images An array of images.\n * @param {array} labels An array of labels.\n * @param {string} scope The result scope: local, network or cloud.\n * @param {string} displayTypes The schema.org types string.\n * @param descriptions\n * @constructor\n */\n\nconst AutocompleteResultOption = ({\n  images,\n  scope,\n  displayTypes,\n  descriptions,\n  label\n}) => {\n  return /*#__PURE__*/external_this_React_default.a.createElement(Wrapper, null, /*#__PURE__*/external_this_React_default.a.createElement(Image, {\n    src: images && images[0]\n  }), /*#__PURE__*/external_this_React_default.a.createElement(Block, null, /*#__PURE__*/external_this_React_default.a.createElement(Label, null, label), /*#__PURE__*/external_this_React_default.a.createElement(DisplayTypes, null, displayTypes), /*#__PURE__*/external_this_React_default.a.createElement(Description, null, descriptions && descriptions[0])), 'local' !== scope && /*#__PURE__*/external_this_React_default.a.createElement(FontAwesome, {\n    align: \"right\",\n    className: \"fa fa-cloud\"\n  }));\n}; // Finally export the `AutocompleteResultOption`.\n\n\n/* harmony default export */ var Autocomplete_AutocompleteResultOption = (AutocompleteResultOption);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultValue/Wrapper.js\n\n/* harmony default export */ var AutocompleteResultValue_Wrapper = (styled_components_browser_esm[\"default\"].div`\n  // Allow elements to line up horizontally.\n  display: inline-block;\n  \n  // Keep the elements aligned top since the height may vary according\n  // to the size of the labels. \n  vertical-align: top;\n  \n  // Contain child element positioned using absolute.\n  position: relative;\n\n  box-sizing: border-box;\n  \n  width: 248px;\n  min-height: 32px;\n  margin: 4px;\n  padding: 4px 0;\n\n  overflow: hidden;\n  border-radius: 2px;\n  background-color: #f5f5f5;\n  box-shadow: 0 4px 4px -3px rgba(0,0,0,.25),0 8px 8px -6px rgba(0,0,0,.25);\n  outline: 0;\n  \n  color: #666;\n\n  * {\n    display: inline-block;\n    vertical-align: top;\n  }\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultValue/Label.js\n\n/* harmony default export */ var AutocompleteResultValue_Label = (styled_components_browser_esm[\"default\"].div`\n\tposition: relative;\n  box-sizing: border-box;\n  max-width: 180px;\n  margin-top: 4px;\n  min-height: 16px;\n  line-height: 16px;\n  font-weight: 600;\n  font-size: 12px;\n  hyphens: auto;\n`);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteResultValue/index.js\n/**\n * Components: AutocompleteResultValue.\n *\n * A stateless component to display Autocomplete Results in the AutocompleteSelect.\n *\n * @since 1.0.0\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\n\n/**\n *\n * @param {array} images An array of images.\n * @param {array} labels An array of labels.\n * @param {string} scope The result scope: local, network or cloud.\n * @param {string} displayTypes The schema.org types string.\n * @param descriptions\n * @constructor\n */\n\nclass AutocompleteResultValue_AutocompleteResultValue extends external_this_React_[\"Component\"] {\n  constructor(props) {\n    super(props);\n    this.onRemove = this.onRemove.bind(this);\n  }\n\n  onRemove(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onRemove(this.props.value);\n  }\n\n  render() {\n    const {\n      scope,\n      label\n    } = this.props.value;\n    return /*#__PURE__*/external_this_React_default.a.createElement(AutocompleteResultValue_Wrapper, null, /*#__PURE__*/external_this_React_default.a.createElement(FontAwesome, {\n      className: \"fa fa-minus-square\",\n      onMouseDown: this.onRemove\n    }), /*#__PURE__*/external_this_React_default.a.createElement(AutocompleteResultValue_Label, null, label), 'local' !== scope && /*#__PURE__*/external_this_React_default.a.createElement(FontAwesome, {\n      align: \"right\",\n      className: \"fa fa-cloud\"\n    }));\n  }\n\n} // Finally export the `AutocompleteResultValue`.\n\n\n/* harmony default export */ var Autocomplete_AutocompleteResultValue = (AutocompleteResultValue_AutocompleteResultValue);\n// CONCATENATED MODULE: ./src/Edit/components/Autocomplete/AutocompleteSelect/index.js\nfunction AutocompleteSelect_extends() { AutocompleteSelect_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return AutocompleteSelect_extends.apply(this, arguments); }\n\n/**\n * Components: Autocomplete Select.\n *\n * The Autocomplete Select displays Autocomplete results returned by the WordLift Autocomplete End-point.\n *\n * @since 1.0.0\n */\n\n/**\n * Stylesheets.\n */\n\n/**\n * External dependencies.\n */\n\n\n\n\n/**\n * Internal dependencies.\n */\n\n\n\n\nconst AutocompleteSelect_isOptionUnique = ({\n  option,\n  options,\n  labelKey,\n  valueKey\n}) => options && -1 === options.findIndex(x => option[valueKey] === x[valueKey]);\n\nconst AutocompleteSelect_isValidNewOption = ({\n  label\n}) => label && label.match(/^https?:\\/\\/.+/i);\n\nconst AutocompleteSelect_newOptionCreator = ({\n  label,\n  labelKey,\n  valueKey\n}) => {\n  return {\n    [labelKey]: label,\n    [valueKey]: label\n  };\n};\n/**\n * AutocompleteSelect stateless component.\n *\n * @since 1.0.0\n */\n\n\nclass AutocompleteSelect_AutocompleteSelect extends external_this_React_[\"Component\"] {\n  /**\n   * Create an {@link AutocompleteSelect} instance.\n   *\n   *\n   * @param {boolean} autoload Whether to autoload data.\n   * @param {Function} loadOptions The function used to load the list of options. The\n   *                          function must accept two arguments: the input string\n   *                          and the callback to send the arguments.\n   * @param {Function} optionRenderer A React stateless component for rendering\n   *                          the option.\n   * @param {Function} valueRenderer A React stateless component for rendering the\n   *                          selected value.\n   * @param props\n   *\n   *\n   * @since 1.0.0\n   * @param {Object} props Rendering properties.\n   */\n  constructor(props) {\n    super(props); // Bind the `onChange` function.\n\n    this.onChange = this.onChange.bind(this); // Set the initial state.\n\n    this.state = {\n      value: \"\"\n    };\n  }\n  /**\n   * Catch `onChange` events and update the state.\n   *\n   * @since 1.0.0\n   *\n   * @param {Object|Array} value The value.\n   */\n\n\n  onChange(value) {\n    this.setState({\n      value\n    });\n  }\n  /**\n   * Render the component.\n   *\n   * @since 1.0.0\n   * @returns {XML}\n   */\n\n\n  render() {\n    const {\n      autoload,\n      loadOptions,\n      optionRenderer,\n      valueComponent,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/external_this_React_default.a.createElement(react_select_es.AsyncCreatable, AutocompleteSelect_extends({\n      autoload: autoload,\n      ignoreAccents: true,\n      ignoreCase: true,\n      loadOptions: loadOptions,\n      optionRenderer: optionRenderer,\n      valueComponent: valueComponent,\n      openOnFocus: true,\n      autoBlur: true,\n      multi: true,\n      onChange: this.onChange,\n      value: this.state.value,\n      newOptionCreator: AutocompleteSelect_newOptionCreator,\n      isValidNewOption: AutocompleteSelect_isValidNewOption,\n      isOptionUnique: AutocompleteSelect_isOptionUnique // matchProp=\"value\"\n      ,\n      clearable: false\n    }, props));\n  }\n\n}\n/**\n * Define the property types.\n *\n * @since 1.0.0\n *\n * @type {{autoload: *, loadOptions, optionRenderer: *, valueComponent: *}}\n */\n\n\nAutocompleteSelect_AutocompleteSelect.propTypes = {\n  autoload: prop_types_default.a.bool,\n  loadOptions: prop_types_default.a.func.isRequired,\n  optionRenderer: prop_types_default.a.func,\n  valueComponent: prop_types_default.a.func\n};\n/**\n * Define the default properties.\n *\n * @since 1.0.0\n *\n * @type {{autoload: boolean, optionRenderer: (function({images: array, labels: array, scope: string, displayTypes: string, descriptions: *}): XML), valueRenderer: (function({images: array, labels: array, scope: string, displayTypes: string, descriptions: *}): XML), filterOptions: (function(*, *, *))}}\n */\n\nAutocompleteSelect_AutocompleteSelect.defaultProps = {\n  autoload: false,\n  optionRenderer: Autocomplete_AutocompleteResultOption,\n  valueComponent: Autocomplete_AutocompleteResultValue\n}; // Finally export the AutocompleteSelect.\n\n/* harmony default export */ var components_Autocomplete_AutocompleteSelect = __webpack_exports__[\"a\"] = (AutocompleteSelect_AutocompleteSelect);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84\n")},,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* reexport */ Button; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* reexport */ Popover_Popover; });\n\n// UNUSED EXPORTS: createPopover\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = Object(objectWithoutPropertiesLoose[\"a\" /* default */])(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n// EXTERNAL MODULE: external {\"this\":\"React\"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(4);\n\n// CONCATENATED MODULE: /var/www/html/wordlift-plugin/node_modules/polished/dist/polished.es.js\n//      \n\n// @private\nfunction capitalizeString(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n//      \nvar positionMap = ['Top', 'Right', 'Bottom', 'Left'];\n\nfunction generateProperty(property, position) {\n  if (!property) return position.toLowerCase();\n  var splitProperty = property.split('-');\n  if (splitProperty.length > 1) {\n    splitProperty.splice(1, 0, position);\n    return splitProperty.reduce(function (acc, val) {\n      return '' + acc + capitalizeString(val);\n    });\n  }\n  var joinedProperty = property.replace(/([a-z])([A-Z])/g, '$1' + position + '$2');\n  return property === joinedProperty ? '' + property + position : joinedProperty;\n}\n\nfunction generateStyles(property, valuesWithDefaults) {\n  var styles = {};\n  for (var i = 0; i < valuesWithDefaults.length; i += 1) {\n    if (valuesWithDefaults[i] || valuesWithDefaults[i] === 0) {\n      styles[generateProperty(property, positionMap[i])] = valuesWithDefaults[i];\n    }\n  }\n  return styles;\n}\n\n/**\n * A helper that enables shorthand for direction based properties. It accepts a property (hyphenated or camelCased) and up to four values that map to top, right, bottom, and left, respectively. You can optionally pass an empty string to get only the directional values as properties. You can also optionally pass a null argument for a directional value to ignore it.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...directionalProperty('padding', '12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${directionalProperty('padding', '12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'paddingTop': '12px',\n *   'paddingRight': '24px',\n *   'paddingBottom': '36px',\n *   'paddingLeft': '48px'\n * }\n */\n\nfunction directionalProperty(property) {\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  //  prettier-ignore\n  var firstValue = values[0],\n      _values$ = values[1],\n      secondValue = _values$ === undefined ? firstValue : _values$,\n      _values$2 = values[2],\n      thirdValue = _values$2 === undefined ? firstValue : _values$2,\n      _values$3 = values[3],\n      fourthValue = _values$3 === undefined ? secondValue : _values$3;\n\n  var valuesWithDefaults = [firstValue, secondValue, thirdValue, fourthValue];\n  return generateStyles(property, valuesWithDefaults);\n}\n\n//      \n\nfunction endsWith (string, suffix) {\n  return string.substr(-suffix.length) === suffix;\n}\n\n//      \n\n/**\n * Strip the unit from a given CSS value, returning just the number. (or the original value if an invalid string was passed)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   '--dimension': stripUnit('100px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   --dimension: ${stripUnit('100px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   '--dimension': 100\n * }\n */\n\nfunction stripUnit(value) {\n  var unitlessValue = parseFloat(value);\n  if (isNaN(unitlessValue)) return value;\n  return unitlessValue;\n}\n\n//      \n\n/**\n * Factory function that creates pixel-to-x converters\n * @private\n */\nvar pxtoFactory = function pxtoFactory(to) {\n  return function (pxval) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '16px';\n\n    var newPxval = pxval;\n    var newBase = base;\n    if (typeof pxval === 'string') {\n      if (!endsWith(pxval, 'px')) {\n        throw new Error('Expected a string ending in \"px\" or a number passed as the first argument to ' + to + '(), got \"' + pxval + '\" instead.');\n      }\n      newPxval = stripUnit(pxval);\n    }\n\n    if (typeof base === 'string') {\n      if (!endsWith(base, 'px')) {\n        throw new Error('Expected a string ending in \"px\" or a number passed as the second argument to ' + to + '(), got \"' + base + '\" instead.');\n      }\n      newBase = stripUnit(base);\n    }\n\n    if (typeof newPxval === 'string') {\n      throw new Error('Passed invalid pixel value (\"' + pxval + '\") to ' + to + '(), please pass a value like \"12px\" or 12.');\n    }\n\n    if (typeof newBase === 'string') {\n      throw new Error('Passed invalid base value (\"' + base + '\") to ' + to + '(), please pass a value like \"12px\" or 12.');\n    }\n\n    return '' + newPxval / newBase + to;\n  };\n};\n\n//      \n/**\n * Convert pixel value to ems. The default base value is 16px, but can be changed by passing a\n * second argument to the function.\n * @function\n * @param {string|number} pxval\n * @param {string|number} [base='16px']\n * @example\n * // Styles as object usage\n * const styles = {\n *   'height': em('16px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   height: ${em('16px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'height': '1em'\n * }\n */\n\nvar em = /*#__PURE__*/pxtoFactory('em');\n\n//      \n\nvar ratioNames = {\n  minorSecond: 1.067,\n  majorSecond: 1.125,\n  minorThird: 1.2,\n  majorThird: 1.25,\n  perfectFourth: 1.333,\n  augFourth: 1.414,\n  perfectFifth: 1.5,\n  minorSixth: 1.6,\n  goldenSection: 1.618,\n  majorSixth: 1.667,\n  minorSeventh: 1.778,\n  majorSeventh: 1.875,\n  octave: 2,\n  majorTenth: 2.5,\n  majorEleventh: 2.667,\n  majorTwelfth: 3,\n  doubleOctave: 4\n\n  /** */\n\n  /**\n   * Establish consistent measurements and spacial relationships throughout your projects by incrementing up or down a defined scale. We provide a list of commonly used scales as pre-defined variables, see below.\n   * @example\n   * // Styles as object usage\n   * const styles = {\n   *    // Increment two steps up the default scale\n   *   'fontSize': modularScale(2)\n   * }\n   *\n   * // styled-components usage\n   * const div = styled.div`\n   *    // Increment two steps up the default scale\n   *   fontSize: ${modularScale(2)}\n   * `\n   *\n   * // CSS in JS Output\n   *\n   * element {\n   *   'fontSize': '1.77689em'\n   * }\n   */\n};function modularScale(steps) {\n  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1em';\n  var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'perfectFourth';\n\n  if (typeof steps !== 'number') {\n    throw new Error('Please provide a number of steps to the modularScale helper.');\n  }\n  if (typeof ratio === 'string' && !ratioNames[ratio]) {\n    throw new Error('Please pass a number or one of the predefined scales to the modularScale helper as the ratio.');\n  }\n\n  var realBase = typeof base === 'string' ? stripUnit(base) : base;\n  var realRatio = typeof ratio === 'string' ? ratioNames[ratio] : ratio;\n\n  if (typeof realBase === 'string') {\n    throw new Error('Invalid value passed as base to modularScale, expected number or em string but got \"' + base + '\"');\n  }\n\n  return realBase * Math.pow(realRatio, steps) + 'em';\n}\n\n//      \n\n/**\n * Convert pixel value to rems. The default base value is 16px, but can be changed by passing a\n * second argument to the function.\n * @function\n * @param {string|number} pxval\n * @param {string|number} [base='16px']\n * @example\n * // Styles as object usage\n * const styles = {\n *   'height': rem('16px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   height: ${rem('16px')}\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   'height': '1rem'\n * }\n */\n\nvar rem = /*#__PURE__*/pxtoFactory('rem');\n\n//      \n\n/**\n * CSS to contain a float (credit to CSSMojo).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *    ...clearFix(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${clearFix()}\n * `\n *\n * // CSS as JS Output\n *\n * '&::after': {\n *   'clear': 'both',\n *   'content': '\"\"',\n *   'display': 'table'\n * }\n */\n\nfunction clearFix() {\n  var _ref;\n\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '&';\n\n  var pseudoSelector = parent + '::after';\n  return _ref = {}, _ref[pseudoSelector] = {\n    clear: 'both',\n    content: '\"\"',\n    display: 'table'\n  }, _ref;\n}\n\n//      \n\n/**\n * CSS to represent truncated text with an ellipsis.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...ellipsis('250px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${ellipsis('250px')}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   'display': 'inline-block',\n *   'maxWidth': '250px',\n *   'overflow': 'hidden',\n *   'textOverflow': 'ellipsis',\n *   'whiteSpace': 'nowrap',\n *   'wordWrap': 'normal'\n * }\n */\n\nfunction ellipsis() {\n  var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '100%';\n\n  return {\n    display: 'inline-block',\n    maxWidth: width,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal'\n  };\n}\n\n//      \n\n/** */\n\nfunction generateFileReferences(fontFilePath, fileFormats) {\n  var fileFontReferences = fileFormats.map(function (format) {\n    return 'url(\"' + fontFilePath + '.' + format + '\")';\n  });\n  return fileFontReferences.join(', ');\n}\n\nfunction generateLocalReferences(localFonts) {\n  var localFontReferences = localFonts.map(function (font) {\n    return 'local(\"' + font + '\")';\n  });\n  return localFontReferences.join(', ');\n}\n\nfunction generateSources(fontFilePath, localFonts, fileFormats) {\n  var fontReferences = [];\n  if (localFonts) fontReferences.push(generateLocalReferences(localFonts));\n  if (fontFilePath) {\n    fontReferences.push(generateFileReferences(fontFilePath, fileFormats));\n  }\n  return fontReferences.join(', ');\n}\n\n/**\n * CSS for a @font-face declaration.\n *\n * @example\n * // Styles as object basic usage\n * const styles = {\n *    ...fontFace({\n *      'fontFamily': 'Sans-Pro'\n *      'fontFilePath': 'path/to/file'\n *    })\n * }\n *\n * // styled-components basic usage\n * injectGlobal`${\n *   fontFace({\n *     'fontFamily': 'Sans-Pro'\n *     'fontFilePath': 'path/to/file'\n *   }\n * )}`\n *\n * // CSS as JS Output\n *\n * '@font-face': {\n *   'fontFamily': 'Sans-Pro',\n *   'src': 'url(\"path/to/file.eot\"), url(\"path/to/file.woff2\"), url(\"path/to/file.woff\"), url(\"path/to/file.ttf\"), url(\"path/to/file.svg\")',\n * }\n */\n\nfunction fontFace(_ref) {\n  var fontFamily = _ref.fontFamily,\n      fontFilePath = _ref.fontFilePath,\n      fontStretch = _ref.fontStretch,\n      fontStyle = _ref.fontStyle,\n      fontVariant = _ref.fontVariant,\n      fontWeight = _ref.fontWeight,\n      _ref$fileFormats = _ref.fileFormats,\n      fileFormats = _ref$fileFormats === undefined ? ['eot', 'woff2', 'woff', 'ttf', 'svg'] : _ref$fileFormats,\n      localFonts = _ref.localFonts,\n      unicodeRange = _ref.unicodeRange;\n\n  // Error Handling\n  if (!fontFamily) throw new Error('fontFace expects a name of a font-family.');\n  if (!fontFilePath && !localFonts) {\n    throw new Error('fontFace expects either the path to the font file(s) or a name of a local copy.');\n  }\n  if (localFonts && !Array.isArray(localFonts)) {\n    throw new Error('fontFace expects localFonts to be an array.');\n  }\n  if (!Array.isArray(fileFormats)) {\n    throw new Error('fontFace expects fileFormats to be an array.');\n  }\n\n  var fontFaceDeclaration = {\n    '@font-face': {\n      fontFamily: fontFamily,\n      src: generateSources(fontFilePath, localFonts, fileFormats),\n      unicodeRange: unicodeRange,\n      fontStretch: fontStretch,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight\n    }\n\n    // Removes undefined fields for cleaner css object.\n  };return JSON.parse(JSON.stringify(fontFaceDeclaration));\n}\n\n//      \n\n/**\n * CSS to hide text to show a background image in a SEO-friendly way.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   'backgroundImage': 'url(logo.png)',\n *   ...hideText(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   backgroundImage: url(logo.png);\n *   ${hideText()};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'backgroundImage': 'url(logo.png)',\n *   'textIndent': '101%',\n *   'overflow': 'hidden',\n *   'whiteSpace': 'nowrap',\n * }\n */\n\nfunction hideText() {\n  return {\n    textIndent: '101%',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap'\n  };\n}\n\n//      \n\n/**\n * CSS to hide content visually but remain accessible to screen readers.\n * from [HTML5 Boilerplate](https://github.com/h5bp/html5-boilerplate/blob/9a176f57af1cfe8ec70300da4621fb9b07e5fa31/src/css/main.css#L121)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...hideVisually(),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${hideVisually()};\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'border': '0',\n *   'clip': 'rect(0 0 0 0)',\n *   'clipPath': 'inset(50%)',\n *   'height': '1px',\n *   'margin': '-1px',\n *   'overflow': 'hidden',\n *   'padding': '0',\n *   'position': 'absolute',\n *   'whiteSpace': 'nowrap',\n *   'width': '1px',\n * }\n */\n\nfunction hideVisually() {\n  return {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    width: '1px'\n  };\n}\n\n//      \n\n/**\n * Generates a media query to target HiDPI devices.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *  [hiDPI(1.5)]: {\n *    width: 200px;\n *  }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${hiDPI(1.5)} {\n *     width: 200px;\n *   }\n * `\n *\n * // CSS as JS Output\n *\n * '@media only screen and (-webkit-min-device-pixel-ratio: 1.5),\n *  only screen and (min--moz-device-pixel-ratio: 1.5),\n *  only screen and (-o-min-device-pixel-ratio: 1.5/1),\n *  only screen and (min-resolution: 144dpi),\n *  only screen and (min-resolution: 1.5dppx)': {\n *   'width': '200px',\n * }\n */\n\nfunction hiDPI() {\n  var ratio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.3;\n\n  return \"\\n    @media only screen and (-webkit-min-device-pixel-ratio: \" + ratio + \"),\\n    only screen and (min--moz-device-pixel-ratio: \" + ratio + \"),\\n    only screen and (-o-min-device-pixel-ratio: \" + ratio + \"/1),\\n    only screen and (min-resolution: \" + Math.round(ratio * 96) + \"dpi),\\n    only screen and (min-resolution: \" + ratio + \"dppx)\\n  \";\n}\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\nvar _opinionatedRules;\nvar _abbrTitle;\nvar _unopinionatedRules;\n\n//      \nvar opinionatedRules = (_opinionatedRules = {\n  html: {\n    fontFamily: 'sans-serif'\n  },\n\n  body: {\n    margin: '0'\n  }\n\n}, _opinionatedRules['a:active,\\n  a:hover'] = {\n  outlineWidth: '0'\n}, _opinionatedRules['button,\\n  input,\\n  optgroup,\\n  select,\\n  textarea'] = {\n  fontFamily: 'sans-serif',\n  fontSize: '100%',\n  lineHeight: '1.15'\n}, _opinionatedRules);\n\nvar unopinionatedRules = (_unopinionatedRules = {\n  html: {\n    lineHeight: '1.15',\n    textSizeAdjust: '100%'\n  }\n\n}, _unopinionatedRules['article,\\n  aside,\\n  footer,\\n  header,\\n  nav,\\n  section'] = {\n  display: 'block'\n}, _unopinionatedRules.h1 = {\n  fontSize: '2em',\n  margin: '0.67em 0'\n}, _unopinionatedRules['figcaption,\\n  figure,\\n  main'] = {\n  display: 'block'\n}, _unopinionatedRules.figure = {\n  margin: '1em 40px'\n}, _unopinionatedRules.hr = {\n  boxSizing: 'content-box',\n  height: '0',\n  overflow: 'visible'\n}, _unopinionatedRules.pre = {\n  fontFamily: 'monospace, monospace',\n  fontSize: '1em'\n}, _unopinionatedRules.a = {\n  'background-color': 'transparent',\n  '-webkit-text-decoration-skip': 'objects'\n}, _unopinionatedRules['abbr[title]'] = (_abbrTitle = {\n  borderBottom: 'none',\n  textDecoration: 'underline'\n}, _abbrTitle['textDecoration'] = 'underline dotted', _abbrTitle), _unopinionatedRules['b,\\n  strong'] = {\n  fontWeight: 'inherit'\n}, _unopinionatedRules['code,\\n  kbd,\\n  samp'] = {\n  fontFamily: 'monospace, monospace',\n  fontSize: '1em'\n}, _unopinionatedRules.dfn = {\n  fontStyle: 'italic'\n}, _unopinionatedRules.mark = {\n  backgroundColor: '#ff0',\n  color: '#000'\n}, _unopinionatedRules.small = {\n  fontSize: '80%'\n}, _unopinionatedRules['sub,\\n  sup'] = {\n  fontSize: '75%',\n  lineHeight: '0',\n  position: 'relative',\n  verticalAlign: 'baseline'\n}, _unopinionatedRules.sub = {\n  bottom: '-0.25em'\n}, _unopinionatedRules.sup = {\n  top: '-0.5em'\n}, _unopinionatedRules['audio,\\n  video'] = {\n  display: 'inline-block'\n}, _unopinionatedRules['audio:not([controls])'] = {\n  display: 'none',\n  height: '0'\n}, _unopinionatedRules.img = {\n  borderStyle: 'none'\n}, _unopinionatedRules['svg:not(:root)'] = {\n  overflow: 'hidden'\n}, _unopinionatedRules['button,\\n  input,\\n  optgroup,\\n  select,\\n  textarea'] = {\n  margin: '0'\n}, _unopinionatedRules['button,\\n  input'] = {\n  overflow: 'visible'\n}, _unopinionatedRules['button,\\n  select'] = {\n  textTransform: 'none'\n}, _unopinionatedRules['button,\\n  html [type=\"button\"],\\n  [type=\"reset\"],\\n  [type=\"submit\"]'] = {\n  '-webkit-appearance': 'button'\n}, _unopinionatedRules['button::-moz-focus-inner,\\n  [type=\"button\"]::-moz-focus-inner,\\n  [type=\"reset\"]::-moz-focus-inner,\\n  [type=\"submit\"]::-moz-focus-inner'] = {\n  borderStyle: 'none',\n  padding: '0'\n}, _unopinionatedRules['button:-moz-focusring,\\n  [type=\"button\"]:-moz-focusring,\\n  [type=\"reset\"]:-moz-focusring,\\n  [type=\"submit\"]:-moz-focusring'] = {\n  outline: '1px dotted ButtonText'\n}, _unopinionatedRules.fieldset = {\n  border: '1px solid #c0c0c0',\n  margin: '0 2px',\n  padding: '0.35em 0.625em 0.75em'\n}, _unopinionatedRules.legend = {\n  boxSizing: 'border-box',\n  color: 'inherit',\n  display: 'table',\n  maxWidth: '100%',\n  padding: '0',\n  whiteSpace: 'normal'\n}, _unopinionatedRules.progress = {\n  display: 'inline-block',\n  verticalAlign: 'baseline'\n}, _unopinionatedRules.textarea = {\n  overflow: 'auto'\n}, _unopinionatedRules['[type=\"checkbox\"],\\n  [type=\"radio\"]'] = {\n  boxSizing: 'border-box',\n  padding: '0'\n}, _unopinionatedRules['[type=\"number\"]::-webkit-inner-spin-button,\\n  [type=\"number\"]::-webkit-outer-spin-button'] = {\n  height: 'auto'\n}, _unopinionatedRules['[type=\"search\"]'] = {\n  '-webkit-appearance': 'textfield',\n  outlineOffset: '-2px'\n}, _unopinionatedRules['[type=\"search\"]::-webkit-search-cancel-button,\\n  [type=\"search\"]::-webkit-search-decoration'] = {\n  '-webkit-appearance': 'none'\n}, _unopinionatedRules['::-webkit-file-upload-button'] = {\n  '-webkit-appearance': 'button',\n  font: 'inherit'\n}, _unopinionatedRules['details,\\n  menu'] = {\n  display: 'block'\n}, _unopinionatedRules.summary = {\n  display: 'list-item'\n}, _unopinionatedRules.canvas = {\n  display: 'inline-block'\n}, _unopinionatedRules.template = {\n  display: 'none'\n}, _unopinionatedRules['[hidden]'] = {\n  display: 'none'\n}, _unopinionatedRules);\n\nfunction mergeRules(baseRules, additionalRules) {\n  var mergedRules = _extends({}, baseRules);\n  Object.keys(additionalRules).forEach(function (key) {\n    if (mergedRules[key]) {\n      mergedRules[key] = _extends({}, mergedRules[key], additionalRules[key]);\n    } else {\n      mergedRules[key] = _extends({}, additionalRules[key]);\n    }\n  });\n  return mergedRules;\n}\n\n/**\n * CSS to normalize abnormalities across browsers (normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css)\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *    ...normalize(),\n * }\n *\n * // styled-components usage\n * injectGlobal`${normalize()}`\n *\n * // CSS as JS Output\n *\n * html {\n *   fontFamily: 'sans-serif',\n *   lineHeight: 1.15,\n *   textSizeAdjust: 100%,\n * } ...\n */\nfunction normalize(excludeOpinionated) {\n  if (excludeOpinionated) return unopinionatedRules;\n  return mergeRules(unopinionatedRules, opinionatedRules);\n}\n\n//      \n\n/**\n * CSS to style the placeholder pseudo-element.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...placeholder({'color': 'blue'})\n * }\n *\n * // styled-components usage\n * const div = styled.input`\n *    ${placeholder({'color': 'blue'})}\n * `\n *\n * // CSS as JS Output\n *\n * 'input': {\n *   '&:-moz-placeholder': {\n *     'color': 'blue',\n *   },\n *   '&:-ms-input-placeholder': {\n *     'color': 'blue',\n *   },\n *   '&::-moz-placeholder': {\n *     'color': 'blue',\n *   },\n *   '&::-webkit-input-placeholder': {\n *     'color': 'blue',\n *   },\n * },\n */\n\nfunction placeholder(styles) {\n  var _ref;\n\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '&';\n\n  return _ref = {}, _ref[parent + '::-webkit-input-placeholder'] = _extends({}, styles), _ref[parent + ':-moz-placeholder'] = _extends({}, styles), _ref[parent + '::-moz-placeholder'] = _extends({}, styles), _ref[parent + ':-ms-input-placeholder'] = _extends({}, styles), _ref;\n}\n\nvar _templateObject = /*#__PURE__*/ taggedTemplateLiteralLoose(['radial-gradient(', '', '', '', ')'], ['radial-gradient(', '', '', '', ')']);\n\n//      \n\n/** */\n\nfunction parseFallback(colorStops) {\n  return colorStops[0].split(' ')[0];\n}\n\nfunction constructGradientValue(literals) {\n  var template = '';\n  for (var i = 0; i < literals.length; i += 1) {\n    template += literals[i];\n    // Adds leading coma if properties preceed color-stops\n    if (i === 3 && (arguments.length <= i + 1 ? undefined : arguments[i + 1]) && ((arguments.length <= 1 ? undefined : arguments[1]) || (arguments.length <= 2 ? undefined : arguments[2]) || (arguments.length <= 3 ? undefined : arguments[3]))) {\n      template = template.slice(0, -1);\n      template += ', ' + (arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n      // No trailing space if color-stops is the only param provided\n    } else if (i === 3 && (arguments.length <= i + 1 ? undefined : arguments[i + 1]) && !(arguments.length <= 1 ? undefined : arguments[1]) && !(arguments.length <= 2 ? undefined : arguments[2]) && !(arguments.length <= 3 ? undefined : arguments[3])) {\n      template += '' + (arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n      // Only adds substitution if it is defined\n    } else if (arguments.length <= i + 1 ? undefined : arguments[i + 1]) {\n      template += (arguments.length <= i + 1 ? undefined : arguments[i + 1]) + ' ';\n    }\n  }\n  return template.trim();\n}\n\n/**\n * CSS for declaring a radial gradient, including a fallback background-color. The fallback is either the first color-stop or an explicitly passed fallback color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...radialGradient({\n *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n *     extent: 'farthest-corner at 45px 45px',\n *     position: 'center',\n *     shape: 'ellipse',\n *   })\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${radialGradient({\n *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],\n *     extent: 'farthest-corner at 45px 45px',\n *     position: 'center',\n *     shape: 'ellipse',\n *   })}\n *`\n *\n * // CSS as JS Output\n *\n * div: {\n *   'backgroundColor': '#00FFFF',\n *   'backgroundImage': 'radial-gradient(center ellipse farthest-corner at 45px 45px, #00FFFF 0%, rgba(0, 0, 255, 0) 50%, #0000FF 95%)',\n * }\n */\n\nfunction radialGradient(_ref) {\n  var colorStops = _ref.colorStops,\n      extent = _ref.extent,\n      fallback = _ref.fallback,\n      position = _ref.position,\n      shape = _ref.shape;\n\n  if (!colorStops || colorStops.length < 2) {\n    throw new Error('radialGradient requries at least 2 color-stops to properly render.');\n  }\n  return {\n    backgroundColor: fallback || parseFallback(colorStops),\n    backgroundImage: constructGradientValue(_templateObject, position, shape, extent, colorStops.join(', '))\n  };\n}\n\n//      \n\n/**\n * A helper to generate a retina background image and non-retina\n * background image. The retina background image will output to a HiDPI media query. The mixin uses\n * a _2x.png filename suffix by default.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *  ...retinaImage('my-img')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${retinaImage('my-img')}\n * `\n *\n * // CSS as JS Output\n * div {\n *   backgroundImage: 'url(my-img.png)',\n *   '@media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n *    only screen and (min--moz-device-pixel-ratio: 1.3),\n *    only screen and (-o-min-device-pixel-ratio: 1.3/1),\n *    only screen and (min-resolution: 144dpi),\n *    only screen and (min-resolution: 1.5dppx)': {\n *     backgroundImage: 'url(my-img_2x.png)',\n *   }\n * }\n */\nfunction retinaImage(filename, backgroundSize) {\n  var extension = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'png';\n\n  var _ref;\n\n  var retinaFilename = arguments[3];\n  var retinaSuffix = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '_2x';\n\n  if (!filename) {\n    throw new Error('Please supply a filename to retinaImage() as the first argument.');\n  }\n  // Replace the dot at the beginning of the passed extension if one exists\n  var ext = extension.replace(/^\\./, '');\n  var rFilename = retinaFilename ? retinaFilename + '.' + ext : '' + filename + retinaSuffix + '.' + ext;\n\n  return _ref = {\n    backgroundImage: 'url(' + filename + '.' + ext + ')'\n  }, _ref[hiDPI()] = {\n    backgroundImage: 'url(' + rFilename + ')',\n    backgroundSize: backgroundSize\n  }, _ref;\n}\n\n//      \n\n/**\n * CSS to style the selection pseudo-element.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...selection({\n *     'backgroundColor': 'blue'\n *   }, 'section')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${selection({'backgroundColor': 'blue'}, 'section')}\n * `\n *\n * // CSS as JS Output\n *\n * 'div': {\n *   'section::-moz-selection': {\n *     'backgroundColor':'blue',\n *   },\n *   'section::selection': {\n *     'backgroundColor': 'blue',\n *   }\n * }\n */\n\nfunction selection(styles) {\n  var _ref;\n\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  return _ref = {}, _ref[parent + '::-moz-selection'] = _extends({}, styles), _ref[parent + '::selection'] = _extends({}, styles), _ref;\n}\n\n//      \n\n/* eslint-disable key-spacing */\nvar functionsMap = {\n  easeInBack: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  easeInCirc: 'cubic-bezier(0.600,  0.040, 0.980, 0.335)',\n  easeInCubic: 'cubic-bezier(0.550,  0.055, 0.675, 0.190)',\n  easeInExpo: 'cubic-bezier(0.950,  0.050, 0.795, 0.035)',\n  easeInQuad: 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n  easeInQuart: 'cubic-bezier(0.895,  0.030, 0.685, 0.220)',\n  easeInQuint: 'cubic-bezier(0.755,  0.050, 0.855, 0.060)',\n  easeInSine: 'cubic-bezier(0.470,  0.000, 0.745, 0.715)',\n\n  easeOutBack: 'cubic-bezier(0.175,  0.885, 0.320, 1.275)',\n  easeOutCubic: 'cubic-bezier(0.215,  0.610, 0.355, 1.000)',\n  easeOutCirc: 'cubic-bezier(0.075,  0.820, 0.165, 1.000)',\n  easeOutExpo: 'cubic-bezier(0.190,  1.000, 0.220, 1.000)',\n  easeOutQuad: 'cubic-bezier(0.250,  0.460, 0.450, 0.940)',\n  easeOutQuart: 'cubic-bezier(0.165,  0.840, 0.440, 1.000)',\n  easeOutQuint: 'cubic-bezier(0.230,  1.000, 0.320, 1.000)',\n  easeOutSine: 'cubic-bezier(0.390,  0.575, 0.565, 1.000)',\n\n  easeInOutBack: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  easeInOutCirc: 'cubic-bezier(0.785,  0.135, 0.150, 0.860)',\n  easeInOutCubic: 'cubic-bezier(0.645,  0.045, 0.355, 1.000)',\n  easeInOutExpo: 'cubic-bezier(1.000,  0.000, 0.000, 1.000)',\n  easeInOutQuad: 'cubic-bezier(0.455,  0.030, 0.515, 0.955)',\n  easeInOutQuart: 'cubic-bezier(0.770,  0.000, 0.175, 1.000)',\n  easeInOutQuint: 'cubic-bezier(0.860,  0.000, 0.070, 1.000)',\n  easeInOutSine: 'cubic-bezier(0.445,  0.050, 0.550, 0.950)'\n  /* eslint-enable key-spacing */\n\n  /** */\n\n  /**\n   * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).\n   *\n   * @example\n   * // Styles as object usage\n   * const styles = {\n   *   'transitionTimingFunction': timingFunctions('easeInQuad')\n   * }\n   *\n   * // styled-components usage\n   *  const div = styled.div`\n   *   transitionTimingFunction: ${timingFunctions('easeInQuad')};\n   * `\n   *\n   * // CSS as JS Output\n   *\n   * 'div': {\n   *   'transitionTimingFunction': 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',\n   * }\n   */\n\n};function timingFunctions(timingFunction) {\n  return functionsMap[timingFunction];\n}\n\n//      \n\n/** */\n\nvar getBorderWidth = function getBorderWidth(pointingDirection, height, width) {\n  switch (pointingDirection) {\n    case 'top':\n      return '0 ' + width / 2 + 'px ' + height + 'px ' + width / 2 + 'px';\n    case 'left':\n      return height / 2 + 'px ' + width + 'px ' + height / 2 + 'px 0';\n    case 'bottom':\n      return height + 'px ' + width / 2 + 'px 0 ' + width / 2 + 'px';\n    case 'right':\n      return height / 2 + 'px 0 ' + height / 2 + 'px ' + width + 'px';\n\n    default:\n      throw new Error(\"Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\");\n  }\n};\n\n// needed for border-color\nvar reverseDirection = {\n  left: 'Right',\n  right: 'Left',\n  top: 'Bottom',\n  bottom: 'Top'\n\n  /**\n   * CSS to represent triangle with any pointing direction with an optional background color. Accepts number or px values for height and width.\n   *\n   * @example\n   * // Styles as object usage\n   *\n   * const styles = {\n   *   ...triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })\n   * }\n   *\n   *\n   * // styled-components usage\n   * const div = styled.div`\n   *   ${triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })}\n   *\n   *\n   * // CSS as JS Output\n   *\n   * div: {\n   *  'borderColor': 'transparent',\n   *  'borderLeftColor': 'red !important',\n   *  'borderStyle': 'solid',\n   *  'borderWidth': '50px 0 50px 100px',\n   *  'height': '0',\n   *  'width': '0',\n   * }\n   */\n\n};function triangle(_ref) {\n  var _ref2;\n\n  var pointingDirection = _ref.pointingDirection,\n      height = _ref.height,\n      width = _ref.width,\n      foregroundColor = _ref.foregroundColor,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === undefined ? 'transparent' : _ref$backgroundColor;\n\n  var unitlessHeight = parseFloat(height);\n  var unitlessWidth = parseFloat(width);\n  if (isNaN(unitlessHeight) || isNaN(unitlessWidth)) {\n    throw new Error('Passed an invalid value to `height` or `width`. Please provide a pixel based unit');\n  }\n\n  return _ref2 = {\n    borderColor: backgroundColor,\n    width: '0',\n    height: '0',\n    borderWidth: getBorderWidth(pointingDirection, unitlessHeight, unitlessWidth),\n    borderStyle: 'solid'\n  }, _ref2['border' + reverseDirection[pointingDirection] + 'Color'] = foregroundColor + ' !important', _ref2;\n}\n\n//      \n\n/**\n * Provides an easy way to change the `wordWrap` property.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...wordWrap('break-word')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${wordWrap('break-word')}\n * `\n *\n * // CSS as JS Output\n *\n * const styles = {\n *   overflowWrap: 'break-word',\n *   wordWrap: 'break-word',\n *   wordBreak: 'break-all',\n * }\n */\n\nfunction wordWrap() {\n  var wrap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'break-word';\n\n  var wordBreak = wrap === 'break-word' ? 'break-all' : wrap;\n  return {\n    overflowWrap: wrap,\n    wordWrap: wrap,\n    wordBreak: wordBreak\n  };\n}\n\n//      \n\n\nfunction colorToInt(color) {\n  return Math.round(color * 255);\n}\n\nfunction convertToInt(red, green, blue) {\n  return colorToInt(red) + \",\" + colorToInt(green) + \",\" + colorToInt(blue);\n}\n\nfunction hslToRgb(hue, saturation, lightness) {\n  var convert = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : convertToInt;\n\n  if (saturation === 0) {\n    // achromatic\n    return convert(lightness, lightness, lightness);\n  }\n\n  // formular from https://en.wikipedia.org/wiki/HSL_and_HSV\n  var huePrime = hue % 360 / 60;\n  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;\n  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  var lightnessModification = lightness - chroma / 2;\n  var finalRed = red + lightnessModification;\n  var finalGreen = green + lightnessModification;\n  var finalBlue = blue + lightnessModification;\n  return convert(finalRed, finalGreen, finalBlue);\n}\n\n//      \nvar namedColorMap = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '00ffff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '0000ff',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '00ffff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'ff00ff',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '639',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n\n  /**\n   * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n   * @private\n   */\n};function nameToHex(color) {\n  if (typeof color !== 'string') return color;\n  var normalizedColorName = color.toLowerCase();\n  return namedColorMap[normalizedColorName] ? '#' + namedColorMap[normalizedColorName] : color;\n}\n\n//      \nvar hexRegex = /^#[a-fA-F0-9]{6}$/;\nvar reducedHexRegex = /^#[a-fA-F0-9]{3}$/;\nvar rgbRegex = /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/;\nvar rgbaRegex = /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([-+]?[0-9]*[.]?[0-9]+)\\s*\\)$/;\nvar hslRegex = /^hsl\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*\\)$/;\nvar hslaRegex = /^hsla\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*,\\s*([-+]?[0-9]*[.]?[0-9]+)\\s*\\)$/;\n\n/**\n * Returns an RgbColor or RgbaColor object. This utility function is only useful\n * if want to extract a color component. With the color util `toColorString` you\n * can convert a RgbColor or RgbaColor object back to a string.\n *\n * @example\n * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1\n * const color1 = 'rgb(255, 0, 0)';\n * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2\n * const color2 = 'hsla(210, 10%, 40%, 0.75)';\n */\nfunction parseToRgb(color) {\n  if (typeof color !== 'string') {\n    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');\n  }\n  var normalizedColor = nameToHex(color);\n  if (normalizedColor.match(hexRegex)) {\n    return {\n      red: parseInt('' + normalizedColor[1] + normalizedColor[2], 16),\n      green: parseInt('' + normalizedColor[3] + normalizedColor[4], 16),\n      blue: parseInt('' + normalizedColor[5] + normalizedColor[6], 16)\n    };\n  }\n  if (normalizedColor.match(reducedHexRegex)) {\n    return {\n      red: parseInt('' + normalizedColor[1] + normalizedColor[1], 16),\n      green: parseInt('' + normalizedColor[2] + normalizedColor[2], 16),\n      blue: parseInt('' + normalizedColor[3] + normalizedColor[3], 16)\n    };\n  }\n  var rgbMatched = rgbRegex.exec(normalizedColor);\n  if (rgbMatched) {\n    return {\n      red: parseInt('' + rgbMatched[1], 10),\n      green: parseInt('' + rgbMatched[2], 10),\n      blue: parseInt('' + rgbMatched[3], 10)\n    };\n  }\n  var rgbaMatched = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatched) {\n    return {\n      red: parseInt('' + rgbaMatched[1], 10),\n      green: parseInt('' + rgbaMatched[2], 10),\n      blue: parseInt('' + rgbaMatched[3], 10),\n      alpha: parseFloat('' + rgbaMatched[4])\n    };\n  }\n  var hslMatched = hslRegex.exec(normalizedColor);\n  if (hslMatched) {\n    var hue = parseInt('' + hslMatched[1], 10);\n    var saturation = parseInt('' + hslMatched[2], 10) / 100;\n    var lightness = parseInt('' + hslMatched[3], 10) / 100;\n    var rgbColorString = 'rgb(' + hslToRgb(hue, saturation, lightness) + ')';\n    var hslRgbMatched = rgbRegex.exec(rgbColorString);\n    if (!hslRgbMatched) {\n      throw new Error('Couldn\\'t generate valid rgb string from ' + normalizedColor + ', it returned ' + rgbColorString + '.');\n    }\n    return {\n      red: parseInt('' + hslRgbMatched[1], 10),\n      green: parseInt('' + hslRgbMatched[2], 10),\n      blue: parseInt('' + hslRgbMatched[3], 10)\n    };\n  }\n  var hslaMatched = hslaRegex.exec(normalizedColor);\n  if (hslaMatched) {\n    var _hue = parseInt('' + hslaMatched[1], 10);\n    var _saturation = parseInt('' + hslaMatched[2], 10) / 100;\n    var _lightness = parseInt('' + hslaMatched[3], 10) / 100;\n    var _rgbColorString = 'rgb(' + hslToRgb(_hue, _saturation, _lightness) + ')';\n    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);\n    if (!_hslRgbMatched) {\n      throw new Error('Couldn\\'t generate valid rgb string from ' + normalizedColor + ', it returned ' + _rgbColorString + '.');\n    }\n    return {\n      red: parseInt('' + _hslRgbMatched[1], 10),\n      green: parseInt('' + _hslRgbMatched[2], 10),\n      blue: parseInt('' + _hslRgbMatched[3], 10),\n      alpha: parseFloat('' + hslaMatched[4])\n    };\n  }\n  throw new Error(\"Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\");\n}\n\n//      \n\n\nfunction rgbToHsl(color) {\n  // make sure rgb are contained in a set of [0, 255]\n  var red = color.red / 255;\n  var green = color.green / 255;\n  var blue = color.blue / 255;\n\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2;\n\n  if (max === min) {\n    // achromatic\n    if (color.alpha !== undefined) {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness,\n        alpha: color.alpha\n      };\n    } else {\n      return { hue: 0, saturation: 0, lightness: lightness };\n    }\n  }\n\n  var hue = void 0;\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  switch (max) {\n    case red:\n      hue = (green - blue) / delta + (green < blue ? 6 : 0);\n      break;\n    case green:\n      hue = (blue - red) / delta + 2;\n      break;\n    default:\n      // blue case\n      hue = (red - green) / delta + 4;\n      break;\n  }\n\n  hue *= 60;\n  if (color.alpha !== undefined) {\n    return {\n      hue: hue,\n      saturation: saturation,\n      lightness: lightness,\n      alpha: color.alpha\n    };\n  }\n  return { hue: hue, saturation: saturation, lightness: lightness };\n}\n\n//      \n\n/**\n * Returns an HslColor or HslaColor object. This utility function is only useful\n * if want to extract a color component. With the color util `toColorString` you\n * can convert a HslColor or HslaColor object back to a string.\n *\n * @example\n * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1\n * const color1 = 'rgb(255, 0, 0)';\n * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2\n * const color2 = 'hsla(210, 10%, 40%, 0.75)';\n */\nfunction parseToHsl(color) {\n  // Note: At a later stage we can optimize this function as right now a hsl\n  // color would be parsed converted to rgb values and converted back to hsl.\n  return rgbToHsl(parseToRgb(color));\n}\n\n//      \n\n/**\n * Reduces hex values if possible e.g. #ff8866 to #f86\n * @private\n */\nvar reduceHexValue = function reduceHexValue(value) {\n  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {\n    return \"#\" + value[1] + value[3] + value[5];\n  }\n  return value;\n};\n\n//      \nfunction numberToHex(value) {\n  var hex = value.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgb(255, 205, 100),\n *   background: rgb({ red: 255, green: 205, blue: 100 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgb(255, 205, 100)};\n *   background: ${rgb({ red: 255, green: 205, blue: 100 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffcd64\";\n *   background: \"#ffcd64\";\n * }\n */\nfunction rgb(value, green, blue) {\n  if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {\n    return reduceHexValue('#' + numberToHex(value) + numberToHex(green) + numberToHex(blue));\n  } else if (typeof value === 'object' && green === undefined && blue === undefined) {\n    return reduceHexValue('#' + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));\n  }\n\n  throw new Error('Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).');\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: rgba(255, 205, 100, 0.7),\n *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),\n *   background: rgba(255, 205, 100, 1),\n *   background: rgba('#ffffff', 0.4),\n *   background: rgba('black', 0.7),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${rgba(255, 205, 100, 0.7)};\n *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};\n *   background: ${rgba(255, 205, 100, 1)};\n *   background: ${rgba('#ffffff', 0.4)};\n *   background: ${rgba('black', 0.7)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(255,205,100,0.7)\";\n *   background: \"rgba(255,205,100,0.7)\";\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,255,255,0.4)\";\n *   background: \"rgba(0,0,0,0.7)\";\n * }\n */\nfunction rgba(firstValue, secondValue, thirdValue, fourthValue) {\n  if (typeof firstValue === 'string' && typeof secondValue === 'number') {\n    var rgbValue = parseToRgb(firstValue);\n    return 'rgba(' + rgbValue.red + ',' + rgbValue.green + ',' + rgbValue.blue + ',' + secondValue + ')';\n  } else if (typeof firstValue === 'number' && typeof secondValue === 'number' && typeof thirdValue === 'number' && typeof fourthValue === 'number') {\n    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : 'rgba(' + firstValue + ',' + secondValue + ',' + thirdValue + ',' + fourthValue + ')';\n  } else if (typeof firstValue === 'object' && secondValue === undefined && thirdValue === undefined && fourthValue === undefined) {\n    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : 'rgba(' + firstValue.red + ',' + firstValue.green + ',' + firstValue.blue + ',' + firstValue.alpha + ')';\n  }\n\n  throw new Error('Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).');\n}\n\n//      \nfunction colorToHex(color) {\n  return numberToHex(Math.round(color * 255));\n}\n\nfunction convertToHex(red, green, blue) {\n  return reduceHexValue('#' + colorToHex(red) + colorToHex(green) + colorToHex(blue));\n}\n\nfunction hslToHex(hue, saturation, lightness) {\n  return hslToRgb(hue, saturation, lightness, convertToHex);\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsl(359, 0.75, 0.4),\n *   background: hsl({ hue: 360, saturation: 0.75, lightness: 0.4 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsl(359, 0.75, 0.4)};\n *   background: ${hsl({ hue: 360, saturation: 0.75, lightness: 0.4 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#b3191c\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsl(value, saturation, lightness) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number') {\n    return hslToHex(value, saturation, lightness);\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined) {\n    return hslToHex(value.hue, value.saturation, value.lightness);\n  }\n\n  throw new Error('Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).');\n}\n\n//      \n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsla(359, 0.75, 0.4, 0.7),\n *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),\n *   background: hsla(359, 0.75, 0.4, 1),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsla(359, 0.75, 0.4, 0.7)};\n *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};\n *   background: ${hsla(359, 0.75, 0.4, 1)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsla(value, saturation, lightness, alpha) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number' && typeof alpha === 'number') {\n    return alpha >= 1 ? hslToHex(value, saturation, lightness) : 'rgba(' + hslToRgb(value, saturation, lightness) + ',' + alpha + ')';\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined && alpha === undefined) {\n    return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : 'rgba(' + hslToRgb(value.hue, value.saturation, value.lightness) + ',' + value.alpha + ')';\n  }\n\n  throw new Error('Passed invalid arguments to hsla, please pass multiple numbers e.g. hsl(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).');\n}\n\n//      \nvar isRgb = function isRgb(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isRgba = function isRgba(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && typeof color.alpha === 'number';\n};\n\nvar isHsl = function isHsl(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isHsla = function isHsla(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && typeof color.alpha === 'number';\n};\n\nvar errMsg = 'Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.';\n\n/**\n * Converts a RgbColor, RgbaColor, HslColor or HslaColor object to a color string.\n * This util is useful in case you only know on runtime which color object is\n * used. Otherwise we recommend to rely on `rgb`, `rgba`, `hsl` or `hsla`.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: toColorString({ red: 255, green: 205, blue: 100 }),\n *   background: toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),\n *   background: toColorString({ hue: 240, saturation: 1, lightness: 0.5 }),\n *   background: toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${toColorString({ red: 255, green: 205, blue: 100 })};\n *   background: ${toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};\n *   background: ${toColorString({ hue: 240, saturation: 1, lightness: 0.5 })};\n *   background: ${toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,205,100,0.72)\";\n *   background: \"#00f\";\n *   background: \"rgba(179,25,25,0.72)\";\n * }\n */\n\nfunction toColorString(color) {\n  if (typeof color !== 'object') throw new Error(errMsg);\n  if (isRgba(color)) return rgba(color);\n  if (isRgb(color)) return rgb(color);\n  if (isHsla(color)) return hsla(color);\n  if (isHsl(color)) return hsl(color);\n\n  throw new Error(errMsg);\n}\n\n//      \n\n// Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n// eslint-disable-next-line no-unused-vars\n\n// eslint-disable-next-line no-redeclare\n\n\nfunction curried(f, length, acc) {\n  return function fn() {\n    // eslint-disable-next-line prefer-rest-params\n    var combined = acc.concat(Array.prototype.slice.call(arguments));\n    return combined.length >= length ? f.apply(this, combined) : curried(f, length, combined);\n  };\n}\n\n// eslint-disable-next-line no-redeclare\nfunction curry(f) {\n  // eslint-disable-line no-redeclare\n  return curried(f, f.length, []);\n}\n\n//      \n\n/**\n * Changes the hue of the color. Hue is a number between 0 to 360. The first\n * argument for adjustHue is the amount of degrees the color is rotated along\n * the color wheel.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: adjustHue(180, '#448'),\n *   background: adjustHue(180, 'rgba(101,100,205,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${adjustHue(180, '#448')};\n *   background: ${adjustHue(180, 'rgba(101,100,205,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#888844\";\n *   background: \"rgba(136,136,68,0.7)\";\n * }\n */\nfunction adjustHue(degree, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    hue: (hslColor.hue + degree) % 360\n  }));\n}\n\nvar curriedAdjustHue = /*#__PURE__*/curry(adjustHue);\n\n//      \n\n/**\n * Returns the complement of the provided color. This is identical to adjustHue(180, <color>).\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: complement('#448'),\n *   background: complement('rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${complement('#448')};\n *   background: ${complement('rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#884\";\n *   background: \"rgba(153,153,153,0.7)\";\n * }\n */\nfunction complement(color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    hue: (hslColor.hue + 180) % 360\n  }));\n}\n\n//      \n\nfunction guard(lowerBoundary, upperBoundary, value) {\n  return Math.max(lowerBoundary, Math.min(upperBoundary, value));\n}\n\n//      \n\n/**\n * Returns a string value for the darkened color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: darken(0.2, '#FFCD64'),\n *   background: darken(0.2, 'rgba(255,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${darken(0.2, '#FFCD64')};\n *   background: ${darken(0.2, 'rgba(255,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#ffbd31\";\n *   background: \"rgba(255,189,49,0.7)\";\n * }\n */\nfunction darken(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    lightness: guard(0, 1, hslColor.lightness - amount)\n  }));\n}\n\nvar curriedDarken = /*#__PURE__*/curry(darken);\n\n//      \n\n/**\n * Decreases the intensity of a color. Its range is between 0 to 1. The first\n * argument of the desaturate function is the amount by how much the color\n * intensity should be decreased.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: desaturate(0.2, '#CCCD64'),\n *   background: desaturate(0.2, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${desaturate(0.2, '#CCCD64')};\n *   background: ${desaturate(0.2, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#b8b979\";\n *   background: \"rgba(184,185,121,0.7)\";\n * }\n */\nfunction desaturate(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    saturation: guard(0, 1, hslColor.saturation - amount)\n  }));\n}\n\nvar curriedDesaturate = /*#__PURE__*/curry(desaturate);\n\n//      \n/**\n * Returns a number (float) representing the luminance of a color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff',\n *   background: getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)',\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff'};\n *   background: ${getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?\n *                             'rgba(58, 133, 255, 1)' :\n *                             'rgba(255, 57, 149, 1)'};\n *\n * // CSS in JS Output\n *\n * div {\n *   background: \"#CCCD64\";\n *   background: \"rgba(58, 133, 255, 1)\";\n * }\n */\nfunction getLuminance(color) {\n  var rgbColor = parseToRgb(color);\n\n  var _Object$keys$map = Object.keys(rgbColor).map(function (key) {\n    var channel = rgbColor[key] / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }),\n      r = _Object$keys$map[0],\n      g = _Object$keys$map[1],\n      b = _Object$keys$map[2];\n\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\n//      \n\n/**\n * Converts the color to a grayscale, by reducing its saturation to 0.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: grayscale('#CCCD64'),\n *   background: grayscale('rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${grayscale('#CCCD64')};\n *   background: ${grayscale('rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#999\";\n *   background: \"rgba(153,153,153,0.7)\";\n * }\n */\nfunction grayscale(color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    saturation: 0\n  }));\n}\n\n//      \n\n/**\n * Inverts the red, green and blue values of a color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: invert('#CCCD64'),\n *   background: invert('rgba(101,100,205,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${invert('#CCCD64')};\n *   background: ${invert('rgba(101,100,205,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#33329b\";\n *   background: \"rgba(154,155,50,0.7)\";\n * }\n */\nfunction invert(color) {\n  // parse color string to rgb\n  var value = parseToRgb(color);\n  return toColorString(_extends({}, value, {\n    red: 255 - value.red,\n    green: 255 - value.green,\n    blue: 255 - value.blue\n  }));\n}\n\n//      \n\n/**\n * Returns a string value for the lightened color.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: lighten(0.2, '#CCCD64'),\n *   background: lighten(0.2, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${lighten(0.2, '#FFCD64')};\n *   background: ${lighten(0.2, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#e5e6b1\";\n *   background: \"rgba(229,230,177,0.7)\";\n * }\n */\nfunction lighten(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    lightness: guard(0, 1, hslColor.lightness + amount)\n  }));\n}\n\nvar curriedLighten = /*#__PURE__*/curry(lighten);\n\n//      \n\n/**\n * Mixes two colors together by calculating the average of each of the RGB components.\n *\n * By default the weight is 0.5 meaning that half of the first color and half the second\n * color should be used. Optionally the weight can be modified by providing a number\n * as the first argument. 0.25 means that a quarter of the first color and three quarters\n * of the second color should be used.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: mix(0.5, '#f00', '#00f')\n *   background: mix(0.25, '#f00', '#00f')\n *   background: mix(0.5, 'rgba(255, 0, 0, 0.5)', '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${mix(0.5, '#f00', '#00f')};\n *   background: ${mix(0.25, '#f00', '#00f')};\n *   background: ${mix(0.5, 'rgba(255, 0, 0, 0.5)', '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#7f007f\";\n *   background: \"#3f00bf\";\n *   background: \"rgba(63, 0, 191, 0.75)\";\n * }\n */\nfunction mix() {\n  var weight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n  var color = arguments[1];\n  var otherColor = arguments[2];\n\n  var parsedColor1 = parseToRgb(color);\n  var color1 = _extends({}, parsedColor1, {\n    alpha: typeof parsedColor1.alpha === 'number' ? parsedColor1.alpha : 1\n  });\n\n  var parsedColor2 = parseToRgb(otherColor);\n  var color2 = _extends({}, parsedColor2, {\n    alpha: typeof parsedColor2.alpha === 'number' ? parsedColor2.alpha : 1\n\n    // The formular is copied from the original Sass implementation:\n    // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  });var alphaDelta = color1.alpha - color2.alpha;\n  var x = weight * 2 - 1;\n  var y = x * alphaDelta === -1 ? x : x + alphaDelta;\n  var z = 1 + x * alphaDelta;\n  var weight1 = (y / z + 1) / 2.0;\n  var weight2 = 1 - weight1;\n\n  var mixedColor = {\n    red: Math.floor(color1.red * weight1 + color2.red * weight2),\n    green: Math.floor(color1.green * weight1 + color2.green * weight2),\n    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),\n    alpha: color1.alpha + (color2.alpha - color1.alpha) * (weight / 1.0)\n  };\n\n  return rgba(mixedColor);\n}\n\nvar curriedMix = /*#__PURE__*/curry(mix);\n\n//      \n/**\n * Increases the opacity of a color. Its range for the amount is between 0 to 1.\n *\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: opacify(0.1, 'rgba(255, 255, 255, 0.9)');\n *   background: opacify(0.2, 'hsla(0, 0%, 100%, 0.5)'),\n *   background: opacify(0.5, 'rgba(255, 0, 0, 0.2)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${opacify(0.1, 'rgba(255, 255, 255, 0.9)')};\n *   background: ${opacify(0.2, 'hsla(0, 0%, 100%, 0.5)')},\n *   background: ${opacify(0.5, 'rgba(255, 0, 0, 0.2)')},\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#fff\";\n *   background: \"rgba(255,255,255,0.7)\";\n *   background: \"rgba(255,0,0,0.7)\";\n * }\n */\nfunction opacify(amount, color) {\n  var parsedColor = parseToRgb(color);\n  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;\n  var colorWithAlpha = _extends({}, parsedColor, {\n    alpha: guard(0, 1, (alpha * 100 + amount * 100) / 100)\n  });\n  return rgba(colorWithAlpha);\n}\n\nvar curriedOpacify = /*#__PURE__*/curry(opacify);\n\n//      \n/**\n * Selects black or white for best contrast depending on the luminosity of the given color.\n * Follows W3C specs for readability at https://www.w3.org/TR/WCAG20-TECHS/G18.html\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   color: readableColor('#000'),\n *   color: readableColor('papayawhip'),\n *   color: readableColor('rgb(255,0,0)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   color: ${readableColor('#000')};\n *   color: ${readableColor('papayawhip')};\n *   color: ${readableColor('rgb(255,0,0)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   color: \"#fff\";\n *   color: \"#fff\";\n *   color: \"#000\";\n * }\n */\n\nfunction readableColor(color) {\n  return getLuminance(color) > 0.179 ? '#000' : '#fff';\n}\n\nvar curriedReadableColor = /*#__PURE__*/curry(readableColor);\n\n//      \n\n/**\n * Increases the intensity of a color. Its range is between 0 to 1. The first\n * argument of the saturate function is the amount by how much the color\n * intensity should be increased.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: saturate(0.2, '#CCCD64'),\n *   background: saturate(0.2, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${saturate(0.2, '#FFCD64')};\n *   background: ${saturate(0.2, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#e0e250\";\n *   background: \"rgba(224,226,80,0.7)\";\n * }\n */\nfunction saturate(amount, color) {\n  var hslColor = parseToHsl(color);\n  return toColorString(_extends({}, hslColor, {\n    saturation: guard(0, 1, hslColor.saturation + amount)\n  }));\n}\n\nvar curriedSaturate = /*#__PURE__*/curry(saturate);\n\n//      \n\n/**\n * Sets the hue of a color to the provided value. The hue range can be\n * from 0 and 359.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setHue(42, '#CCCD64'),\n *   background: setHue(244, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setHue(42, '#CCCD64')};\n *   background: ${setHue(244, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#cdae64\";\n *   background: \"rgba(107,100,205,0.7)\";\n * }\n */\nfunction setHue(hue, color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    hue: hue\n  }));\n}\n\nvar curriedSetHue = /*#__PURE__*/curry(setHue);\n\n//      \n\n/**\n * Sets the lightness of a color to the provided value. The lightness range can be\n * from 0 and 1.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setLightness(0.2, '#CCCD64'),\n *   background: setLightness(0.75, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setLightness(0.2, '#CCCD64')};\n *   background: ${setLightness(0.75, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#4d4d19\";\n *   background: \"rgba(223,224,159,0.7)\";\n * }\n */\nfunction setLightness(lightness, color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    lightness: lightness\n  }));\n}\n\nvar curriedSetLightness = /*#__PURE__*/curry(setLightness);\n\n//      \n\n/**\n * Sets the saturation of a color to the provided value. The lightness range can be\n * from 0 and 1.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: setSaturation(0.2, '#CCCD64'),\n *   background: setSaturation(0.75, 'rgba(204,205,100,0.7)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${setSaturation(0.2, '#CCCD64')};\n *   background: ${setSaturation(0.75, 'rgba(204,205,100,0.7)')};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#adad84\";\n *   background: \"rgba(228,229,76,0.7)\";\n * }\n */\nfunction setSaturation(saturation, color) {\n  return toColorString(_extends({}, parseToHsl(color), {\n    saturation: saturation\n  }));\n}\n\nvar curriedSetSaturation = /*#__PURE__*/curry(setSaturation);\n\n//      \n\n/**\n * Shades a color by mixing it with black. `shade` can produce\n * hue shifts, where as `darken` manipulates the luminance channel and therefore\n * doesn't produce hue shifts.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: shade(0.25, '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${shade(0.25, '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#00003f\";\n * }\n */\n\nfunction shade(percentage, color) {\n  if (typeof percentage !== 'number' || percentage > 1 || percentage < -1) {\n    throw new Error('Passed an incorrect argument to shade, please pass a percentage less than or equal to 1 and larger than or equal to -1.');\n  }\n  if (typeof color !== 'string') {\n    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');\n  }\n  return curriedMix(percentage, color, 'rgb(0, 0, 0)');\n}\n\nvar curriedShade = /*#__PURE__*/curry(shade);\n\n//      \n\n/**\n * Tints a color by mixing it with white. `tint` can produce\n * hue shifts, where as `lighten` manipulates the luminance channel and therefore\n * doesn't produce hue shifts.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: tint(0.25, '#00f')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${tint(0.25, '#00f')};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#bfbfff\";\n * }\n */\n\nfunction tint(percentage, color) {\n  if (typeof percentage !== 'number' || percentage > 1 || percentage < -1) {\n    throw new Error('Passed an incorrect argument to tint, please pass a percentage less than or equal to 1 and larger than or equal to -1.');\n  }\n  if (typeof color !== 'string') {\n    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');\n  }\n  return curriedMix(percentage, color, 'rgb(255, 255, 255)');\n}\n\nvar curriedTint = /*#__PURE__*/curry(tint);\n\n//      \n/**\n * Decreases the opacity of a color. Its range for the amount is between 0 to 1.\n *\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: transparentize(0.1, '#fff');\n *   background: transparentize(0.2, 'hsl(0, 0%, 100%)'),\n *   background: transparentize(0.5, 'rgba(255, 0, 0, 0.8)'),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${transparentize(0.1, '#fff')};\n *   background: ${transparentize(0.2, 'hsl(0, 0%, 100%)')},\n *   background: ${transparentize(0.5, 'rgba(255, 0, 0, 0.8)')},\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(255,255,255,0.9)\";\n *   background: \"rgba(255,255,255,0.8)\";\n *   background: \"rgba(255,0,0,0.3)\";\n * }\n */\nfunction transparentize(amount, color) {\n  var parsedColor = parseToRgb(color);\n  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;\n  var colorWithAlpha = _extends({}, parsedColor, {\n    alpha: guard(0, 1, (alpha * 100 - amount * 100) / 100)\n  });\n  return rgba(colorWithAlpha);\n}\n\nvar curriedTransparentize = /*#__PURE__*/curry(transparentize);\n\n//      \n\n/** */\n\n/**\n * Shorthand for easily setting the animation property. Allows either multiple arrays with animations\n * or a single animation spread over the arguments.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out, colorchange 2s'\n * }\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation('rotate', '1s', 'ease-in-out')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation('rotate', '1s', 'ease-in-out')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out'\n * }\n */\nfunction animation() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Allow single or multiple animations passed\n  var multiMode = Array.isArray(args[0]);\n  if (!multiMode && args.length > 8) {\n    throw new Error('The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation');\n  }\n  var code = args.map(function (arg) {\n    if (multiMode && !Array.isArray(arg) || !multiMode && Array.isArray(arg)) {\n      throw new Error(\"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\");\n    }\n    if (Array.isArray(arg) && arg.length > 8) {\n      throw new Error('The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation');\n    }\n\n    return Array.isArray(arg) ? arg.join(' ') : arg;\n  }).join(', ');\n\n  return {\n    animation: code\n  };\n}\n\n//      \n\n/**\n * Shorthand that accepts any number of backgroundImage values as parameters for creating a single background statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...backgroundImages('url(\"/image/background.jpg\")', 'linear-gradient(red, green)')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${backgroundImages('url(\"/image/background.jpg\")', 'linear-gradient(red, green)')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'backgroundImage': 'url(\"/image/background.jpg\"), linear-gradient(red, green)'\n * }\n */\n\nfunction backgroundImages() {\n  for (var _len = arguments.length, properties = Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    backgroundImage: properties.join(', ')\n  };\n}\n\n//      \n\n/**\n * Shorthand that accepts any number of background values as parameters for creating a single background statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...backgrounds('url(\"/image/background.jpg\")', 'linear-gradient(red, green)', 'center no-repeat')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${backgrounds('url(\"/image/background.jpg\")', 'linear-gradient(red, green)', 'center no-repeat')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'background': 'url(\"/image/background.jpg\"), linear-gradient(red, green), center no-repeat'\n * }\n */\nfunction backgrounds() {\n  for (var _len = arguments.length, properties = Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    background: properties.join(', ')\n  };\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderColor('red', 'green', 'blue', 'yellow')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderColor('red', 'green', 'blue', 'yellow')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopColor': 'red',\n *   'borderRightColor': 'green',\n *   'borderBottomColor': 'blue',\n *   'borderLeftColor': 'yellow'\n * }\n */\n\nfunction borderColor() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['borderColor'].concat(values));\n}\n\n//      \n/**\n * Shorthand that accepts a value for side and a value for radius and applies the radius value to both corners of the side.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderRadius('top', '5px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderRadius('top', '5px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopRightRadius': '5px',\n *   'borderTopLeftRadius': '5px',\n * }\n */\n\nfunction borderRadius(side, radius) {\n  var uppercaseSide = capitalizeString(side);\n  if (!radius && radius !== 0) {\n    throw new Error('borderRadius expects a radius value as a string or number as the second argument.');\n  }\n  if (uppercaseSide === 'Top' || uppercaseSide === 'Bottom') {\n    var _ref;\n\n    return _ref = {}, _ref['border' + uppercaseSide + 'RightRadius'] = radius, _ref['border' + uppercaseSide + 'LeftRadius'] = radius, _ref;\n  }\n\n  if (uppercaseSide === 'Left' || uppercaseSide === 'Right') {\n    var _ref2;\n\n    return _ref2 = {}, _ref2['borderTop' + uppercaseSide + 'Radius'] = radius, _ref2['borderBottom' + uppercaseSide + 'Radius'] = radius, _ref2;\n  }\n\n  throw new Error('borderRadius expects one of \"top\", \"bottom\", \"left\" or \"right\" as the first argument.');\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderStyle('solid', 'dashed', 'dotted', 'double')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderStyle('solid', 'dashed', 'dotted', 'double')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopStyle': 'solid',\n *   'borderRightStyle': 'dashed',\n *   'borderBottomStyle': 'dotted',\n *   'borderLeftStyle': 'double'\n * }\n */\n\nfunction borderStyle() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['borderStyle'].concat(values));\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...borderWidth('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${borderWidth('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'borderTopWidth': '12px',\n *   'borderRightWidth': '24px',\n *   'borderBottomWidth': '36px',\n *   'borderLeftWidth': '48px'\n * }\n */\nfunction borderWidth() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['borderWidth'].concat(values));\n}\n\n//      \n\n\nfunction generateSelectors(template, state) {\n  var stateSuffix = state ? ':' + state : '';\n  return template(stateSuffix);\n}\n\n/**\n * Function helper that adds an array of states to a template of selectors. Used in textInputs and buttons.\n * @private\n */\nfunction statefulSelectors(states, template, stateMap) {\n  if (!template) throw new Error('You must provide a template to this method.');\n  if (states.length === 0) return generateSelectors(template, null);\n  var selectors = [];\n  for (var i = 0; i < states.length; i += 1) {\n    if (stateMap && stateMap.indexOf(states[i]) < 0) {\n      throw new Error('You passed an unsupported selector state to this method.');\n    }\n    selectors.push(generateSelectors(template, states[i]));\n  }\n  selectors = selectors.join(',');\n  return selectors;\n}\n\n//      \nvar stateMap = [undefined, null, 'active', 'focus', 'hover'];\n\nfunction template(state) {\n  return 'button' + state + ',\\n  input[type=\"button\"]' + state + ',\\n  input[type=\"reset\"]' + state + ',\\n  input[type=\"submit\"]' + state;\n}\n\n/**\n * Populates selectors that target all buttons. You can pass optional states to append to the selectors.\n * @example\n * // Styles as object usage\n * const styles = {\n *   [buttons('active')]: {\n *     'border': 'none'\n *   }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   > ${buttons('active')} {\n *     border: none;\n *   }\n * `\n *\n * // CSS in JS Output\n *\n *  'button:active,\n *  'input[type=\"button\"]:active,\n *  'input[type=\\\"reset\\\"]:active,\n *  'input[type=\\\"submit\\\"]:active: {\n *   'border': 'none'\n * }\n */\n\nfunction buttons() {\n  for (var _len = arguments.length, states = Array(_len), _key = 0; _key < _len; _key++) {\n    states[_key] = arguments[_key];\n  }\n\n  return statefulSelectors(states, template, stateMap);\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...margin('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${margin('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'marginTop': '12px',\n *   'marginRight': '24px',\n *   'marginBottom': '36px',\n *   'marginLeft': '48px'\n * }\n */\n\nfunction margin() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['margin'].concat(values));\n}\n\n//      \n/**\n * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...padding('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${padding('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'paddingTop': '12px',\n *   'paddingRight': '24px',\n *   'paddingBottom': '36px',\n *   'paddingLeft': '48px'\n * }\n */\n\nfunction padding() {\n  for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  return directionalProperty.apply(undefined, ['padding'].concat(values));\n}\n\n//      \nvar positionMap$1 = ['absolute', 'fixed', 'relative', 'static', 'sticky'];\n\n/**\n * Shorthand accepts up to five values, including null to skip a value, and maps them to their respective directions. The first value can optionally be a position keyword.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...position('12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${position('12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'top': '12px',\n *   'right': '24px',\n *   'bottom': '36px',\n *   'left': '48px'\n * }\n *\n * // Styles as object usage\n * const styles = {\n *   ...position('absolute', '12px', '24px', '36px', '48px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${position('absolute', '12px', '24px', '36px', '48px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'position': 'absolute',\n *   'top': '12px',\n *   'right': '24px',\n *   'bottom': '36px',\n *   'left': '48px'\n * }\n */\n\nfunction polished_es_position(positionKeyword) {\n  for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  if (positionMap$1.indexOf(positionKeyword) >= 0) {\n    return _extends({\n      position: positionKeyword\n    }, directionalProperty.apply(undefined, [''].concat(values)));\n  } else {\n    var firstValue = positionKeyword; // in this case position is actually the first value\n    return directionalProperty.apply(undefined, ['', firstValue].concat(values));\n  }\n}\n\n//      \n\n/**\n * Shorthand to set the height and width properties in a single statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...size('300px', '250px')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${size('300px', '250px')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'height': '300px',\n *   'width': '250px',\n * }\n */\n\nfunction polished_es_size(height) {\n  var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : height;\n\n  return {\n    height: height,\n    width: width\n  };\n}\n\n//      \nvar stateMap$1 = [undefined, null, 'active', 'focus', 'hover'];\n\nfunction template$1(state) {\n  return 'input[type=\"color\"]' + state + ',\\n    input[type=\"date\"]' + state + ',\\n    input[type=\"datetime\"]' + state + ',\\n    input[type=\"datetime-local\"]' + state + ',\\n    input[type=\"email\"]' + state + ',\\n    input[type=\"month\"]' + state + ',\\n    input[type=\"number\"]' + state + ',\\n    input[type=\"password\"]' + state + ',\\n    input[type=\"search\"]' + state + ',\\n    input[type=\"tel\"]' + state + ',\\n    input[type=\"text\"]' + state + ',\\n    input[type=\"time\"]' + state + ',\\n    input[type=\"url\"]' + state + ',\\n    input[type=\"week\"]' + state + ',\\n    input:not([type])' + state + ',\\n    textarea' + state;\n}\n\n/**\n * Populates selectors that target all text inputs. You can pass optional states to append to the selectors.\n * @example\n * // Styles as object usage\n * const styles = {\n *   [textInputs('active')]: {\n *     'border': 'none'\n *   }\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   > ${textInputs('active')} {\n *     border: none;\n *   }\n * `\n *\n * // CSS in JS Output\n *\n *  'input[type=\"color\"]:active,\n *  input[type=\"date\"]:active,\n *  input[type=\"datetime\"]:active,\n *  input[type=\"datetime-local\"]:active,\n *  input[type=\"email\"]:active,\n *  input[type=\"month\"]:active,\n *  input[type=\"number\"]:active,\n *  input[type=\"password\"]:active,\n *  input[type=\"search\"]:active,\n *  input[type=\"tel\"]:active,\n *  input[type=\"text\"]:active,\n *  input[type=\"time\"]:active,\n *  input[type=\"url\"]:active,\n *  input[type=\"week\"]:active,\n *  input:not([type]):active,\n *  textarea:active': {\n *   'border': 'none'\n * }\n */\n\nfunction textInputs() {\n  for (var _len = arguments.length, states = Array(_len), _key = 0; _key < _len; _key++) {\n    states[_key] = arguments[_key];\n  }\n\n  return statefulSelectors(states, template$1, stateMap$1);\n}\n\n//      \n\n/**\n * Shorthand that accepts any number of transition values as parameters for creating a single transition statement.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'transition': 'opacity 1.0s ease-in 0s, width 2.0s ease-in 2s'\n * }\n */\n\nfunction transitions() {\n  for (var _len = arguments.length, properties = Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  return {\n    transition: properties.join(', ')\n  };\n}\n\n//      \n// Helpers\n// Mixins\n// Color\n// Shorthands\n\n\n\n// CONCATENATED MODULE: ./node_modules/@wordlift/design/dist/shared/styles.js\n\n\nfunction styles_templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 \", \"px;\\n  @media (min-width: \", \"px) {\\n    margin: 0 \", \"%;\\n  }\\n  @media (min-width: \", \"px) {\\n    margin: 0 \", \"%;\\n  }\\n  @media (min-width: \", \"px) {\\n    margin: 0 \", \"%;\\n  }\\n  @media (min-width: \", \"px) {\\n    margin: 0 \", \"%;\\n  }\\n\"]);\n\n  styles_templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n // Global style variables\n\nvar background = {\n  app: '#F6F9FC',\n  appInverse: '#7A8997',\n  positive: '#E1FFD4',\n  negative: '#FEDED2',\n  warning: '#FFF5CF'\n};\nvar color = {\n  // Palette\n  primary: '#026fff',\n  // coral\n  secondary: '#606972',\n  // ocean\n  tertiary: '#DDDDDD',\n  orange: '#FC521F',\n  gold: '#FFAE00',\n  green: '#66BF3C',\n  seafoam: '#37D5D3',\n  purple: '#6F2CAC',\n  ultraviolet: '#2A0481',\n  // Monochrome\n  lightest: '#ffffff',\n  lighter: '#F8F8F8',\n  light: '#f7f8fb',\n  mediumlight: '#EEEEEE',\n  medium: '#DDDDDD',\n  mediumdark: '#8f8f8f',\n  dark: '#2d3338',\n  darker: '#444444',\n  darkest: '#333333',\n  border: 'rgba(0,0,0,.1)',\n  // Status\n  positive: '#66BF3C',\n  negative: '#FF4400',\n  warning: '#fcba0b',\n  disabledlight: '#eae5f0',\n  disableddark: '#c3b8cb',\n  danger: '#ff1e1f',\n  success: '#15b95a'\n};\nvar spacing = {\n  padding: {\n    small: 10,\n    medium: 20,\n    large: 30\n  },\n  borderRadius: {\n    small: '4px',\n    default: 10\n  }\n};\nvar typography = {\n  type: {\n    primary: 'Montserrat, sans-serif',\n    code: '\"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace'\n  },\n  weight: {\n    regular: '400',\n    bold: '700',\n    extrabold: '800',\n    black: '900'\n  },\n  size: {\n    mini: '.6rem',\n    small: '.7rem',\n    s1: '13',\n    s2: '14',\n    s3: '16',\n    medium: '.8rem',\n    m1: '20',\n    m2: '24',\n    m3: '28',\n    large: '.9rem',\n    l1: '32',\n    l2: '40',\n    l3: '48',\n    code: '90'\n  }\n};\nvar breakpoint = 600;\nvar pageMargin = '5.55555';\nvar pageMargins = Object(styled_components_browser_esm[\"css\"])(styles_templateObject(), spacing.padding.medium, breakpoint * 1, pageMargin * 1, breakpoint * 2, pageMargin * 2, breakpoint * 3, pageMargin * 3, breakpoint * 4, pageMargin * 4);\n// CONCATENATED MODULE: ./node_modules/@wordlift/design/dist/shared/animation.js\n\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  animation: \", \" 1.5s ease-in-out infinite;\\n  background: \", \";\\n  color: transparent;\\n  cursor: progress;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  0% { transform:rotate(-3deg) }\\n  1.68421% { transform:rotate(3deg) }\\n  2.10526% { transform:rotate(6deg) }\\n  3.78947% { transform:rotate(-6deg) }\\n  4.21053% { transform:rotate(-6deg) }\\n  5.89474% { transform:rotate(6deg) }\\n  6.31579% { transform:rotate(6deg) }\\n  8% { transform:rotate(-6deg) }\\n  8.42105% { transform:rotate(-6deg) }\\n  10.10526% { transform:rotate(6deg) }\\n  10.52632% { transform:rotate(6deg) }\\n  12.21053% { transform:rotate(-6deg) }\\n  12.63158% { transform:rotate(-6deg) }\\n  14.31579% { transform:rotate(6deg) }\\n  15.78947% { transform:rotate(0deg) }\\n  100% { transform:rotate(0deg) }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  0%, 100% { transform:translate3d(0,0,0); }\\n  12.5%, 62.5% { transform:translate3d(-4px,0,0); }\\n  37.5%, 87.5% {  transform: translate3d(4px,0,0);  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  0% { transform: translateY(1px); }\\n  25% { transform: translateY(0px); }\\n  50% { transform: translateY(-3px); }\\n  100% { transform: translateY(1px); }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  0%, 100% { opacity: 1; }\\n  50% { opacity: .4; }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction animation_templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tfrom {\\n\\t\\ttransform: rotate(0deg);\\n\\t}\\n\\tto {\\n\\t\\ttransform: rotate(360deg);\\n\\t}\\n\"]);\n\n  animation_templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// Handy CSS animations for micro-interactions\n\n\nvar easing = {\n  rubber: 'cubic-bezier(0.175, 0.885, 0.335, 1.05)'\n};\nvar rotate360 = Object(styled_components_browser_esm[\"keyframes\"])(animation_templateObject());\nvar glow = Object(styled_components_browser_esm[\"keyframes\"])(_templateObject2());\nvar animation_float = Object(styled_components_browser_esm[\"keyframes\"])(_templateObject3());\nvar jiggle = Object(styled_components_browser_esm[\"keyframes\"])(_templateObject4());\nvar shake = Object(styled_components_browser_esm[\"keyframes\"])(_templateObject5());\nvar inlineGlow = Object(styled_components_browser_esm[\"css\"])(_templateObject6(), glow, color.mediumlight);\n// CONCATENATED MODULE: ./node_modules/@wordlift/design/dist/Button.js\n\n\n\nfunction Button_templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  border: .14rem solid transparent;\\n  border-radius: \", \";\\n  cursor: pointer;\\n  display: inline-block;\\n  overflow: hidden;\\n  padding: \", \";\\n  position: relative;\\n  text-align: center;\\n  text-decoration: none;\\n  text-transform: uppercase;\\n  transition: all 150ms ease-out;\\n  transform: translate3d(0,0,0);\\n  vertical-align: top;\\n  white-space: nowrap;\\n  user-select: none;\\n  opacity: 1;\\n  margin: 0;\\n  background: transparent;\\n\\n  font-family: \", \";\\n  font-size: \", \";\\n  font-weight: \", \";\\n  line-height: 1;\\n\\n  \", \"\\n\\n  \", \" {\\n    transform: scale3d(1,1,1) translate3d(0,0,0);\\n    transition: transform 700ms \", \";\\n    opacity: 1;\\n  }\\n\\n  \", \" {\\n    transform: translate3d(0, 100%, 0);\\n  }\\n\\n  svg {\\n    height: \", \"px;\\n    width: \", \"px;\\n    vertical-align: top;\\n    margin-right: \", \"px;\\n    margin-top: \", \"px;\\n    margin-bottom: \", \"px;\\n\\n    /* Necessary for js mouse events to not glitch out when hovering on svgs */\\n    pointer-events: none;\\n  }\\n\\n  \", \"\\n\\n  \", \"\\n\\n  \", \"\\n\\n  \", \"\\n\\n  \", \"\\n\\n\\n  \", \"\\n\\n  \", \";\\n\\n    \", \";\\n\\n    \", \";\\n\\n\"]);\n\n  Button_templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Button_templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 0;\\n  right: 0;\\n  opacity: 0;\\n\"]);\n\n  Button_templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Button_templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  vertical-align: top;\\n\"]);\n\n  Button_templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n\n\n\n\n\nvar Text = styled_components_browser_esm[\"default\"].span(Button_templateObject());\nvar Loading = styled_components_browser_esm[\"default\"].span(Button_templateObject2());\nvar APPEARANCES = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  DANGER: \"danger\",\n  WARNING: \"warning\",\n  SUCCESS: \"success\",\n  DARK: \"dark\",\n  LIGHT: \"light\"\n};\nvar SIZES = {\n  MINI: \"mini\",\n  SMALL: \"small\",\n  MEDIUM: \"medium\",\n  LARGE: \"large\"\n};\nvar VARIATIONS = {\n  FILL: \"fill\",\n  OUTLINE: \"outline\"\n};\n\nvar switchPadding = function switchPadding(size) {\n  switch (size) {\n    case SIZES.MINI:\n      return \".5rem 1.4rem\";\n\n    case SIZES.SMALL:\n      return \".6rem 1.6rem\";\n\n    case SIZES.MEDIUM:\n      return \".7rem 1.8rem\";\n    // large\n\n    default:\n      return \".9rem 4rem\";\n  }\n};\n\nvar Button_switchFontSize = function switchFontSize(size) {\n  switch (size) {\n    case SIZES.MINI:\n      return typography.size.mini;\n\n    case SIZES.SMALL:\n      return typography.size.small;\n\n    case SIZES.MEDIUM:\n      return typography.size.medium;\n    // large\n\n    default:\n      return typography.size.large;\n  }\n};\n\nvar Button_switchBorderColor = function switchBorderColor(props) {\n  if (props.disabled) return color.disabledlight;\n\n  switch (props.appearance) {\n    case APPEARANCES.PRIMARY:\n      return color.primary;\n\n    case APPEARANCES.DANGER:\n      return color.danger;\n\n    case APPEARANCES.WARNING:\n      return color.warning;\n\n    case APPEARANCES.SUCCESS:\n      return color.success;\n\n    case APPEARANCES.SECONDARY:\n      return color.secondary;\n\n    case APPEARANCES.DARK:\n      return color.dark;\n\n    case APPEARANCES.LIGHT:\n      return color.light;\n\n    default:\n      return color.primary;\n  }\n};\n\nvar Button_switchColor = function switchColor(props) {\n  if (props.disabled) return color.disableddark;\n\n  if (VARIATIONS.OUTLINE === props.variation) {\n    if (APPEARANCES.LIGHT === props.appearance) return color.mediumdark;else return Button_switchBorderColor(props);\n  }\n\n  if (APPEARANCES.LIGHT === props.appearance) {\n    return color.darkest;\n  } else {\n    return color.lightest;\n  }\n};\n\nvar StyledButton = styled_components_browser_esm[\"default\"].button(Button_templateObject3(), spacing.borderRadius.small, function (props) {\n  return switchPadding(props.size);\n}, typography.type.primary, function (props) {\n  return Button_switchFontSize(props.size);\n}, typography.weight.bold, function (props) {\n  return !props.isLoading && \"\\n      &:hover {\\n        transform: translate3d(0, -2px, 0);\\n        box-shadow: rgba(0, 0, 0, 0.2) 0 2px 6px 0;\\n      }\\n\\n      &:active {\\n        transform: translate3d(0, 0, 0);\\n      }\\n\\n      &:focus {\\n        box-shadow: \".concat(rgba(color.primary, 0.4), \" 0 1px 9px 2px;\\n      }\\n\\n      &:focus:hover {\\n        box-shadow: \").concat(rgba(color.primary, 0.2), \" 0 8px 18px 0px;\\n      }\\n    \");\n}, Text, easing.rubber, Loading, function (props) {\n  return props.size === SIZES.SMALL ? \"14\" : \"16\";\n}, function (props) {\n  return props.size === SIZES.SMALL ? \"14\" : \"16\";\n}, function (props) {\n  return props.size === SIZES.SMALL ? \"4\" : \"6\";\n}, function (props) {\n  return props.size === SIZES.SMALL ? \"-1\" : \"-2\";\n}, function (props) {\n  return props.size === SIZES.SMALL ? \"-1\" : \"-2\";\n}, function (props) {\n  return props.isUnclickable && \"\\n      cursor: default !important;\\n      pointer-events: none;\\n      &:hover {\\n        transform: none;\\n      }\\n    \";\n}, function (props) {\n  return props.isLoading && \"\\n      cursor: progress !important;\\n      opacity: 0.7;\\n\\n      \".concat(Loading, \" {\\n        transition: transform 700ms \").concat(easing.rubber, \";\\n        transform: translate3d(0, -50%, 0);\\n        opacity: 1;\\n      }\\n\\n      \").concat(Text, \" {\\n        transform: scale3d(0, 0, 1) translate3d(0, -100%, 0);\\n        opacity: 0;\\n      }\\n\\n      &:hover {\\n        transform: none;\\n      }\\n    \");\n}, function (props) {\n  return props.containsIcon && \"\\n      svg {\\n        display: block;\\n        margin: 0;\\n      }\\n      padding: \".concat(props.size === SIZES.SMALL ? \"7\" : \"12\", \"px;\\n    \");\n}, function (props) {\n  return props.variation === VARIATIONS.FILL && \"\\n      background: \".concat(Button_switchBorderColor(props), \";\\n      border-color: \").concat(Button_switchBorderColor(props), \";\\n      color: \").concat(Button_switchColor(props), \";\\n\\n      \").concat(!props.isLoading && \"\\n          &:active {\\n            box-shadow: rgba(0, 0, 0, 0.1) 0 0 0 3em inset;\\n          }\\n          &:focus {\\n            box-shadow: \".concat(rgba(color.primary, 0.4), \" 0 1px 9px 2px;\\n          }\\n          &:focus:hover {\\n            box-shadow: \").concat(rgba(color.primary, 0.2), \" 0 8px 18px 0px;\\n          }\\n        \"), \"\\n    \");\n}, function (props) {\n  return props.variation === VARIATIONS.OUTLINE && \"\\n      background: \".concat(color.lightest, \";\\n      border-color: \").concat(Button_switchBorderColor(props), \";\\n      color: \").concat(Button_switchColor(props), \";\\n\\n      \").concat(!props.isLoading && \"\\n          &:active {\\n            box-shadow: rgba(0, 0, 0, 0.1) 0 0 0 3em inset;\\n          }\\n          &:focus {\\n            box-shadow: \".concat(rgba(color.primary, 0.4), \" 0 1px 9px 2px;\\n          }\\n          &:focus:hover {\\n            box-shadow: \").concat(rgba(color.primary, 0.2), \" 0 8px 18px 0px;\\n          }\\n        \"), \"\\n    \");\n}, function (props) {\n  return props.disabled && \"\\n      cursor: not-allowed !important;\\n      &:hover {\\n        transform: none;\\n        box-shadow: none;\\n      }\\n      \\n    \".concat(props.variation === VARIATIONS.FILL && \"\\n      background-color: \".concat(color.disabledlight, \";\\n      border-color: \").concat(color.disabledlight, \";\\n      color: \").concat(color.disableddark, \";\\n    \"), \"\\n\\n    \").concat(props.variation === VARIATIONS.OUTLINE && \"\\n      border-color: \".concat(color.disabledlight, \";\\n      color: \").concat(color.disabledlight, \";\\n    \"), \"\\n\\n  \");\n}, function (props) {\n  return props.appearance === APPEARANCES.OUTLINE && \"\\n      box-shadow: \".concat(color.medium, \" 0 0 0 1px inset;\\n      color: \").concat(color.dark, \";\\n      background: transparent;\\n\\n      \").concat(!props.isLoading && \"\\n          &:hover {\\n            box-shadow: \".concat(color.mediumdark, \" 0 0 0 1px inset;\\n          }\\n\\n          &:active {\\n            background: \").concat(color.medium, \";\\n            box-shadow: \").concat(color.medium, \" 0 0 0 1px inset;\\n            color: \").concat(color.darkest, \";\\n          }\\n          &:focus {\\n            box-shadow: \").concat(color.medium, \" 0 0 0 1px inset, \").concat(rgba(color.secondary, 0.4), \" 0 1px 9px 2px;\\n          }\\n          &:focus:hover {\\n            box-shadow: \").concat(color.medium, \" 0 0 0 1px inset, \").concat(rgba(color.secondary, 0.2), \" 0 8px 18px 0px;\\n          }\\n        \"), \";\\n    \");\n}, function (props) {\n  return props.appearance === APPEARANCES.PRIMARY_OUTLINE && \"\\n        box-shadow: \".concat(color.primary, \" 0 0 0 1px inset;\\n        color: \").concat(color.primary, \";\\n\\n        &:hover {\\n          box-shadow: \").concat(color.primary, \" 0 0 0 1px inset;\\n          background: transparent;\\n        }\\n\\n        &:active {\\n          background: \").concat(color.primary, \";\\n          box-shadow: \").concat(color.primary, \" 0 0 0 1px inset;\\n          color: \").concat(color.lightest, \";\\n        }\\n        &:focus {\\n          box-shadow: \").concat(color.primary, \" 0 0 0 1px inset, \").concat(rgba(color.primary, 0.4), \" 0 1px 9px 2px;\\n        }\\n        &:focus:hover {\\n          box-shadow: \").concat(color.primary, \" 0 0 0 1px inset, \").concat(rgba(color.primary, 0.2), \" 0 8px 18px 0px;\\n        }\\n      \");\n}, function (props) {\n  return props.appearance === APPEARANCES.SECONDARY_OUTLINE && \"\\n        box-shadow: \".concat(color.secondary, \" 0 0 0 1px inset;\\n        color: \").concat(color.secondary, \";\\n\\n        &:hover {\\n          box-shadow: \").concat(color.secondary, \" 0 0 0 1px inset;\\n          background: transparent;\\n        }\\n\\n        &:active {\\n          background: \").concat(color.secondary, \";\\n          box-shadow: \").concat(color.secondary, \" 0 0 0 1px inset;\\n          color: \").concat(color.lightest, \";\\n        }\\n        &:focus {\\n          box-shadow: \").concat(color.secondary, \" 0 0 0 1px inset,\\n            \").concat(rgba(color.secondary, 0.4), \" 0 1px 9px 2px;\\n        }\\n        &:focus:hover {\\n          box-shadow: \").concat(color.secondary, \" 0 0 0 1px inset,\\n            \").concat(rgba(color.secondary, 0.2), \" 0 8px 18px 0px;\\n        }\\n      \");\n});\nvar ButtonLink = StyledButton.withComponent(\"a\");\n\nvar Button_applyStyle = function applyStyle(ButtonWrapper) {\n  return ButtonWrapper && StyledButton.withComponent(function (_ref) {\n    var containsIcon = _ref.containsIcon,\n        isLoading = _ref.isLoading,\n        isUnclickable = _ref.isUnclickable,\n        rest = _objectWithoutProperties(_ref, [\"containsIcon\", \"isLoading\", \"isUnclickable\"]);\n\n    return /*#__PURE__*/external_this_React_default.a.createElement(ButtonWrapper, rest);\n  });\n};\n\nfunction Button(_ref2) {\n  var isDisabled = _ref2.isDisabled,\n      isLoading = _ref2.isLoading,\n      loadingText = _ref2.loadingText,\n      isLink = _ref2.isLink,\n      children = _ref2.children,\n      ButtonWrapper = _ref2.ButtonWrapper,\n      props = _objectWithoutProperties(_ref2, [\"isDisabled\", \"isLoading\", \"loadingText\", \"isLink\", \"children\", \"ButtonWrapper\"]);\n\n  var buttonInner = /*#__PURE__*/external_this_React_default.a.createElement(external_this_React_[\"Fragment\"], null, /*#__PURE__*/external_this_React_default.a.createElement(Text, null, children), isLoading && /*#__PURE__*/external_this_React_default.a.createElement(Loading, null, loadingText || \"Loading...\"));\n  var StyledButtonWrapper = external_this_React_default.a.useMemo(function () {\n    return Button_applyStyle(ButtonWrapper);\n  }, [ButtonWrapper]);\n  var SelectedButton = StyledButton;\n\n  if (ButtonWrapper) {\n    SelectedButton = StyledButtonWrapper;\n  } else if (isLink) {\n    SelectedButton = ButtonLink;\n  }\n\n  return /*#__PURE__*/external_this_React_default.a.createElement(SelectedButton, Object.assign({\n    isLoading: isLoading,\n    disabled: isDisabled\n  }, props), buttonInner);\n}\nButton.defaultProps = {\n  isLoading: false,\n  loadingText: null,\n  isLink: false,\n  appearance: APPEARANCES.PRIMARY,\n  variation: VARIATIONS.FILL,\n  isDisabled: false,\n  isUnclickable: false,\n  containsIcon: false,\n  size: SIZES.MEDIUM,\n  ButtonWrapper: undefined\n};\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(25);\n\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\n\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return Object(assertThisInitialized[\"a\" /* default */])(self);\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js\n\n\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n// EXTERNAL MODULE: external {\"this\":\"ReactDOM\"}\nvar external_this_ReactDOM_ = __webpack_require__(20);\nvar external_this_ReactDOM_default = /*#__PURE__*/__webpack_require__.n(external_this_ReactDOM_);\n\n// CONCATENATED MODULE: ./node_modules/@wordlift/design/dist/Popover.js\n\n\n\n\n\n\n\n\n\n\nfunction Popover_templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  visibility: \", \";\\n  position: absolute;\\n  z-index: 999999;\\n  \", \"\\n\"]);\n\n  Popover_templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Popover_templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  border-radius: \", \";\\n  border: 0.12rem solid \", \";\\n  padding: 0.8rem;\\n\"]);\n\n  Popover_templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Popover_templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-color: \", \";\\n  border-style: solid;\\n  border-width: \", \";\\n  width: 0;\\n  height: 0;\\n\"]);\n\n  Popover_templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Popover_templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: \", \";\\n  align-items: center;\\n  margin: 0.5rem;\\n\"]);\n\n  Popover_templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * This file provides the Popover component. The Popover is generally structured in the following components:\n *\n * - PopoverManager, a component which calculates the best position where to display a popover given the target\n *                   bounding box and which automatically hides the Popover when the page scrolls, is resized or clicked\n *                   elsewhere.\n * -- Popover, the self-contained Popover.\n * --- PopoverPositioning, places the Popover at specific coordinates.\n * ---- PopoverContainer, contains the Popover Arrow and Popover Content\n * ----- PopoverArrow, displays the arrow.\n * ----- PopoverContent, the actual contents.\n *\n * The PopoverManager must be loaded inside an element child of `body` and absolutely positioned at 0:0 coordinates.\n * The utility function `createPopover` creates this element.\n */\n\n/**\n * External dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * Supported directions.\n * @readonly\n * @enum {(\"top\"|\"left\"|\"right\"|\"bottom\"|null)}\n */\nvar DIRECTIONS = {\n  TOP: \"top\",\n  RIGHT: \"right\",\n  BOTTOM: \"bottom\",\n  LEFT: \"left\",\n  NONE: null\n};\n/**\n * Switch `flex-direction` based on the specified direction.\n *\n * @param {(\"top\"|\"right\"|\"bottom\"|\"left\")} direction The arrow position.\n * @returns {(\"column\"|\"row-reverse\"|\"column-reverse\"|\"row\")} The `flex-direction` attribute.\n */\n\nvar switchFlexDirection = function switchFlexDirection(direction) {\n  switch (direction) {\n    case DIRECTIONS.TOP:\n      return \"column\";\n\n    case DIRECTIONS.RIGHT:\n      return \"row-reverse\";\n\n    case DIRECTIONS.BOTTOM:\n      return \"column-reverse\";\n    // left\n\n    default:\n      return \"row\";\n  }\n};\n/**\n * Switch `border-width` based on the specified direction.\n *\n * @param {(\"top\"|\"right\"|\"bottom\"|\"left\")} direction The arrow position.\n * @returns {string} The `border-width` attribute.\n */\n\n\nvar switchBorderWidth = function switchBorderWidth(direction) {\n  switch (direction) {\n    case DIRECTIONS.TOP:\n      return \"0 .5rem .5rem .5rem\";\n\n    case DIRECTIONS.RIGHT:\n      return \".5rem 0 .5rem .5rem\";\n\n    case DIRECTIONS.BOTTOM:\n      return \".5rem .5rem 0 .5rem\";\n    // left\n\n    default:\n      return \".5rem .5rem .5rem 0\";\n  }\n};\n/**\n * Switch `border-color` based on the specified direction.\n *\n * @param {(\"top\"|\"right\"|\"bottom\"|\"left\")} direction The arrow position.\n * @returns {string} The `border-width` attribute.\n */\n\n\nvar Popover_switchBorderColor = function switchBorderColor(direction) {\n  switch (direction) {\n    case DIRECTIONS.TOP:\n    case DIRECTIONS.BOTTOM:\n      return \"\".concat(color.primary, \" transparent\");\n    // left, right\n\n    default:\n      return \"transparent \".concat(color.primary);\n  }\n};\n/**\n * The Popover Container component, which contains the Popover Arrow and Content components.\n *\n * @type {*|React.ReactElement<any, any>}\n */\n\n\nvar PopoverContainer = styled_components_browser_esm[\"default\"].div(Popover_templateObject(), function (props) {\n  return switchFlexDirection(props.direction);\n});\n/**\n * The Popover Arrow component.\n *\n * @type {*|React.ReactElement<any, any>}\n */\n\nvar PopoverArrow = styled_components_browser_esm[\"default\"].div(Popover_templateObject2(), function (props) {\n  return Popover_switchBorderColor(props.direction);\n}, function (props) {\n  return switchBorderWidth(props.direction);\n});\n/**\n * The Popover Content, which contains the actual children element.\n * @type {*|React.ReactElement<any, any>}\n */\n\nvar PopoverContent = styled_components_browser_esm[\"default\"].div(Popover_templateObject3(), color.lightest, spacing.borderRadius.small, color.primary);\n/**\n * The Popover component, composed by a Popover Container which contains a Popover Arrow and Popover Content.\n *\n * @param {*|React.ReactElement<any, any>} children The child components.\n * @param {{direction}} props The component properties.\n * @returns {React.ReactElement<any, any>} A component.\n * @constructor\n */\n\nvar Popover_Popover = function Popover(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return /*#__PURE__*/external_this_React_default.a.createElement(PopoverContainer, props, props.direction && /*#__PURE__*/external_this_React_default.a.createElement(PopoverArrow, props), /*#__PURE__*/external_this_React_default.a.createElement(PopoverContent, null, children));\n};\n\n/**\n * Provide the css `top` and `left` coordinates given the provided properties, i.e. the target selection `top`, `right`,\n * `bottom` and `left` coordinates, the Popover overall `width` and `height` and the requested `position`.\n *\n * Please note that this function doesn't calculate the best position for the popover. The position is provided as an\n * input parameter.\n *\n * @param {{\n *  top: Number,\n *  right: Number,\n *  bottom: Number,\n *  left: Number,\n *  width: Number,\n *  height: Number,\n *  position: (\"top\"|\"right\"|\"bottom\"|\"left\")\n *  }} props The required geometry.\n * @returns {string} The css `top` and `left` properties.\n */\nvar switchPositionByPosition = function switchPositionByPosition(props) {\n  // Calculate the width and height of the target element (the selection bounding box), in order to get the center\n  // left and top.\n  var targetWidth = props.right - props.left;\n  var targetHeight = props.bottom - props.top; // Get the left and top coordinates so that the popover is centered respect to the bounding box.\n\n  var centerLeft = props.left + targetWidth / 2 - props.width / 2;\n  var centerTop = props.top + targetHeight / 2 - props.height / 2; // Provide the css `top` and `left` properties based on the requested position.\n\n  switch (props.position) {\n    case POSITIONS.TOP:\n      return \"\\n        top: \".concat(props.top - props.height, \"px;\\n        left: \").concat(centerLeft, \"px;\\n      \");\n\n    case POSITIONS.RIGHT:\n      return \"\\n        top: \".concat(centerTop, \"px;\\n        left: \").concat(props.right, \"px;\\n      \");\n\n    case POSITIONS.BOTTOM:\n      return \"\\n        top: \".concat(props.bottom, \"px;\\n        left: \").concat(centerLeft, \"px;\\n      \");\n\n    case POSITIONS.LEFT:\n      return \"\\n        top: \".concat(centerTop, \"px;\\n        left: \").concat(props.left - props.width, \"px;\\n      \");\n\n    default: // No defaults.\n\n  }\n};\n/**\n * A component which wraps the Popover Container component and places the child components at the desired position.\n *\n * Note that when a position isn't provided, the `visibility` is set to the `hidden`. This allows parent components to\n * render the component in order to get its size and decide its positioning.\n *\n * @type {*|React.ReactElement<any, any>}\n */\n\n\nvar PopoverPositioning = styled_components_browser_esm[\"default\"].span(Popover_templateObject4(), function (props) {\n  return null == props.position ? \"hidden\" : \"visible\";\n}, function (props) {\n  return switchPositionByPosition(props);\n});\n/**\n * The requested Popover position.\n *\n * @enum {(\"top\"|\"right\"|\"bottom\"|\"left\"|null)}\n */\n\nvar POSITIONS = {\n  TOP: \"top\",\n  RIGHT: \"right\",\n  BOTTOM: \"bottom\",\n  LEFT: \"left\",\n  NONE: null\n};\n/**\n * Switch from a Position (where the Popover is located respect to the target bounding box) to a Direction (where the\n * Popover Arrow is pointing).\n *\n * @param  {(\"top\"|\"right\"|\"bottom\"|\"left\"|null)} position The position.\n * @returns {\"top\"|\"left\"|\"right\"|\"bottom\"|null} The direction.\n */\n\nvar directionFromPosition = function directionFromPosition(position) {\n  switch (position) {\n    case POSITIONS.TOP:\n      return DIRECTIONS.BOTTOM;\n\n    case POSITIONS.RIGHT:\n      return DIRECTIONS.LEFT;\n\n    case POSITIONS.BOTTOM:\n      return DIRECTIONS.TOP;\n\n    case POSITIONS.LEFT:\n      return DIRECTIONS.RIGHT;\n\n    default:\n      return null;\n  }\n};\n/**\n * The PopoverManager loads a Popover and calculates the best position to display it based on the bounding box.\n */\n\n\nvar Popover_PopoverManager = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopoverManager, _React$Component);\n\n  var _super = _createSuper(PopoverManager);\n\n  /**\n   * Creates an instance.\n   *\n   * @param {{ top, right, bottom, left }} props The bounding box coordinates.\n   */\n  function PopoverManager(props) {\n    var _this;\n\n    _classCallCheck(this, PopoverManager);\n\n    _this = _super.call(this, props);\n    _this.getSuitablePosition = _this.getSuitablePosition.bind(Object(assertThisInitialized[\"a\" /* default */])(_this)); // Receive the element.\n\n    _this.setRef = function (el) {\n      _this.el = el;\n    };\n\n    return _this;\n  }\n  /**\n   * Calculate the best position based on the Popover size.\n   *\n   * If we don't like where the Popover is displayed, this is probably the best code to update.\n   *\n   * @param {{width, height}} size The Popover's size.\n   * @returns {\"top\"|\"right\"|\"bottom\"|\"left\"|null} The best position.\n   */\n\n\n  _createClass(PopoverManager, [{\n    key: \"getSuitablePosition\",\n    value: function getSuitablePosition(size) {\n      var _this$props = this.props,\n          top = _this$props.top,\n          right = _this$props.right,\n          bottom = _this$props.bottom,\n          left = _this$props.left,\n          positions = _this$props.positions;\n\n      var _iterator = _createForOfIteratorHelper(positions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var position = _step.value;\n\n          switch (position) {\n            case POSITIONS.TOP:\n              if (top > size.height) return POSITIONS.TOP;\n              break;\n\n            case POSITIONS.RIGHT:\n              if (right + size.width < document.body.offsetWidth) return POSITIONS.RIGHT;\n              break;\n\n            case POSITIONS.BOTTOM:\n              if (bottom + size.height < document.body.offsetHeight) return POSITIONS.BOTTOM;\n              break;\n\n            case POSITIONS.LEFT:\n              if (left > size.width) return POSITIONS.LEFT;\n              break;\n            // No suitable position found: return the first preferred one.\n\n            default:\n              return positions[0];\n          }\n        } // No preferred positions provided, return TOP.\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return POSITIONS.TOP;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // When the component is mount, its `visibility` is hidden because we didn't provide any position. We can then\n      // get the offset width and height and use it to calculate the target position.\n      //\n      // When the target PopoverPositioning component will receive the position, it'll turn the component to `visible`.\n      var size = {\n        width: this.el.offsetWidth,\n        height: this.el.offsetHeight\n      }; // Get the best position given the size of the popover.\n\n      var position = this.getSuitablePosition(size); // Update our state with the size and target position.\n\n      this.setState(function (state) {\n        return _objectSpread2({}, state, {}, size, {\n          position: position\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$this$stat = _objectSpread2({}, this.props, {}, this.state),\n          children = _this$props$this$stat.children,\n          props = _objectWithoutProperties(_this$props$this$stat, [\"children\"]);\n\n      return /*#__PURE__*/external_this_React_default.a.createElement(PopoverPositioning, Object.assign({}, props, {\n        ref: this.setRef\n      }), /*#__PURE__*/external_this_React_default.a.createElement(Popover_Popover, {\n        direction: directionFromPosition(props.position)\n      }, children));\n    }\n  }]);\n\n  return PopoverManager;\n}(external_this_React_default.a.Component);\n\nPopover_PopoverManager.defaultProps = {\n  positions: [POSITIONS.TOP, POSITIONS.RIGHT, POSITIONS.BOTTOM, POSITIONS.LEFT]\n};\n/**\n * Create a Popover.\n *\n * @param {*} children The popover content.\n * @param {string} id The popover id. Creating multiple popovers with the same id ensures only one is displayed at a\n *                    time.\n * @param {*} props The properties.\n * @returns {{el: Element, unmount: Function}} The DOM element where the components are attached to.\n */\n\nvar Popover_createPopover = function createPopover(children, _ref2) {\n  var _ref2$id = _ref2.id,\n      id = _ref2$id === void 0 ? \"one\" : _ref2$id,\n      props = _objectWithoutProperties(_ref2, [\"id\"]);\n\n  var popoverId = \"popover-\".concat(id); // Get an existing element with that `id`.\n\n  var el = document.getElementById(popoverId); // Create and append the element to the `body` if it doesn't exist.\n\n  if (null === el) {\n    el = document.createElement(\"span\");\n    el.id = popoverId;\n    el.style.position = \"absolute\";\n    el.style.top = \"0\";\n    el.style.left = \"0\";\n    document.body.appendChild(el);\n  } // Unmount the Popover if the selection changes, the document is scrolled or resized.\n\n\n  var unmountFn = function unmountFn() {\n    external_this_ReactDOM_default.a.unmountComponentAtNode(el);\n    document.removeEventListener(\"selectionchange\", unmountFn);\n    document.removeEventListener(\"scroll\", unmountFn);\n    document.removeEventListener(\"resize\", unmountFn);\n  };\n\n  unmountFn();\n  document.addEventListener(\"selectionchange\", unmountFn);\n  document.addEventListener(\"scroll\", unmountFn);\n  document.addEventListener(\"resize\", unmountFn);\n  return {\n    el: external_this_ReactDOM_default.a.render( /*#__PURE__*/external_this_React_default.a.createElement(Popover_PopoverManager, props, children), el),\n    unmount: unmountFn\n  };\n};\n// CONCATENATED MODULE: ./node_modules/@wordlift/design/dist/index.js\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///89\n")},,,function(module,exports,__webpack_require__){eval("\nvar space = __webpack_require__(129)\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdG8tY2FtZWwtY2FzZS9pbmRleC5qcz8xNzdmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxZQUFZLG1CQUFPLENBQUMsR0FBZTs7QUFFbkM7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6IjkyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgc3BhY2UgPSByZXF1aXJlKCd0by1zcGFjZS1jYXNlJylcblxuLyoqXG4gKiBFeHBvcnQuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB0b0NhbWVsQ2FzZVxuXG4vKipcbiAqIENvbnZlcnQgYSBgc3RyaW5nYCB0byBjYW1lbCBjYXNlLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiB0b0NhbWVsQ2FzZShzdHJpbmcpIHtcbiAgcmV0dXJuIHNwYWNlKHN0cmluZykucmVwbGFjZSgvXFxzKFxcdykvZywgZnVuY3Rpb24gKG1hdGNoZXMsIGxldHRlcikge1xuICAgIHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKVxuICB9KVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///92\n")},,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ createActions; });\n\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(15);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isPlainObject.js\nvar isPlainObject = __webpack_require__(40);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isFunction.js\nvar isFunction = __webpack_require__(29);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/identity.js\nvar identity = __webpack_require__(27);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/isArray.js\n/* harmony default export */ var isArray = (function (value) {\n  return Array.isArray(value);\n});\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/isString.js\n/* harmony default export */ var isString = (function (value) {\n  return typeof value === \'string\';\n});\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isNil.js\nvar isNil = __webpack_require__(79);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/getLastElement.js\n/* harmony default export */ var getLastElement = (function (array) {\n  return array[array.length - 1];\n});\n// EXTERNAL MODULE: ./node_modules/to-camel-case/index.js\nvar to_camel_case = __webpack_require__(92);\nvar to_camel_case_default = /*#__PURE__*/__webpack_require__.n(to_camel_case);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/camelCase.js\n\nvar namespacer = \'/\';\n/* harmony default export */ var camelCase = (function (type) {\n  return type.indexOf(namespacer) === -1 ? to_camel_case_default()(type) : type.split(namespacer).map(to_camel_case_default.a).join(namespacer);\n});\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/arrayToObject.js\n/* harmony default export */ var arrayToObject = (function (array, callback) {\n  return array.reduce(function (partialObject, element) {\n    return callback(partialObject, element);\n  }, {});\n});\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/flattenWhenNode.js\nvar flattenWhenNode = __webpack_require__(77);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/flattenActionMap.js\n\n\n/* harmony default export */ var flattenActionMap = (Object(flattenWhenNode["a" /* default */])(isPlainObject["a" /* default */]));\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/constants.js\nvar constants = __webpack_require__(43);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/isEmpty.js\n/* harmony default export */ var isEmpty = (function (value) {\n  return value.length === 0;\n});\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/unflattenActionCreators.js\n\n\n\nfunction unflattenActionCreators(flatActionCreators, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? constants["b" /* DEFAULT_NAMESPACE */] : _ref$namespace,\n      prefix = _ref.prefix;\n\n  function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {\n    var nextNamespace = camelCase(partialFlatActionTypePath.shift());\n\n    if (isEmpty(partialFlatActionTypePath)) {\n      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];\n    } else {\n      if (!partialNestedActionCreators[nextNamespace]) {\n        partialNestedActionCreators[nextNamespace] = {};\n      }\n\n      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);\n    }\n  }\n\n  var nestedActionCreators = {};\n  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {\n    var unprefixedType = prefix ? type.replace("" + prefix + namespace, \'\') : type;\n    return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));\n  });\n  return nestedActionCreators;\n}\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/createAction.js + 1 modules\nvar createAction = __webpack_require__(19);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/createActions.js\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction createActions(actionMap) {\n  for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    identityActions[_key - 1] = arguments[_key];\n  }\n\n  var options = Object(isPlainObject["a" /* default */])(getLastElement(identityActions)) ? identityActions.pop() : {};\n  browser_default()(identityActions.every(isString) && (isString(actionMap) || Object(isPlainObject["a" /* default */])(actionMap)), \'Expected optional object followed by string action types\');\n\n  if (isString(actionMap)) {\n    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);\n  }\n\n  return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));\n}\n\nfunction actionCreatorsFromActionMap(actionMap, options) {\n  var flatActionMap = flattenActionMap(actionMap, options);\n  var flatActionCreators = actionMapToActionCreators(flatActionMap);\n  return unflattenActionCreators(flatActionCreators, options);\n}\n\nfunction actionMapToActionCreators(actionMap, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      prefix = _ref.prefix,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? constants["b" /* DEFAULT_NAMESPACE */] : _ref$namespace;\n\n  function isValidActionMapValue(actionMapValue) {\n    if (Object(isFunction["a" /* default */])(actionMapValue) || Object(isNil["a" /* default */])(actionMapValue)) {\n      return true;\n    }\n\n    if (isArray(actionMapValue)) {\n      var _actionMapValue$ = actionMapValue[0],\n          payload = _actionMapValue$ === void 0 ? identity["a" /* default */] : _actionMapValue$,\n          meta = actionMapValue[1];\n      return Object(isFunction["a" /* default */])(payload) && Object(isFunction["a" /* default */])(meta);\n    }\n\n    return false;\n  }\n\n  return arrayToObject(Object.keys(actionMap), function (partialActionCreators, type) {\n    var _objectSpread2;\n\n    var actionMapValue = actionMap[type];\n    browser_default()(isValidActionMapValue(actionMapValue), \'Expected function, undefined, null, or array with payload and meta \' + ("functions for " + type));\n    var prefixedType = prefix ? "" + prefix + namespace + type : type;\n    var actionCreator = isArray(actionMapValue) ? createAction["a" /* default */].apply(void 0, [prefixedType].concat(actionMapValue)) : Object(createAction["a" /* default */])(prefixedType, actionMapValue);\n    return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));\n  });\n}\n\nfunction actionCreatorsFromIdentityActions(identityActions, options) {\n  var actionMap = arrayToObject(identityActions, function (partialActionMap, type) {\n    var _objectSpread3;\n\n    return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = identity["a" /* default */], _objectSpread3));\n  });\n  var actionCreators = actionMapToActionCreators(actionMap, options);\n  return arrayToObject(Object.keys(actionCreators), function (partialActionCreators, type) {\n    var _objectSpread4;\n\n    return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[camelCase(type)] = actionCreators[type], _objectSpread4));\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc0FycmF5LmpzPzAxNjAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LWFjdGlvbnMvZXMvdXRpbHMvaXNTdHJpbmcuanM/MGU5MiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9nZXRMYXN0RWxlbWVudC5qcz81ZGEzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC1hY3Rpb25zL2VzL3V0aWxzL2NhbWVsQ2FzZS5qcz85Y2Q1Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC1hY3Rpb25zL2VzL3V0aWxzL2FycmF5VG9PYmplY3QuanM/ZDQ3OCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9mbGF0dGVuQWN0aW9uTWFwLmpzP2IxMTAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LWFjdGlvbnMvZXMvdXRpbHMvaXNFbXB0eS5qcz83NDkwIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC1hY3Rpb25zL2VzL3V0aWxzL3VuZmxhdHRlbkFjdGlvbkNyZWF0b3JzLmpzPzgwYTEiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LWFjdGlvbnMvZXMvY3JlYXRlQWN0aW9ucy5qcz8xNDdlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFnQjtBQUNoQjtBQUNBLENBQUMsRTs7QUNGZTtBQUNoQjtBQUNBLENBQUMsRTs7Ozs7QUNGZTtBQUNoQjtBQUNBLENBQUMsRTs7Ozs7O0FDRnFDO0FBQ3RDO0FBQ2dCO0FBQ2hCLDJDQUEyQyx1QkFBUyxvQ0FBb0MsdUJBQVM7QUFDakcsQ0FBQyxFOztBQ0plO0FBQ2hCO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUCxDQUFDLEU7Ozs7O0FDSjJDO0FBQ0k7QUFDakMsK0ZBQWUsQ0FBQyxnQ0FBYSxDQUFDLEU7Ozs7O0FDRjdCO0FBQ2hCO0FBQ0EsQ0FBQyxFOztBQ0ZnRDtBQUNqQjtBQUNJO0FBQ3JCO0FBQ2Ysa0NBQWtDO0FBQ2xDO0FBQ0EsOENBQThDLHNDQUFpQjtBQUMvRDs7QUFFQTtBQUNBLHdCQUF3QixTQUFTOztBQUVqQyxRQUFRLE9BQU87QUFDZjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsQzs7Ozs7QUM3QkEsZ0NBQWdDLGdCQUFnQixzQkFBc0IsT0FBTyx1REFBdUQsbUNBQW1DLDBEQUEwRCxzRkFBc0YsZ0VBQWdFLEVBQUUsR0FBRyxFQUFFLGlDQUFpQywyQ0FBMkMsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFL2QsMkNBQTJDLGtCQUFrQixrQ0FBa0MscUVBQXFFLEVBQUUsRUFBRSxPQUFPLGtCQUFrQixFQUFFLFlBQVk7O0FBRTdLO0FBQ2dCO0FBQ047QUFDSjtBQUNGO0FBQ0U7QUFDTjtBQUNrQjtBQUNWO0FBQ1E7QUFDTTtBQUNjO0FBQzVCO0FBQ007QUFDakM7QUFDZixtR0FBbUcsYUFBYTtBQUNoSDtBQUNBOztBQUVBLGdCQUFnQix3Q0FBYSxDQUFDLGNBQWM7QUFDNUMsRUFBRSxpQkFBUyx1QkFBdUIsUUFBUSxNQUFNLFFBQVEsZUFBZSx3Q0FBYTs7QUFFcEYsTUFBTSxRQUFRO0FBQ2Q7QUFDQTs7QUFFQSx5QkFBeUI7QUFDekI7O0FBRUE7QUFDQSxzQkFBc0IsZ0JBQWdCO0FBQ3RDO0FBQ0EsU0FBUyx1QkFBdUI7QUFDaEM7O0FBRUE7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBLDhDQUE4QyxzQ0FBaUI7O0FBRS9EO0FBQ0EsUUFBUSxxQ0FBVSxvQkFBb0IsZ0NBQUs7QUFDM0M7QUFDQTs7QUFFQSxRQUFRLE9BQU87QUFDZjtBQUNBLGtEQUFrRCwyQkFBUTtBQUMxRDtBQUNBLGFBQWEscUNBQVUsYUFBYSxxQ0FBVTtBQUM5Qzs7QUFFQTtBQUNBOztBQUVBLFNBQVMsYUFBYTtBQUN0Qjs7QUFFQTtBQUNBLElBQUksaUJBQVM7QUFDYjtBQUNBLHdCQUF3QixPQUFPLG1CQUFtQiwrQkFBWSx3REFBd0QsdUNBQVk7QUFDbEksMkJBQTJCLDZDQUE2QztBQUN4RSxHQUFHO0FBQ0g7O0FBRUE7QUFDQSxrQkFBa0IsYUFBYTtBQUMvQjs7QUFFQSwyQkFBMkIsd0NBQXdDLHlCQUF5QiwyQkFBUTtBQUNwRyxHQUFHO0FBQ0g7QUFDQSxTQUFTLGFBQWE7QUFDdEI7O0FBRUEsMkJBQTJCLDZDQUE2QyxpQkFBaUIsU0FBUztBQUNsRyxHQUFHO0FBQ0giLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKTtcbn0pOyIsImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZyc7XG59KTsiLCJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKGFycmF5KSB7XG4gIHJldHVybiBhcnJheVthcnJheS5sZW5ndGggLSAxXTtcbn0pOyIsImltcG9ydCBjYW1lbENhc2UgZnJvbSAndG8tY2FtZWwtY2FzZSc7XG52YXIgbmFtZXNwYWNlciA9ICcvJztcbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodHlwZSkge1xuICByZXR1cm4gdHlwZS5pbmRleE9mKG5hbWVzcGFjZXIpID09PSAtMSA/IGNhbWVsQ2FzZSh0eXBlKSA6IHR5cGUuc3BsaXQobmFtZXNwYWNlcikubWFwKGNhbWVsQ2FzZSkuam9pbihuYW1lc3BhY2VyKTtcbn0pOyIsImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoYXJyYXksIGNhbGxiYWNrKSB7XG4gIHJldHVybiBhcnJheS5yZWR1Y2UoZnVuY3Rpb24gKHBhcnRpYWxPYmplY3QsIGVsZW1lbnQpIHtcbiAgICByZXR1cm4gY2FsbGJhY2socGFydGlhbE9iamVjdCwgZWxlbWVudCk7XG4gIH0sIHt9KTtcbn0pOyIsImltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gJy4vaXNQbGFpbk9iamVjdCc7XG5pbXBvcnQgZmxhdHRlbldoZW5Ob2RlIGZyb20gJy4vZmxhdHRlbldoZW5Ob2RlJztcbmV4cG9ydCBkZWZhdWx0IGZsYXR0ZW5XaGVuTm9kZShpc1BsYWluT2JqZWN0KTsiLCJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS5sZW5ndGggPT09IDA7XG59KTsiLCJpbXBvcnQgeyBERUZBVUxUX05BTUVTUEFDRSB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgaXNFbXB0eSBmcm9tICcuL2lzRW1wdHknO1xuaW1wb3J0IGNhbWVsQ2FzZSBmcm9tICcuL2NhbWVsQ2FzZSc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1bmZsYXR0ZW5BY3Rpb25DcmVhdG9ycyhmbGF0QWN0aW9uQ3JlYXRvcnMsIF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBfcmVmJG5hbWVzcGFjZSA9IF9yZWYubmFtZXNwYWNlLFxuICAgICAgbmFtZXNwYWNlID0gX3JlZiRuYW1lc3BhY2UgPT09IHZvaWQgMCA/IERFRkFVTFRfTkFNRVNQQUNFIDogX3JlZiRuYW1lc3BhY2UsXG4gICAgICBwcmVmaXggPSBfcmVmLnByZWZpeDtcblxuICBmdW5jdGlvbiB1bmZsYXR0ZW4oZmxhdEFjdGlvblR5cGUsIHBhcnRpYWxOZXN0ZWRBY3Rpb25DcmVhdG9ycywgcGFydGlhbEZsYXRBY3Rpb25UeXBlUGF0aCkge1xuICAgIHZhciBuZXh0TmFtZXNwYWNlID0gY2FtZWxDYXNlKHBhcnRpYWxGbGF0QWN0aW9uVHlwZVBhdGguc2hpZnQoKSk7XG5cbiAgICBpZiAoaXNFbXB0eShwYXJ0aWFsRmxhdEFjdGlvblR5cGVQYXRoKSkge1xuICAgICAgcGFydGlhbE5lc3RlZEFjdGlvbkNyZWF0b3JzW25leHROYW1lc3BhY2VdID0gZmxhdEFjdGlvbkNyZWF0b3JzW2ZsYXRBY3Rpb25UeXBlXTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCFwYXJ0aWFsTmVzdGVkQWN0aW9uQ3JlYXRvcnNbbmV4dE5hbWVzcGFjZV0pIHtcbiAgICAgICAgcGFydGlhbE5lc3RlZEFjdGlvbkNyZWF0b3JzW25leHROYW1lc3BhY2VdID0ge307XG4gICAgICB9XG5cbiAgICAgIHVuZmxhdHRlbihmbGF0QWN0aW9uVHlwZSwgcGFydGlhbE5lc3RlZEFjdGlvbkNyZWF0b3JzW25leHROYW1lc3BhY2VdLCBwYXJ0aWFsRmxhdEFjdGlvblR5cGVQYXRoKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbmVzdGVkQWN0aW9uQ3JlYXRvcnMgPSB7fTtcbiAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZmxhdEFjdGlvbkNyZWF0b3JzKS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgdmFyIHVucHJlZml4ZWRUeXBlID0gcHJlZml4ID8gdHlwZS5yZXBsYWNlKFwiXCIgKyBwcmVmaXggKyBuYW1lc3BhY2UsICcnKSA6IHR5cGU7XG4gICAgcmV0dXJuIHVuZmxhdHRlbih0eXBlLCBuZXN0ZWRBY3Rpb25DcmVhdG9ycywgdW5wcmVmaXhlZFR5cGUuc3BsaXQobmFtZXNwYWNlKSk7XG4gIH0pO1xuICByZXR1cm4gbmVzdGVkQWN0aW9uQ3JlYXRvcnM7XG59IiwiZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IHZhciBvd25LZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7IG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBzeW0pLmVudW1lcmFibGU7IH0pKTsgfSBvd25LZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgaXNQbGFpbk9iamVjdCBmcm9tICcuL3V0aWxzL2lzUGxhaW5PYmplY3QnO1xuaW1wb3J0IGlzRnVuY3Rpb24gZnJvbSAnLi91dGlscy9pc0Z1bmN0aW9uJztcbmltcG9ydCBpZGVudGl0eSBmcm9tICcuL3V0aWxzL2lkZW50aXR5JztcbmltcG9ydCBpc0FycmF5IGZyb20gJy4vdXRpbHMvaXNBcnJheSc7XG5pbXBvcnQgaXNTdHJpbmcgZnJvbSAnLi91dGlscy9pc1N0cmluZyc7XG5pbXBvcnQgaXNOaWwgZnJvbSAnLi91dGlscy9pc05pbCc7XG5pbXBvcnQgZ2V0TGFzdEVsZW1lbnQgZnJvbSAnLi91dGlscy9nZXRMYXN0RWxlbWVudCc7XG5pbXBvcnQgY2FtZWxDYXNlIGZyb20gJy4vdXRpbHMvY2FtZWxDYXNlJztcbmltcG9ydCBhcnJheVRvT2JqZWN0IGZyb20gJy4vdXRpbHMvYXJyYXlUb09iamVjdCc7XG5pbXBvcnQgZmxhdHRlbkFjdGlvbk1hcCBmcm9tICcuL3V0aWxzL2ZsYXR0ZW5BY3Rpb25NYXAnO1xuaW1wb3J0IHVuZmxhdHRlbkFjdGlvbkNyZWF0b3JzIGZyb20gJy4vdXRpbHMvdW5mbGF0dGVuQWN0aW9uQ3JlYXRvcnMnO1xuaW1wb3J0IGNyZWF0ZUFjdGlvbiBmcm9tICcuL2NyZWF0ZUFjdGlvbic7XG5pbXBvcnQgeyBERUZBVUxUX05BTUVTUEFDRSB9IGZyb20gJy4vY29uc3RhbnRzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUFjdGlvbnMoYWN0aW9uTWFwKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpZGVudGl0eUFjdGlvbnMgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGlkZW50aXR5QWN0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgb3B0aW9ucyA9IGlzUGxhaW5PYmplY3QoZ2V0TGFzdEVsZW1lbnQoaWRlbnRpdHlBY3Rpb25zKSkgPyBpZGVudGl0eUFjdGlvbnMucG9wKCkgOiB7fTtcbiAgaW52YXJpYW50KGlkZW50aXR5QWN0aW9ucy5ldmVyeShpc1N0cmluZykgJiYgKGlzU3RyaW5nKGFjdGlvbk1hcCkgfHwgaXNQbGFpbk9iamVjdChhY3Rpb25NYXApKSwgJ0V4cGVjdGVkIG9wdGlvbmFsIG9iamVjdCBmb2xsb3dlZCBieSBzdHJpbmcgYWN0aW9uIHR5cGVzJyk7XG5cbiAgaWYgKGlzU3RyaW5nKGFjdGlvbk1hcCkpIHtcbiAgICByZXR1cm4gYWN0aW9uQ3JlYXRvcnNGcm9tSWRlbnRpdHlBY3Rpb25zKFthY3Rpb25NYXBdLmNvbmNhdChpZGVudGl0eUFjdGlvbnMpLCBvcHRpb25zKTtcbiAgfVxuXG4gIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBhY3Rpb25DcmVhdG9yc0Zyb21BY3Rpb25NYXAoYWN0aW9uTWFwLCBvcHRpb25zKSwgYWN0aW9uQ3JlYXRvcnNGcm9tSWRlbnRpdHlBY3Rpb25zKGlkZW50aXR5QWN0aW9ucywgb3B0aW9ucykpO1xufVxuXG5mdW5jdGlvbiBhY3Rpb25DcmVhdG9yc0Zyb21BY3Rpb25NYXAoYWN0aW9uTWFwLCBvcHRpb25zKSB7XG4gIHZhciBmbGF0QWN0aW9uTWFwID0gZmxhdHRlbkFjdGlvbk1hcChhY3Rpb25NYXAsIG9wdGlvbnMpO1xuICB2YXIgZmxhdEFjdGlvbkNyZWF0b3JzID0gYWN0aW9uTWFwVG9BY3Rpb25DcmVhdG9ycyhmbGF0QWN0aW9uTWFwKTtcbiAgcmV0dXJuIHVuZmxhdHRlbkFjdGlvbkNyZWF0b3JzKGZsYXRBY3Rpb25DcmVhdG9ycywgb3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGFjdGlvbk1hcFRvQWN0aW9uQ3JlYXRvcnMoYWN0aW9uTWFwLCBfdGVtcCkge1xuICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wLFxuICAgICAgcHJlZml4ID0gX3JlZi5wcmVmaXgsXG4gICAgICBfcmVmJG5hbWVzcGFjZSA9IF9yZWYubmFtZXNwYWNlLFxuICAgICAgbmFtZXNwYWNlID0gX3JlZiRuYW1lc3BhY2UgPT09IHZvaWQgMCA/IERFRkFVTFRfTkFNRVNQQUNFIDogX3JlZiRuYW1lc3BhY2U7XG5cbiAgZnVuY3Rpb24gaXNWYWxpZEFjdGlvbk1hcFZhbHVlKGFjdGlvbk1hcFZhbHVlKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24oYWN0aW9uTWFwVmFsdWUpIHx8IGlzTmlsKGFjdGlvbk1hcFZhbHVlKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKGlzQXJyYXkoYWN0aW9uTWFwVmFsdWUpKSB7XG4gICAgICB2YXIgX2FjdGlvbk1hcFZhbHVlJCA9IGFjdGlvbk1hcFZhbHVlWzBdLFxuICAgICAgICAgIHBheWxvYWQgPSBfYWN0aW9uTWFwVmFsdWUkID09PSB2b2lkIDAgPyBpZGVudGl0eSA6IF9hY3Rpb25NYXBWYWx1ZSQsXG4gICAgICAgICAgbWV0YSA9IGFjdGlvbk1hcFZhbHVlWzFdO1xuICAgICAgcmV0dXJuIGlzRnVuY3Rpb24ocGF5bG9hZCkgJiYgaXNGdW5jdGlvbihtZXRhKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gYXJyYXlUb09iamVjdChPYmplY3Qua2V5cyhhY3Rpb25NYXApLCBmdW5jdGlvbiAocGFydGlhbEFjdGlvbkNyZWF0b3JzLCB0eXBlKSB7XG4gICAgdmFyIF9vYmplY3RTcHJlYWQyO1xuXG4gICAgdmFyIGFjdGlvbk1hcFZhbHVlID0gYWN0aW9uTWFwW3R5cGVdO1xuICAgIGludmFyaWFudChpc1ZhbGlkQWN0aW9uTWFwVmFsdWUoYWN0aW9uTWFwVmFsdWUpLCAnRXhwZWN0ZWQgZnVuY3Rpb24sIHVuZGVmaW5lZCwgbnVsbCwgb3IgYXJyYXkgd2l0aCBwYXlsb2FkIGFuZCBtZXRhICcgKyAoXCJmdW5jdGlvbnMgZm9yIFwiICsgdHlwZSkpO1xuICAgIHZhciBwcmVmaXhlZFR5cGUgPSBwcmVmaXggPyBcIlwiICsgcHJlZml4ICsgbmFtZXNwYWNlICsgdHlwZSA6IHR5cGU7XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBpc0FycmF5KGFjdGlvbk1hcFZhbHVlKSA/IGNyZWF0ZUFjdGlvbi5hcHBseSh2b2lkIDAsIFtwcmVmaXhlZFR5cGVdLmNvbmNhdChhY3Rpb25NYXBWYWx1ZSkpIDogY3JlYXRlQWN0aW9uKHByZWZpeGVkVHlwZSwgYWN0aW9uTWFwVmFsdWUpO1xuICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBwYXJ0aWFsQWN0aW9uQ3JlYXRvcnMsIChfb2JqZWN0U3ByZWFkMiA9IHt9LCBfb2JqZWN0U3ByZWFkMlt0eXBlXSA9IGFjdGlvbkNyZWF0b3IsIF9vYmplY3RTcHJlYWQyKSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBhY3Rpb25DcmVhdG9yc0Zyb21JZGVudGl0eUFjdGlvbnMoaWRlbnRpdHlBY3Rpb25zLCBvcHRpb25zKSB7XG4gIHZhciBhY3Rpb25NYXAgPSBhcnJheVRvT2JqZWN0KGlkZW50aXR5QWN0aW9ucywgZnVuY3Rpb24gKHBhcnRpYWxBY3Rpb25NYXAsIHR5cGUpIHtcbiAgICB2YXIgX29iamVjdFNwcmVhZDM7XG5cbiAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgcGFydGlhbEFjdGlvbk1hcCwgKF9vYmplY3RTcHJlYWQzID0ge30sIF9vYmplY3RTcHJlYWQzW3R5cGVdID0gaWRlbnRpdHksIF9vYmplY3RTcHJlYWQzKSk7XG4gIH0pO1xuICB2YXIgYWN0aW9uQ3JlYXRvcnMgPSBhY3Rpb25NYXBUb0FjdGlvbkNyZWF0b3JzKGFjdGlvbk1hcCwgb3B0aW9ucyk7XG4gIHJldHVybiBhcnJheVRvT2JqZWN0KE9iamVjdC5rZXlzKGFjdGlvbkNyZWF0b3JzKSwgZnVuY3Rpb24gKHBhcnRpYWxBY3Rpb25DcmVhdG9ycywgdHlwZSkge1xuICAgIHZhciBfb2JqZWN0U3ByZWFkNDtcblxuICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBwYXJ0aWFsQWN0aW9uQ3JlYXRvcnMsIChfb2JqZWN0U3ByZWFkNCA9IHt9LCBfb2JqZWN0U3ByZWFkNFtjYW1lbENhc2UodHlwZSldID0gYWN0aW9uQ3JlYXRvcnNbdHlwZV0sIF9vYmplY3RTcHJlYWQ0KSk7XG4gIH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///97\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ handleActions; });\n\n// CONCATENATED MODULE: ./node_modules/reduce-reducers/es/index.js\n/* harmony default export */ var es = (function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var initialState = typeof args[args.length - 1] !== \'function\' && args.pop();\n  var reducers = args;\n\n  if (typeof initialState === \'undefined\') {\n    throw new TypeError(\'The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.\');\n  }\n\n  return function (prevState, value) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    var prevStateIsUndefined = typeof prevState === \'undefined\';\n    var valueIsUndefined = typeof value === \'undefined\';\n\n    if (prevStateIsUndefined && valueIsUndefined && initialState) {\n      return initialState;\n    }\n\n    return reducers.reduce(function (newState, reducer) {\n      return reducer.apply(undefined, [newState, value].concat(args));\n    }, prevStateIsUndefined && !valueIsUndefined && initialState ? initialState : prevState);\n  };\n});\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(15);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isPlainObject.js\nvar isPlainObject = __webpack_require__(40);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isMap.js\nvar isMap = __webpack_require__(58);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/ownKeys.js\nvar ownKeys = __webpack_require__(64);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/hasGeneratorInterface.js\n\nfunction hasGeneratorInterface(handler) {\n  var keys = Object(ownKeys["a" /* default */])(handler);\n  var hasOnlyInterfaceNames = keys.every(function (ownKey) {\n    return ownKey === \'next\' || ownKey === \'throw\';\n  });\n  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;\n}\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/flattenWhenNode.js\nvar flattenWhenNode = __webpack_require__(77);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/flattenReducerMap.js\n\n\n\n\n/* harmony default export */ var flattenReducerMap = (Object(flattenWhenNode["a" /* default */])(function (node) {\n  return (Object(isPlainObject["a" /* default */])(node) || Object(isMap["a" /* default */])(node)) && !hasGeneratorInterface(node);\n}));\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isFunction.js\nvar isFunction = __webpack_require__(29);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/identity.js\nvar identity = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isNil.js\nvar isNil = __webpack_require__(79);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/isUndefined.js\n/* harmony default export */ var isUndefined = (function (value) {\n  return value === undefined;\n});\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/toString.js\n/* harmony default export */ var utils_toString = (function (value) {\n  return value.toString();\n});\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/constants.js\nvar constants = __webpack_require__(43);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/handleAction.js\n\n\n\n\n\n\n\n\nfunction handleAction(type, reducer, defaultState) {\n  if (reducer === void 0) {\n    reducer = identity["a" /* default */];\n  }\n\n  var types = utils_toString(type).split(constants["a" /* ACTION_TYPE_DELIMITER */]);\n  browser_default()(!isUndefined(defaultState), "defaultState for reducer handling " + types.join(\', \') + " should be defined");\n  browser_default()(Object(isFunction["a" /* default */])(reducer) || Object(isPlainObject["a" /* default */])(reducer), \'Expected reducer to be a function or object with next and throw reducers\');\n\n  var _ref = Object(isFunction["a" /* default */])(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {\n    return Object(isNil["a" /* default */])(aReducer) ? identity["a" /* default */] : aReducer;\n  }),\n      nextReducer = _ref[0],\n      throwReducer = _ref[1];\n\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    var actionType = action.type;\n\n    if (!actionType || types.indexOf(utils_toString(actionType)) === -1) {\n      return state;\n    }\n\n    return (action.error === true ? throwReducer : nextReducer)(state, action);\n  };\n}\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/get.js\nvar get = __webpack_require__(78);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/handleActions.js\n\n\n\n\n\n\n\n\nfunction handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  browser_default()(Object(isPlainObject["a" /* default */])(handlers) || Object(isMap["a" /* default */])(handlers), \'Expected handlers to be a plain object.\');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = Object(ownKeys["a" /* default */])(flattenedReducerMap).map(function (type) {\n    return handleAction(type, Object(get["a" /* default */])(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = es.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdWNlLXJlZHVjZXJzL2VzL2luZGV4LmpzP2FhYjMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LWFjdGlvbnMvZXMvdXRpbHMvaGFzR2VuZXJhdG9ySW50ZXJmYWNlLmpzP2U3MTgiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LWFjdGlvbnMvZXMvdXRpbHMvZmxhdHRlblJlZHVjZXJNYXAuanM/OWI0NSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc1VuZGVmaW5lZC5qcz84MTEyIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC1hY3Rpb25zL2VzL3V0aWxzL3RvU3RyaW5nLmpzPzQ5NTYiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LWFjdGlvbnMvZXMvaGFuZGxlQWN0aW9uLmpzPzMzZmYiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LWFjdGlvbnMvZXMvaGFuZGxlQWN0aW9ucy5qcz83YmI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQWdCO0FBQ2hCLGlFQUFpRSxhQUFhO0FBQzlFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwRkFBMEYsZUFBZTtBQUN6RztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDLEU7Ozs7Ozs7Ozs7Ozs7OztBQzVCK0I7QUFDakI7QUFDZixhQUFhLGtDQUFPO0FBQ3BCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDOzs7OztBQ1A0QztBQUNoQjtBQUNnQztBQUNaO0FBQ2pDLGdHQUFlO0FBQzlCLFVBQVUsd0NBQWEsVUFBVSxnQ0FBSyxZQUFZLHFCQUFxQjtBQUN2RSxDQUFDLENBQUMsRTs7Ozs7Ozs7Ozs7QUNOYztBQUNoQjtBQUNBLENBQUMsRTs7QUNGZTtBQUNoQjtBQUNBLENBQUMsRTs7Ozs7QUNGaUM7QUFDVTtBQUNNO0FBQ1Y7QUFDTjtBQUNZO0FBQ047QUFDWTtBQUNyQztBQUNmO0FBQ0EsY0FBYywyQkFBUTtBQUN0Qjs7QUFFQSxjQUFjLGNBQVEsYUFBYSwwQ0FBcUI7QUFDeEQsRUFBRSxpQkFBUyxFQUFFLFdBQVc7QUFDeEIsRUFBRSxpQkFBUyxDQUFDLHFDQUFVLGFBQWEsd0NBQWE7O0FBRWhELGFBQWEscUNBQVU7QUFDdkIsV0FBVyxnQ0FBSyxhQUFhLDJCQUFRO0FBQ3JDLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLHFDQUFxQyxjQUFRO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEM7Ozs7O0FDcEM2QztBQUNYO0FBQ2dCO0FBQ2hCO0FBQ0k7QUFDb0I7QUFDaEI7QUFDWjtBQUNmO0FBQ2Y7QUFDQTtBQUNBOztBQUVBLEVBQUUsaUJBQVMsQ0FBQyx3Q0FBYSxjQUFjLGdDQUFLO0FBQzVDLDRCQUE0QixpQkFBaUI7QUFDN0MsaUJBQWlCLGtDQUFPO0FBQ3hCLFdBQVcsWUFBWSxPQUFPLDhCQUFHO0FBQ2pDLEdBQUc7QUFDSCxnQkFBZ0IsRUFBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiOTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgaW5pdGlhbFN0YXRlID0gdHlwZW9mIGFyZ3NbYXJncy5sZW5ndGggLSAxXSAhPT0gJ2Z1bmN0aW9uJyAmJiBhcmdzLnBvcCgpO1xuICB2YXIgcmVkdWNlcnMgPSBhcmdzO1xuXG4gIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBpbml0aWFsIHN0YXRlIG1heSBub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG8gbm90IHdhbnQgdG8gc2V0IGEgdmFsdWUgZm9yIHRoaXMgcmVkdWNlciwgeW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC4nKTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAocHJldlN0YXRlLCB2YWx1ZSkge1xuICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yID4gMiA/IF9sZW4yIC0gMiA6IDApLCBfa2V5MiA9IDI7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgIGFyZ3NbX2tleTIgLSAyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgfVxuXG4gICAgdmFyIHByZXZTdGF0ZUlzVW5kZWZpbmVkID0gdHlwZW9mIHByZXZTdGF0ZSA9PT0gJ3VuZGVmaW5lZCc7XG4gICAgdmFyIHZhbHVlSXNVbmRlZmluZWQgPSB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnO1xuXG4gICAgaWYgKHByZXZTdGF0ZUlzVW5kZWZpbmVkICYmIHZhbHVlSXNVbmRlZmluZWQgJiYgaW5pdGlhbFN0YXRlKSB7XG4gICAgICByZXR1cm4gaW5pdGlhbFN0YXRlO1xuICAgIH1cblxuICAgIHJldHVybiByZWR1Y2Vycy5yZWR1Y2UoZnVuY3Rpb24gKG5ld1N0YXRlLCByZWR1Y2VyKSB7XG4gICAgICByZXR1cm4gcmVkdWNlci5hcHBseSh1bmRlZmluZWQsIFtuZXdTdGF0ZSwgdmFsdWVdLmNvbmNhdChhcmdzKSk7XG4gICAgfSwgcHJldlN0YXRlSXNVbmRlZmluZWQgJiYgIXZhbHVlSXNVbmRlZmluZWQgJiYgaW5pdGlhbFN0YXRlID8gaW5pdGlhbFN0YXRlIDogcHJldlN0YXRlKTtcbiAgfTtcbn0pOyIsImltcG9ydCBvd25LZXlzIGZyb20gJy4vb3duS2V5cyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYXNHZW5lcmF0b3JJbnRlcmZhY2UoaGFuZGxlcikge1xuICB2YXIga2V5cyA9IG93bktleXMoaGFuZGxlcik7XG4gIHZhciBoYXNPbmx5SW50ZXJmYWNlTmFtZXMgPSBrZXlzLmV2ZXJ5KGZ1bmN0aW9uIChvd25LZXkpIHtcbiAgICByZXR1cm4gb3duS2V5ID09PSAnbmV4dCcgfHwgb3duS2V5ID09PSAndGhyb3cnO1xuICB9KTtcbiAgcmV0dXJuIGtleXMubGVuZ3RoICYmIGtleXMubGVuZ3RoIDw9IDIgJiYgaGFzT25seUludGVyZmFjZU5hbWVzO1xufSIsImltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gJy4vaXNQbGFpbk9iamVjdCc7XG5pbXBvcnQgaXNNYXAgZnJvbSAnLi9pc01hcCc7XG5pbXBvcnQgaGFzR2VuZXJhdG9ySW50ZXJmYWNlIGZyb20gJy4vaGFzR2VuZXJhdG9ySW50ZXJmYWNlJztcbmltcG9ydCBmbGF0dGVuV2hlbk5vZGUgZnJvbSAnLi9mbGF0dGVuV2hlbk5vZGUnO1xuZXhwb3J0IGRlZmF1bHQgZmxhdHRlbldoZW5Ob2RlKGZ1bmN0aW9uIChub2RlKSB7XG4gIHJldHVybiAoaXNQbGFpbk9iamVjdChub2RlKSB8fCBpc01hcChub2RlKSkgJiYgIWhhc0dlbmVyYXRvckludGVyZmFjZShub2RlKTtcbn0pOyIsImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQ7XG59KTsiLCJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS50b1N0cmluZygpO1xufSk7IiwiaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IGlzRnVuY3Rpb24gZnJvbSAnLi91dGlscy9pc0Z1bmN0aW9uJztcbmltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gJy4vdXRpbHMvaXNQbGFpbk9iamVjdCc7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSAnLi91dGlscy9pZGVudGl0eSc7XG5pbXBvcnQgaXNOaWwgZnJvbSAnLi91dGlscy9pc05pbCc7XG5pbXBvcnQgaXNVbmRlZmluZWQgZnJvbSAnLi91dGlscy9pc1VuZGVmaW5lZCc7XG5pbXBvcnQgdG9TdHJpbmcgZnJvbSAnLi91dGlscy90b1N0cmluZyc7XG5pbXBvcnQgeyBBQ1RJT05fVFlQRV9ERUxJTUlURVIgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVBY3Rpb24odHlwZSwgcmVkdWNlciwgZGVmYXVsdFN0YXRlKSB7XG4gIGlmIChyZWR1Y2VyID09PSB2b2lkIDApIHtcbiAgICByZWR1Y2VyID0gaWRlbnRpdHk7XG4gIH1cblxuICB2YXIgdHlwZXMgPSB0b1N0cmluZyh0eXBlKS5zcGxpdChBQ1RJT05fVFlQRV9ERUxJTUlURVIpO1xuICBpbnZhcmlhbnQoIWlzVW5kZWZpbmVkKGRlZmF1bHRTdGF0ZSksIFwiZGVmYXVsdFN0YXRlIGZvciByZWR1Y2VyIGhhbmRsaW5nIFwiICsgdHlwZXMuam9pbignLCAnKSArIFwiIHNob3VsZCBiZSBkZWZpbmVkXCIpO1xuICBpbnZhcmlhbnQoaXNGdW5jdGlvbihyZWR1Y2VyKSB8fCBpc1BsYWluT2JqZWN0KHJlZHVjZXIpLCAnRXhwZWN0ZWQgcmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uIG9yIG9iamVjdCB3aXRoIG5leHQgYW5kIHRocm93IHJlZHVjZXJzJyk7XG5cbiAgdmFyIF9yZWYgPSBpc0Z1bmN0aW9uKHJlZHVjZXIpID8gW3JlZHVjZXIsIHJlZHVjZXJdIDogW3JlZHVjZXIubmV4dCwgcmVkdWNlci50aHJvd10ubWFwKGZ1bmN0aW9uIChhUmVkdWNlcikge1xuICAgIHJldHVybiBpc05pbChhUmVkdWNlcikgPyBpZGVudGl0eSA6IGFSZWR1Y2VyO1xuICB9KSxcbiAgICAgIG5leHRSZWR1Y2VyID0gX3JlZlswXSxcbiAgICAgIHRocm93UmVkdWNlciA9IF9yZWZbMV07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIHN0YXRlID0gZGVmYXVsdFN0YXRlO1xuICAgIH1cblxuICAgIHZhciBhY3Rpb25UeXBlID0gYWN0aW9uLnR5cGU7XG5cbiAgICBpZiAoIWFjdGlvblR5cGUgfHwgdHlwZXMuaW5kZXhPZih0b1N0cmluZyhhY3Rpb25UeXBlKSkgPT09IC0xKSB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIChhY3Rpb24uZXJyb3IgPT09IHRydWUgPyB0aHJvd1JlZHVjZXIgOiBuZXh0UmVkdWNlcikoc3RhdGUsIGFjdGlvbik7XG4gIH07XG59IiwiaW1wb3J0IHJlZHVjZVJlZHVjZXJzIGZyb20gJ3JlZHVjZS1yZWR1Y2Vycyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgaXNQbGFpbk9iamVjdCBmcm9tICcuL3V0aWxzL2lzUGxhaW5PYmplY3QnO1xuaW1wb3J0IGlzTWFwIGZyb20gJy4vdXRpbHMvaXNNYXAnO1xuaW1wb3J0IG93bktleXMgZnJvbSAnLi91dGlscy9vd25LZXlzJztcbmltcG9ydCBmbGF0dGVuUmVkdWNlck1hcCBmcm9tICcuL3V0aWxzL2ZsYXR0ZW5SZWR1Y2VyTWFwJztcbmltcG9ydCBoYW5kbGVBY3Rpb24gZnJvbSAnLi9oYW5kbGVBY3Rpb24nO1xuaW1wb3J0IGdldCBmcm9tICcuL3V0aWxzL2dldCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVBY3Rpb25zKGhhbmRsZXJzLCBkZWZhdWx0U3RhdGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGludmFyaWFudChpc1BsYWluT2JqZWN0KGhhbmRsZXJzKSB8fCBpc01hcChoYW5kbGVycyksICdFeHBlY3RlZCBoYW5kbGVycyB0byBiZSBhIHBsYWluIG9iamVjdC4nKTtcbiAgdmFyIGZsYXR0ZW5lZFJlZHVjZXJNYXAgPSBmbGF0dGVuUmVkdWNlck1hcChoYW5kbGVycywgb3B0aW9ucyk7XG4gIHZhciByZWR1Y2VycyA9IG93bktleXMoZmxhdHRlbmVkUmVkdWNlck1hcCkubWFwKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgcmV0dXJuIGhhbmRsZUFjdGlvbih0eXBlLCBnZXQodHlwZSwgZmxhdHRlbmVkUmVkdWNlck1hcCksIGRlZmF1bHRTdGF0ZSk7XG4gIH0pO1xuICB2YXIgcmVkdWNlciA9IHJlZHVjZVJlZHVjZXJzLmFwcGx5KHZvaWQgMCwgcmVkdWNlcnMuY29uY2F0KFtkZWZhdWx0U3RhdGVdKSk7XG4gIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IGRlZmF1bHRTdGF0ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVkdWNlcihzdGF0ZSwgYWN0aW9uKTtcbiAgfTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///98\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/redux-logger/dist/redux-logger.js\nvar redux_logger = __webpack_require__(67);\nvar redux_logger_default = /*#__PURE__*/__webpack_require__.n(redux_logger);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js + 2 modules\nvar redux_saga_core_npm_proxy_esm = __webpack_require__(37);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar es = __webpack_require__(49);\n\n// EXTERNAL MODULE: ./src/Edit/reducers/entities.js + 1 modules\nvar entities = __webpack_require__(114);\n\n// EXTERNAL MODULE: ./src/Edit/reducers/annotationFilter.js\nvar annotationFilter = __webpack_require__(103);\n\n// EXTERNAL MODULE: ./src/Edit/reducers/visibilityFilter.js\nvar visibilityFilter = __webpack_require__(104);\n\n// EXTERNAL MODULE: ./src/Edit/constants/ActionTypes.js\nvar ActionTypes = __webpack_require__(18);\n\n// CONCATENATED MODULE: ./src/Edit/reducers/editor.js\n/**\n * Internal dependencies\n */\n\n\nconst editor_editor = function (state = {\n  selection: \'\'\n}, action) {\n  switch (action.type) {\n    case ActionTypes["c" /* EDITOR_SELECTION_CHANGED */]:\n      // Update the selection.\n      return Object.assign({}, state, {\n        selection: action.selection\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_editor = (editor_editor);\n// CONCATENATED MODULE: ./src/Edit/reducers/index.js\n/**\n * Reducers: Root.\n *\n * The root reducers combining other reducers: entities, visibilityFilter.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n/**\n * Define the root reducer.\n *\n * @since 3.11.0\n * @type {Reducer<S>}\n */\n\nconst rootReducer = Object(redux["c" /* combineReducers */])({\n  entities: entities["a" /* default */],\n  annotationFilter: annotationFilter["a" /* default */],\n  visibilityFilter: visibilityFilter["a" /* default */],\n  editor: reducers_editor\n}); // Finally export the root reducer.\n\n/* harmony default export */ var reducers = (rootReducer);\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js + 1 modules\nvar redux_saga_effects_npm_proxy_esm = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./src/Edit/angular/EditPostWidgetController.js\nvar EditPostWidgetController = __webpack_require__(74);\n\n// CONCATENATED MODULE: ./src/Edit/stores/selectors.js\n/**\n * This file defines the selectors.\n *\n * @author David Riccitelli <david@wordlift.io>\n * @since 3.23.4\n */\n\n/**\n * Get an entity given its item id.\n */\nconst getEntity = (state, id) => state.entities.get(id);\n// EXTERNAL MODULE: ./src/Edit/services/LinkService.js + 1 modules\nvar LinkService = __webpack_require__(76);\n\n// EXTERNAL MODULE: ./src/Edit/actions/index.js\nvar actions = __webpack_require__(34);\n\n// EXTERNAL MODULE: ./src/Edit/components/AddEntity/actions.js\nvar AddEntity_actions = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./node_modules/@wordlift/design/dist/index.js + 21 modules\nvar dist = __webpack_require__(89);\n\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/Edit/stores/sagas.js\n/**\n * This file contains the side effects managed via redux-sagas.\n *\n * @author David Riccitelli <david@wordlift.io>\n * @since 3.23.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n\n\n\n/**\n * Handle the {@link TOGGLE_ENTITY} action.\n *\n *  @param {{entity:{id}}} payload A payload containing an entity.\n */\n\nfunction* toggleEntity(payload) {\n  const entity = yield Object(redux_saga_effects_npm_proxy_esm["f" /* select */])(getEntity, payload.entity.id);\n  Object(EditPostWidgetController["a" /* default */])().$apply(Object(EditPostWidgetController["a" /* default */])().onSelectedEntityTile(entity));\n}\n\nfunction* toggleLink({\n  entity\n}) {\n  // Toggle the link/no link on entity\'s occurrences.\n  // Toggle the link on the occurrences.\n  LinkService["a" /* default */].setLink(entity.occurrences, !entity.link);\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["h" /* toggleLinkSuccess */])({\n    id: entity.id,\n    link: LinkService["a" /* default */].getLink(entity.occurrences)\n  }));\n}\n\nfunction* setCurrentEntity({\n  entity\n}) {\n  // Call the `EditPostWidgetController` to set the current entity.\n  Object(EditPostWidgetController["a" /* default */])().$apply(Object(EditPostWidgetController["a" /* default */])().setCurrentEntity(entity, "entity"));\n}\n\nfunction* addEntity({\n  payload\n}) {\n  const ctrl = Object(EditPostWidgetController["a" /* default */])();\n  ctrl.$apply(() => {\n    // Create the text annotation.\n    ctrl.setCurrentEntity(); // Update the entity data.\n\n    ctrl.currentEntity.description = payload.descriptions[0];\n    ctrl.currentEntity.id = payload.id;\n    ctrl.currentEntity.images = payload.images;\n    ctrl.currentEntity.label = payload.label;\n    ctrl.currentEntity.mainType = getMainType(payload.types);\n    ctrl.currentEntity.types = payload.types;\n    ctrl.currentEntity.sameAs = payload.sameAss; // Save the entity.\n\n    ctrl.storeCurrentEntity();\n  });\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(AddEntity_actions["b" /* addEntitySuccess */])());\n}\n\nfunction* createEntity({\n  payload\n}) {\n  const ctrl = Object(EditPostWidgetController["a" /* default */])();\n  ctrl.$apply(ctrl.setCurrentEntity(undefined, undefined, payload));\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(AddEntity_actions["f" /* createEntitySuccess */])());\n}\n\nconst getMainType = types => {\n  for (let i = 0; i < window._wlEntityTypes.length; i++) {\n    const type = window._wlEntityTypes[i];\n    if (-1 < types.indexOf(type.uri)) return type.slug;\n  }\n\n  return "thing";\n};\n\nlet popover;\n\nfunction* handleEditorSelectionChanged({\n  payload\n}) {\n  yield Object(redux_saga_effects_npm_proxy_esm["b" /* delay */])(300);\n  console.log("handleEditorSelectionChanged", payload);\n  const editor = payload.editor; // Get the selection. Bail out is the selection is collapsed (is just a caret).\n\n  const selection = editor.selection;\n\n  if (selection.isCollapsed() || "" === selection.getContent({\n    format: "text"\n  })) {\n    if (popover) popover.unmount();\n    return;\n  } // Get the selection range and bail out if it\'s null.\n\n\n  const range = selection.getRng();\n\n  if (null == range) {\n    if (popover) popover.unmount();\n    return;\n  } // Get the editor\'s selection bounding rect. The rect\'s coordinates are relative to TinyMCE\'s editor\'s iframe.\n\n\n  const editorRect = range.getBoundingClientRect(); // Get TinyMCE\'s iframe element\'s bounding rect.\n\n  const iframe = editor.iframeElement;\n  const iframeRect = iframe.getBoundingClientRect(); // Calculate our target rect by summing the iframe and the editor rects along with the window\'s scroll positions.\n\n  const rect = {\n    top: iframeRect.top + editorRect.top + window.scrollY,\n    right: iframeRect.left + editorRect.right + window.scrollX,\n    bottom: iframeRect.top + editorRect.bottom + window.scrollY,\n    left: iframeRect.left + editorRect.left + window.scrollX\n  }; // const container = document.createElement("span");\n  // container.style.position = "absolute";\n  // container.style.top = "0";\n  // container.style.left = "0";\n  //\n  // const span = document.createElement("span");\n  // span.style.width = rect.right - rect.left + "px";\n  // span.style.height = rect.bottom - rect.top + "px";\n  // span.style.top = rect.top + "px";\n  // span.style.left = rect.left + "px";\n  // span.style.background = "transparent";\n  // span.style.border = "1px solid red";\n  // span.style.position = "absolute";\n  //\n  // container.appendChild(span);\n  // document.body.appendChild(container);\n  // Finally create the popover.\n  // popover = yield call(\n  //   createPopover,\n  //   <div>\n  //     <Button>Hello WordPress!</Button>\n  //   </div>,\n  //   { ...rect, positions: ["right", "left", "bottom", "top"] }\n  // );\n}\n/**\n * Connect the side effects.\n */\n\n\nfunction* sagas() {\n  yield Object(redux_saga_effects_npm_proxy_esm["h" /* takeEvery */])(ActionTypes["g" /* TOGGLE_ENTITY */], toggleEntity);\n  yield Object(redux_saga_effects_npm_proxy_esm["h" /* takeEvery */])(ActionTypes["h" /* TOGGLE_LINK */], toggleLink);\n  yield Object(redux_saga_effects_npm_proxy_esm["h" /* takeEvery */])(ActionTypes["e" /* SET_CURRENT_ENTITY */], setCurrentEntity);\n  yield Object(redux_saga_effects_npm_proxy_esm["h" /* takeEvery */])(AddEntity_actions["a" /* addEntityRequest */], addEntity);\n  yield Object(redux_saga_effects_npm_proxy_esm["h" /* takeEvery */])(AddEntity_actions["e" /* createEntityRequest */], createEntity);\n  yield Object(redux_saga_effects_npm_proxy_esm["i" /* takeLatest */])(ActionTypes["c" /* EDITOR_SELECTION_CHANGED */], handleEditorSelectionChanged);\n}\n\n/* harmony default export */ var stores_sagas = (sagas);\n// CONCATENATED MODULE: ./src/Edit/stores/index.js\n/**\n * This file defines the store for the Edit Post screen.\n *\n * The store we create here is connected to 2 middlewares:\n *  - sagas, defined in ./sagas.js which handles the side effects.\n *  - thunk, connecting the store to events (mainly coming from the Angular legacy code) defined in ../index.classification-box.js\n *\n * @author David Riccitelli <david@wordlift.io>\n * @since 3.23.4\n */\n\n/**\n * External dependencies.\n */\n\n\n\n\n/**\n * Internal dependencies.\n */\n\n\n // Create the store.\n\nconst sagaMiddleware = Object(redux_saga_core_npm_proxy_esm["a" /* default */])();\nconst store = Object(redux["e" /* createStore */])(reducers, Object(redux["a" /* applyMiddleware */])(sagaMiddleware, es["a" /* default */], redux_logger_default.a));\nsagaMiddleware.run(stores_sagas); // Finally export the store.\n\n/* harmony default export */ var stores = __webpack_exports__["a"] = (store);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///99\n')},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9jb21wb25lbnRzL0F1dG9jb21wbGV0ZS9BdXRvY29tcGxldGVTZWxlY3QvaW5kZXguY3NzPzA1NTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTAwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///100\n")},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);\n/**\n * Reducers: Annotation Filter.\n *\n * @since 3.11.0\n */\n\n/**\n * Internal dependencies\n */\n // import log from \'../../modules/log\';\n\n/**\n * Define the reducers.\n *\n * @since 3.11.0\n * @param {object} state The `state`.\n * @param {object} action The `action`.\n * @returns {object} The new state.\n */\n\nconst annotationFilter = function (state = null, action) {\n  switch (action.type) {\n    // Handle the `ANNOTATION` action, which sets the current selected\n    // annotation or null if not set.\n    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* ANNOTATION */ "b"]:\n      // We might receive an undefined annotation (when no annotation is\n      // selected. In that case we send `null`.\n      //\n      // Note that this action is handled also by the `visibilityFilter`\n      // which sets itself to `SHOW_ANNOTATION` | `SHOW_ALL` according\n      // to whether or not an annotation has been selected.\n      return action.annotation === undefined ? null : action.annotation;\n\n    default:\n      return state;\n  }\n}; // Finally export the reducer.\n\n\n/* harmony default export */ __webpack_exports__["a"] = (annotationFilter);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9yZWR1Y2Vycy9hbm5vdGF0aW9uRmlsdGVyLmpzPzllNzkiXSwibmFtZXMiOlsiYW5ub3RhdGlvbkZpbHRlciIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsInR5cGVzIiwiYW5ub3RhdGlvbiIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7Ozs7O0FBS0E7OztDQUlBOztBQUVBOzs7Ozs7Ozs7QUFRQSxNQUFNQSxnQkFBZ0IsR0FBRyxVQUFVQyxLQUFLLEdBQUcsSUFBbEIsRUFBd0JDLE1BQXhCLEVBQWlDO0FBQ3pELFVBQVNBLE1BQU0sQ0FBQ0MsSUFBaEI7QUFFQztBQUNBO0FBQ0EsU0FBS0MseUVBQUw7QUFDQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFPRixNQUFNLENBQUNHLFVBQVAsS0FBc0JDLFNBQXRCLEdBQWtDLElBQWxDLEdBQXlDSixNQUFNLENBQUNHLFVBQXZEOztBQUVEO0FBQ0MsYUFBT0osS0FBUDtBQWRGO0FBZ0JBLENBakJELEMsQ0FtQkE7OztBQUNlRCx5RUFBZiIsImZpbGUiOiIxMDMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlZHVjZXJzOiBBbm5vdGF0aW9uIEZpbHRlci5cbiAqXG4gKiBAc2luY2UgMy4xMS4wXG4gKi9cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4uL2NvbnN0YW50cy9BY3Rpb25UeXBlcyc7XG4vLyBpbXBvcnQgbG9nIGZyb20gJy4uLy4uL21vZHVsZXMvbG9nJztcblxuLyoqXG4gKiBEZWZpbmUgdGhlIHJlZHVjZXJzLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEBwYXJhbSB7b2JqZWN0fSBzdGF0ZSBUaGUgYHN0YXRlYC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBhY3Rpb24gVGhlIGBhY3Rpb25gLlxuICogQHJldHVybnMge29iamVjdH0gVGhlIG5ldyBzdGF0ZS5cbiAqL1xuY29uc3QgYW5ub3RhdGlvbkZpbHRlciA9IGZ1bmN0aW9uKCBzdGF0ZSA9IG51bGwsIGFjdGlvbiApIHtcblx0c3dpdGNoICggYWN0aW9uLnR5cGUgKSB7XG5cblx0XHQvLyBIYW5kbGUgdGhlIGBBTk5PVEFUSU9OYCBhY3Rpb24sIHdoaWNoIHNldHMgdGhlIGN1cnJlbnQgc2VsZWN0ZWRcblx0XHQvLyBhbm5vdGF0aW9uIG9yIG51bGwgaWYgbm90IHNldC5cblx0XHRjYXNlIHR5cGVzLkFOTk9UQVRJT046XG5cdFx0XHQvLyBXZSBtaWdodCByZWNlaXZlIGFuIHVuZGVmaW5lZCBhbm5vdGF0aW9uICh3aGVuIG5vIGFubm90YXRpb24gaXNcblx0XHRcdC8vIHNlbGVjdGVkLiBJbiB0aGF0IGNhc2Ugd2Ugc2VuZCBgbnVsbGAuXG5cdFx0XHQvL1xuXHRcdFx0Ly8gTm90ZSB0aGF0IHRoaXMgYWN0aW9uIGlzIGhhbmRsZWQgYWxzbyBieSB0aGUgYHZpc2liaWxpdHlGaWx0ZXJgXG5cdFx0XHQvLyB3aGljaCBzZXRzIGl0c2VsZiB0byBgU0hPV19BTk5PVEFUSU9OYCB8IGBTSE9XX0FMTGAgYWNjb3JkaW5nXG5cdFx0XHQvLyB0byB3aGV0aGVyIG9yIG5vdCBhbiBhbm5vdGF0aW9uIGhhcyBiZWVuIHNlbGVjdGVkLlxuXHRcdFx0cmV0dXJuIGFjdGlvbi5hbm5vdGF0aW9uID09PSB1bmRlZmluZWQgPyBudWxsIDogYWN0aW9uLmFubm90YXRpb247XG5cblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIHN0YXRlO1xuXHR9XG59O1xuXG4vLyBGaW5hbGx5IGV4cG9ydCB0aGUgcmVkdWNlci5cbmV4cG9ydCBkZWZhdWx0IGFubm90YXRpb25GaWx0ZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///103\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);\n/**\n * Reducers: Visibility Filter.\n *\n * @since 3.11.0\n */\n\n/**\n * Internal dependencies\n */\n\n/**\n * Define the reducers.\n *\n * @since 3.11.0\n * @param {object} state The `state`.\n * @param {object} action The `action`.\n * @returns {object} The new state.\n */\n\nconst visibilityFilter = function (state = 'SHOW_ALL', action) {\n  switch (action.type) {\n    // Handle the `SET_ENTITY_FILTER` action, which changes the current\n    // filter.\n    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* SET_ENTITY_FILTER */ \"f\"]:\n      return action.filter;\n    // Handle the `ANNOTATION` action, which notifies us of a selected\n    // annotation in TinyMCE. In that case we switch to a `SHOW_ANNOTATION`\n    // filter.\n\n    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__[/* ANNOTATION */ \"b\"]:\n      // We might receive an undefined annotation (when no annotation is\n      // selected).\n      //\n      // Note that selected annotation is set by the `annotationFilter`\n      // function.\n      return action.annotation === undefined ? 'SHOW_ALL' : 'SHOW_ANNOTATION';\n\n    default:\n      return state;\n  }\n}; // Finally export the reducer.\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (visibilityFilter);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9yZWR1Y2Vycy92aXNpYmlsaXR5RmlsdGVyLmpzPzRkYmYiXSwibmFtZXMiOlsidmlzaWJpbGl0eUZpbHRlciIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsInR5cGVzIiwiZmlsdGVyIiwiYW5ub3RhdGlvbiIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7Ozs7O0FBS0E7OztBQUdBO0FBRUE7Ozs7Ozs7OztBQVFBLE1BQU1BLGdCQUFnQixHQUFHLFVBQVVDLEtBQUssR0FBRyxVQUFsQixFQUE4QkMsTUFBOUIsRUFBdUM7QUFDL0QsVUFBU0EsTUFBTSxDQUFDQyxJQUFoQjtBQUVDO0FBQ0E7QUFDQSxTQUFLQyxnRkFBTDtBQUNDLGFBQU9GLE1BQU0sQ0FBQ0csTUFBZDtBQUVEO0FBQ0E7QUFDQTs7QUFDQSxTQUFLRCx5RUFBTDtBQUNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFPRixNQUFNLENBQUNJLFVBQVAsS0FBc0JDLFNBQXRCLEdBQWtDLFVBQWxDLEdBQStDLGlCQUF0RDs7QUFFRDtBQUNDLGFBQU9OLEtBQVA7QUFuQkY7QUFxQkEsQ0F0QkQsQyxDQXdCQTs7O0FBQ2VELHlFQUFmIiwiZmlsZSI6IjEwNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVkdWNlcnM6IFZpc2liaWxpdHkgRmlsdGVyLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqL1xuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi4vY29uc3RhbnRzL0FjdGlvblR5cGVzJztcblxuLyoqXG4gKiBEZWZpbmUgdGhlIHJlZHVjZXJzLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEBwYXJhbSB7b2JqZWN0fSBzdGF0ZSBUaGUgYHN0YXRlYC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBhY3Rpb24gVGhlIGBhY3Rpb25gLlxuICogQHJldHVybnMge29iamVjdH0gVGhlIG5ldyBzdGF0ZS5cbiAqL1xuY29uc3QgdmlzaWJpbGl0eUZpbHRlciA9IGZ1bmN0aW9uKCBzdGF0ZSA9ICdTSE9XX0FMTCcsIGFjdGlvbiApIHtcblx0c3dpdGNoICggYWN0aW9uLnR5cGUgKSB7XG5cblx0XHQvLyBIYW5kbGUgdGhlIGBTRVRfRU5USVRZX0ZJTFRFUmAgYWN0aW9uLCB3aGljaCBjaGFuZ2VzIHRoZSBjdXJyZW50XG5cdFx0Ly8gZmlsdGVyLlxuXHRcdGNhc2UgdHlwZXMuU0VUX0VOVElUWV9GSUxURVI6XG5cdFx0XHRyZXR1cm4gYWN0aW9uLmZpbHRlcjtcblxuXHRcdC8vIEhhbmRsZSB0aGUgYEFOTk9UQVRJT05gIGFjdGlvbiwgd2hpY2ggbm90aWZpZXMgdXMgb2YgYSBzZWxlY3RlZFxuXHRcdC8vIGFubm90YXRpb24gaW4gVGlueU1DRS4gSW4gdGhhdCBjYXNlIHdlIHN3aXRjaCB0byBhIGBTSE9XX0FOTk9UQVRJT05gXG5cdFx0Ly8gZmlsdGVyLlxuXHRcdGNhc2UgdHlwZXMuQU5OT1RBVElPTjpcblx0XHRcdC8vIFdlIG1pZ2h0IHJlY2VpdmUgYW4gdW5kZWZpbmVkIGFubm90YXRpb24gKHdoZW4gbm8gYW5ub3RhdGlvbiBpc1xuXHRcdFx0Ly8gc2VsZWN0ZWQpLlxuXHRcdFx0Ly9cblx0XHRcdC8vIE5vdGUgdGhhdCBzZWxlY3RlZCBhbm5vdGF0aW9uIGlzIHNldCBieSB0aGUgYGFubm90YXRpb25GaWx0ZXJgXG5cdFx0XHQvLyBmdW5jdGlvbi5cblx0XHRcdHJldHVybiBhY3Rpb24uYW5ub3RhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ1NIT1dfQUxMJyA6ICdTSE9XX0FOTk9UQVRJT04nO1xuXG5cdFx0ZGVmYXVsdDpcblx0XHRcdHJldHVybiBzdGF0ZTtcblx0fVxufTtcblxuLy8gRmluYWxseSBleHBvcnQgdGhlIHJlZHVjZXIuXG5leHBvcnQgZGVmYXVsdCB2aXNpYmlsaXR5RmlsdGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///104\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var _Wrapper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(106);\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(112);\n/* harmony import */ var _containers_VisibleEntityList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(111);\n/* harmony import */ var _Accordion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(115);\n/* harmony import */ var _components_AddEntity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(110);\n/* harmony import */ var _AddEntity_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(16);\n/**\n * Applications: Classification Box.\n *\n * This is the main entry point for the Classification Box application published\n * from the `index.js` file inside a Redux `Provider`.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n\nconst wlSettings = global["wlSettings"];\nconst canCreateEntities = "undefined" !== wlSettings["can_create_entities"] && "yes" === wlSettings["can_create_entities"];\n/**\n * Define the {@link App}.\n *\n * @since 3.11.0\n * @return {Function} The `render` function.\n */\n\nconst App = ({\n  addEntityRequest,\n  createEntityRequest\n}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Wrapper__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_AddEntity__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"], {\n  createEntity: createEntityRequest,\n  showCreate: canCreateEntities,\n  selectEntity: addEntityRequest\n}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Accordion__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"], {\n  open: true,\n  label: "Content classification"\n}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Header__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_containers_VisibleEntityList__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], null))); // Finally export the `App`.\n\n\n/* harmony default export */ __webpack_exports__["a"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* connect */ "b"])(null, {\n  addEntityRequest: _AddEntity_actions__WEBPACK_IMPORTED_MODULE_7__[/* addEntityRequest */ "a"],\n  createEntityRequest: _AddEntity_actions__WEBPACK_IMPORTED_MODULE_7__[/* createEntityRequest */ "e"]\n})(App));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(24)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9jb21wb25lbnRzL0FwcC9pbmRleC5qcz84NjkwIl0sIm5hbWVzIjpbIndsU2V0dGluZ3MiLCJnbG9iYWwiLCJjYW5DcmVhdGVFbnRpdGllcyIsIkFwcCIsImFkZEVudGl0eVJlcXVlc3QiLCJjcmVhdGVFbnRpdHlSZXF1ZXN0IiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7OztBQVNBOzs7QUFHQTtBQUNBO0FBRUE7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxNQUFNQSxVQUFVLEdBQUdDLE1BQU0sQ0FBQyxZQUFELENBQXpCO0FBQ0EsTUFBTUMsaUJBQWlCLEdBQ3JCLGdCQUFnQkYsVUFBVSxDQUFDLHFCQUFELENBQTFCLElBQXFELFVBQVVBLFVBQVUsQ0FBQyxxQkFBRCxDQUQzRTtBQUdBOzs7Ozs7O0FBTUEsTUFBTUcsR0FBRyxHQUFHLENBQUM7QUFBRUMsa0JBQUY7QUFBb0JDO0FBQXBCLENBQUQsa0JBQ1YsMkRBQUMsd0RBQUQscUJBQ0UsMkRBQUMscUVBQUQ7QUFBVyxjQUFZLEVBQUVBLG1CQUF6QjtBQUE4QyxZQUFVLEVBQUVILGlCQUExRDtBQUE2RSxjQUFZLEVBQUVFO0FBQTNGLEVBREYsZUFFRSwyREFBQywwREFBRDtBQUFXLE1BQUksRUFBRSxJQUFqQjtBQUF1QixPQUFLLEVBQUM7QUFBN0IsZ0JBQ0UsMkRBQUMsdURBQUQsT0FERixlQUVFLDJEQUFDLDZFQUFELE9BRkYsQ0FGRixDQURGLEMsQ0FVQTs7O0FBQ2VFLDRIQUFPLENBQUMsSUFBRCxFQUFPO0FBQUVGLCtGQUFGO0FBQW9CQyxxR0FBbUJBO0FBQXZDLENBQVAsQ0FBUCxDQUF5REYsR0FBekQsQ0FBZixFIiwiZmlsZSI6IjEwNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXBwbGljYXRpb25zOiBDbGFzc2lmaWNhdGlvbiBCb3guXG4gKlxuICogVGhpcyBpcyB0aGUgbWFpbiBlbnRyeSBwb2ludCBmb3IgdGhlIENsYXNzaWZpY2F0aW9uIEJveCBhcHBsaWNhdGlvbiBwdWJsaXNoZWRcbiAqIGZyb20gdGhlIGBpbmRleC5qc2AgZmlsZSBpbnNpZGUgYSBSZWR1eCBgUHJvdmlkZXJgLlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqL1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBXcmFwcGVyIGZyb20gXCIuL1dyYXBwZXJcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4uL0hlYWRlclwiO1xuaW1wb3J0IFZpc2libGVFbnRpdHlMaXN0IGZyb20gXCIuLi8uLi9jb250YWluZXJzL1Zpc2libGVFbnRpdHlMaXN0XCI7XG5pbXBvcnQgQWNjb3JkaW9uIGZyb20gXCIuLi9BY2NvcmRpb25cIjtcbmltcG9ydCBBZGRFbnRpdHkgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvQWRkRW50aXR5XCI7XG5pbXBvcnQgeyBhZGRFbnRpdHlSZXF1ZXN0LCBjcmVhdGVFbnRpdHlSZXF1ZXN0IH0gZnJvbSBcIi4uL0FkZEVudGl0eS9hY3Rpb25zXCI7XG5cbmNvbnN0IHdsU2V0dGluZ3MgPSBnbG9iYWxbXCJ3bFNldHRpbmdzXCJdO1xuY29uc3QgY2FuQ3JlYXRlRW50aXRpZXMgPVxuICBcInVuZGVmaW5lZFwiICE9PSB3bFNldHRpbmdzW1wiY2FuX2NyZWF0ZV9lbnRpdGllc1wiXSAmJiBcInllc1wiID09PSB3bFNldHRpbmdzW1wiY2FuX2NyZWF0ZV9lbnRpdGllc1wiXTtcblxuLyoqXG4gKiBEZWZpbmUgdGhlIHtAbGluayBBcHB9LlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBUaGUgYHJlbmRlcmAgZnVuY3Rpb24uXG4gKi9cbmNvbnN0IEFwcCA9ICh7IGFkZEVudGl0eVJlcXVlc3QsIGNyZWF0ZUVudGl0eVJlcXVlc3QgfSkgPT4gKFxuICA8V3JhcHBlcj5cbiAgICA8QWRkRW50aXR5IGNyZWF0ZUVudGl0eT17Y3JlYXRlRW50aXR5UmVxdWVzdH0gc2hvd0NyZWF0ZT17Y2FuQ3JlYXRlRW50aXRpZXN9IHNlbGVjdEVudGl0eT17YWRkRW50aXR5UmVxdWVzdH0gLz5cbiAgICA8QWNjb3JkaW9uIG9wZW49e3RydWV9IGxhYmVsPVwiQ29udGVudCBjbGFzc2lmaWNhdGlvblwiPlxuICAgICAgPEhlYWRlciAvPlxuICAgICAgPFZpc2libGVFbnRpdHlMaXN0IC8+XG4gICAgPC9BY2NvcmRpb24+XG4gIDwvV3JhcHBlcj5cbik7XG5cbi8vIEZpbmFsbHkgZXhwb3J0IHRoZSBgQXBwYC5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobnVsbCwgeyBhZGRFbnRpdHlSZXF1ZXN0LCBjcmVhdGVFbnRpdHlSZXF1ZXN0IH0pKEFwcCk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///105\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/**\n * Components: Wrapper.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`\n\tbackground-color: #fff;\n\n\t// Compensate accordion margin bottom.\n\tposition: relative;\n\n\t// Size.\n\tmax-width: 254px;\n\n\t// Fixing position in responsive.\n\tmargin: auto;\n\tmargin-bottom: 8px;\n`; // Finally export the `Wrapper`.\n\n/* harmony default export */ __webpack_exports__["a"] = (Wrapper);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9jb21wb25lbnRzL0FwcC9XcmFwcGVyLmpzPzI5MWQiXSwibmFtZXMiOlsiV3JhcHBlciIsInN0eWxlZCIsImRpdiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7Ozs7O0FBTUE7OztBQUdBO0FBRUE7Ozs7QUFHQSxNQUFNQSxPQUFPLEdBQUdDLHlEQUFNLENBQUNDLEdBQUk7Ozs7Ozs7Ozs7OztDQUEzQixDLENBY0E7O0FBQ2VGLGdFQUFmIiwiZmlsZSI6IjEwNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29tcG9uZW50czogV3JhcHBlci5cbiAqXG4gKiBAc2luY2UgMy4xMS4wXG4gKi9cblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbi8qKlxuICogQGluaGVyaXREb2NcbiAqL1xuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG5cblx0Ly8gQ29tcGVuc2F0ZSBhY2NvcmRpb24gbWFyZ2luIGJvdHRvbS5cblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXG5cdC8vIFNpemUuXG5cdG1heC13aWR0aDogMjU0cHg7XG5cblx0Ly8gRml4aW5nIHBvc2l0aW9uIGluIHJlc3BvbnNpdmUuXG5cdG1hcmdpbjogYXV0bztcblx0bWFyZ2luLWJvdHRvbTogOHB4O1xuYDtcblxuLy8gRmluYWxseSBleHBvcnQgdGhlIGBXcmFwcGVyYC5cbmV4cG9ydCBkZWZhdWx0IFdyYXBwZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///106\n')},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 16 modules\nvar es = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js + 2 modules\nvar redux_saga_core_npm_proxy_esm = __webpack_require__(37);\n\n// EXTERNAL MODULE: ./node_modules/redux-logger/dist/redux-logger.js\nvar redux_logger = __webpack_require__(67);\nvar redux_logger_default = /*#__PURE__*/__webpack_require__.n(redux_logger);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(2);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: external "Backbone"\nvar external_Backbone_ = __webpack_require__(31);\n\n// EXTERNAL MODULE: external {"this":["wp","hooks"]}\nvar external_this_wp_hooks_ = __webpack_require__(52);\n\n// EXTERNAL MODULE: ./src/Edit/components/AddEntity/actions.js\nvar actions = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/Edit/components/Button/Wrapper.js\n\nconst Wrapper = styled_components_browser_esm["default"].div`\n    white-space: initial;\n    line-height: 16px;\n    color: white;\n    padding: 11px 8px 6px;\n    min-height: 40px;\n    margin-bottom: 10px;\n    font-family: BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;\n    font-size: 14px;\n    font-weight: 600;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n        \n    > div {\n        display: inline-block;\n        \n        &:last-child {\n            float: right;\n        }\n    }\n\n    ${props => props.enabled && styled_components_browser_esm["css"]`\n        background-color: #007aff;\n        cursor: pointer;\n\n        &:hover {\n          box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);\n          transform: scale(1.01);\n          transition: all 200ms ease-out;\n        }\n\n        &:active {\n          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n          transform: scale(1);\n        }\n      `}\n    \n    ${props => !props.enabled && styled_components_browser_esm["css"]`\n        background-color: #cbcbcb;\n        cursor: initial;\n      `}\n       \n}\n`;\n/* harmony default export */ var Button_Wrapper = (Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/Button/index.js\n/**\n * External dependencies\n */\n\n\n\nconst Button = ({\n  children,\n  label,\n  ...props\n}) => /*#__PURE__*/external_this_React_default.a.createElement(Button_Wrapper, props, /*#__PURE__*/external_this_React_default.a.createElement("div", {\n  style: {\n    width: "calc(100% - 16px)",\n    overflow: "hidden",\n    textOverflow: "ellipsis",\n    whiteSpace: "nowrap"\n  }\n}, label), children);\n\n/* harmony default export */ var components_Button = (Button);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/ButtonContainer.js\n\n\n\n\nconst mapStateToProps = ({\n  enabled,\n  value\n}) => ({\n  enabled,\n  label: `Add ${value}`\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: () => dispatch(Object(actions["h" /* open */])())\n});\n\n/* harmony default export */ var ButtonContainer = (Object(es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(components_Button));\n// CONCATENATED MODULE: ./src/Edit/components/Input/Wrapper.js\n\nconst Wrapper_Wrapper = styled_components_browser_esm["default"].div`\n  padding: 8px 0 6px;\n  border-bottom: 2px solid #007aff;\n  display: inline-block;\n  width: 100%;\n\n  > input {\n    border: 0;\n    outline: none;\n    float: left;\n    width: calc(100% - 36px) !important;\n    font-family: BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,\n      Cantarell, "Helvetica Neue", sans-serif;\n    line-height: 20px;\n    font-size: 14px;\n    padding: 0 6px;\n  }\n`;\n/* harmony default export */ var Input_Wrapper = (Wrapper_Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/Input/X.js\n\nconst X = styled_components_browser_esm["default"].div`\n  font-family: sans-serif;\n  background-color: #007aff;\n  color: white;\n  width: 12px;\n  height: 12px;\n  display: inline-block;\n  text-align: center;\n  line-height: 12px;\n  font-size: 12px;\n  padding: 1px;\n  cursor: pointer;\n  border-radius: 100%;\n  transform: rotate(45deg);\n\n  &::after {\n    content: "+";\n    font-size: 12px;\n    width: 100%;\n    height: 100%;\n  }\n`;\n/* harmony default export */ var Input_X = (X);\n// CONCATENATED MODULE: ./src/Edit/components/Input/index.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\nconst Input = ({\n  onCancel,\n  onInputChange,\n  ...props\n}) => /*#__PURE__*/external_this_React_default.a.createElement(Input_Wrapper, null, /*#__PURE__*/external_this_React_default.a.createElement("input", _extends({\n  onChange: e => onInputChange(e.target.value)\n}, props)), /*#__PURE__*/external_this_React_default.a.createElement(Input_X, {\n  onClick: onCancel\n}));\n\n/* harmony default export */ var components_Input = (Input);\n// CONCATENATED MODULE: ./src/Edit/components/List/Wrapper.js\n\nconst List_Wrapper_Wrapper = styled_components_browser_esm["default"].ul`\n  background: white;\n  // border-top: 0;\n  // border-bottom: 1px solid #007aff;\n  // border-left: 1px solid #007aff;\n  // border-right: 1px solid #007aff;\n  border: 1px solid #007aff;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  max-height: 280px;\n  overflow-y: scroll;\n  font-family: BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu,\n    Cantarell, "Helvetica Neue", sans-serif;\n  line-height: 20px;\n  font-size: 14px;\n  position: absolute;\n  // width: calc(100% - 1px);\n  // margin-left: 1px;\n  width: 110%;\n  margin-left: calc( -5% + 1px );\n  overflow-x: hidden;\n  z-index: 1001;\n\n  display: ${props => props.open ? "block" : "none"};\n\n  > li {\n    cursor: pointer;\n    margin-bottom: 0;\n    padding-bottom: 4px;\n\n    &:hover {\n      background-color: rgba(46, 146, 255, 0.2);\n    }\n  }\n`;\n/* harmony default export */ var List_Wrapper = (List_Wrapper_Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/List/index.js\n\n\n\nconst List = ({\n  open,\n  children\n}) => /*#__PURE__*/external_this_React_default.a.createElement(List_Wrapper, {\n  open: open\n}, 0 < children.length && children.map((item, index) => /*#__PURE__*/external_this_React_default.a.createElement("li", {\n  key: index\n}, item)), 0 === children.length && /*#__PURE__*/external_this_React_default.a.createElement("li", {\n  style: {\n    padding: "8px",\n    cursor: "initial"\n  },\n  key: 0\n}, "No results."));\n\n/* harmony default export */ var components_List = (List);\n// CONCATENATED MODULE: ./src/Edit/components/Select/index.js\n\n\n\n\nconst Select = ({\n  open,\n  value,\n  onCancel,\n  onInputChange,\n  children\n}) => /*#__PURE__*/external_this_React_default.a.createElement("div", null, /*#__PURE__*/external_this_React_default.a.createElement(components_Input, {\n  onCancel: onCancel,\n  onInputChange: onInputChange,\n  value: value\n}), /*#__PURE__*/external_this_React_default.a.createElement(components_List, {\n  open: open\n}, children));\n\n/* harmony default export */ var components_Select = (Select);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/Item/Wrapper.js\n\nconst Item_Wrapper_Wrapper = styled_components_browser_esm["default"].div`\n  padding: 4px 8px;\n  box-sizing: border-box;\n  position: relative;\n  margin: 0 auto;\n  min-height: 32px;\n  color: rgb(102, 102, 102);\n`;\n/* harmony default export */ var Item_Wrapper = (Item_Wrapper_Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/Item/Label.js\n\nconst Label = styled_components_browser_esm["default"].div`\n  display: inline-block;\n  position: relative;\n  box-sizing: border-box;\n  max-width: 180px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  margin-top: 4px;\n  min-height: 16px;\n  line-height: 16px;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,\n    Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;\n  font-weight: 600;\n  font-size: 12px;\n  -moz-user-select: none;\n  hyphens: auto;\n`;\n/* harmony default export */ var Item_Label = (Label);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/Item/CreateItem.js\n\n\n\n\nconst CreateItem = ({\n  label,\n  onClick\n}) => /*#__PURE__*/external_this_React_default.a.createElement(Item_Wrapper, {\n  onClick: onClick\n}, /*#__PURE__*/external_this_React_default.a.createElement(Item_Label, null, "Create ", label, "..."));\n\n/* harmony default export */ var Item_CreateItem = (CreateItem);\n// EXTERNAL MODULE: ./src/Edit/components/EntityTile/Cloud.js\nvar Cloud = __webpack_require__(80);\n\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/Item/Description.js\n\nconst Description = styled_components_browser_esm["default"].div`\n  // Same as the Cloud Icon.\n  color: #cbcbcb;\n  font-size: 10px;\n  width: calc(100% - 10px);\n  text-overflow: ellipsis;\n  overflow: hidden;\n  line-height: 12px;\n`;\n/* harmony default export */ var Item_Description = (Description);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/Item/DisplayTypes.js\n\nconst DisplayTypes = styled_components_browser_esm["default"].div`\n  // Same as the Cloud Icon.\n  color: #cbcbcb;\n  font-size: 10px;\n  width: calc(100% - 10px);\n  text-overflow: ellipsis;\n  overflow: hidden;\n  line-height: 12px;\n`;\n/* harmony default export */ var Item_DisplayTypes = (DisplayTypes);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/Item/SelectItem.js\n\n\n\n\n\n\n/**\n * The `local` attribute is handled as such:\n * `"local" === item.scope ? 1 : 0`\n *\n * See here for more information:\n * https://github.com/styled-components/styled-components/issues/1198\n *\n * @param item\n * @param key\n * @param props\n * @returns {*}\n * @constructor\n */\n\nconst SelectItem = ({\n  item,\n  ...props\n}) => /*#__PURE__*/external_this_React_default.a.createElement(Item_Wrapper, props, /*#__PURE__*/external_this_React_default.a.createElement(Item_Label, {\n  title: item.label\n}, item.label), /*#__PURE__*/external_this_React_default.a.createElement(Cloud["a" /* default */], {\n  className: "fa fa-cloud",\n  local: "local" === item.scope ? 1 : 0\n}), 0 < item.descriptions.length && /*#__PURE__*/external_this_React_default.a.createElement(Item_Description, {\n  title: item.descriptions[0]\n}, item.descriptions[0]), /*#__PURE__*/external_this_React_default.a.createElement(Item_DisplayTypes, null, item.displayTypes));\n\n/* harmony default export */ var Item_SelectItem = (SelectItem);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/EntitySelect.js\nfunction EntitySelect_extends() { EntitySelect_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return EntitySelect_extends.apply(this, arguments); }\n\n\n\n\n\n\nconst EntitySelect = ({\n  createEntity,\n  selectEntity,\n  items,\n  value,\n  showCreate,\n  ...props\n}) => {\n  const elements = (showCreate ? [/*#__PURE__*/external_this_React_default.a.createElement(Item_CreateItem, {\n    key: 1000,\n    label: value,\n    onClick: () => createEntity(value)\n  })] : []).concat(items.map((item, index) => /*#__PURE__*/external_this_React_default.a.createElement(Item_SelectItem, {\n    key: index,\n    item: item,\n    onClick: () => selectEntity(item)\n  })));\n  return /*#__PURE__*/external_this_React_default.a.createElement(components_Select, EntitySelect_extends({\n    value: value\n  }, props), elements);\n};\n\n/* harmony default export */ var AddEntity_EntitySelect = (EntitySelect);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/EntitySelectContainer.js\n\n\n\n\nconst EntitySelectContainer_mapStateToProps = ({\n  open,\n  value,\n  items\n}) => ({\n  open,\n  value,\n  items\n});\n\nconst EntitySelectContainer_mapDispatchToProps = dispatch => ({\n  onInputChange: value => dispatch(Object(actions["j" /* setValue */])(value)),\n  onCancel: () => dispatch(Object(actions["c" /* close */])())\n});\n\n/* harmony default export */ var EntitySelectContainer = (Object(es["b" /* connect */])(EntitySelectContainer_mapStateToProps, EntitySelectContainer_mapDispatchToProps)(AddEntity_EntitySelect));\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/Wrapper.js\n\n\nconst VerticalContainer = styled_components_browser_esm["default"].div`\n  position: relative;\n  overflow-y: visible;\n  width: calc(100% + 6px);\n  margin-top: 10px;\n  margin-bottom: 8px;\n  margin-left: -3px;\n`;\nconst HorizontalContainer = styled_components_browser_esm["default"].div`\n  white-space: nowrap;\n  overflow-x: hidden;\n\n  > * {\n    display: inline-block;\n    box-sizing: border-box;\n\n    &:first-child {\n      // Slightly smaller to accommodate the hover effect.\n      width: calc(100% - 2px);\n      margin: 0 1px;\n\n      margin-left: ${props => props.open ? "-100%" : "1px"};\n      transition: all 200ms ease-out;\n    }\n\n    &:last-child {\n      width: 100%;\n    }\n  }\n`;\n\nconst AddEntity_Wrapper_Wrapper = ({\n  children,\n  ...props\n}) => /*#__PURE__*/external_this_React_default.a.createElement(VerticalContainer, props, /*#__PURE__*/external_this_React_default.a.createElement(HorizontalContainer, props, children));\n\n/* harmony default export */ var AddEntity_Wrapper = (AddEntity_Wrapper_Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/WrapperContainer.js\n\n\n\n\nconst WrapperContainer_mapStateToProps = state => ({\n  open: state.open\n});\n\nconst WrapperContainer_mapDispatchToProps = dispatch => ({\n  onBlur: () => dispatch(Object(actions["c" /* close */])())\n});\n\n/* harmony default export */ var WrapperContainer = (Object(es["b" /* connect */])(WrapperContainer_mapStateToProps, WrapperContainer_mapDispatchToProps)(AddEntity_Wrapper));\n// CONCATENATED MODULE: ./src/Edit/components/Arrow/index.js\n\nconst Arrow = styled_components_browser_esm["default"].div`\n  width: 0;\n  height: 0;\n\n  ${props => styled_components_browser_esm["css"]`\n    border-top: ${props.height} solid transparent;\n    border-bottom: ${props.height} solid transparent;\n    border-left: ${props.height} solid ${props.color};\n  `};\n`;\n/* harmony default export */ var components_Arrow = (Arrow);\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js + 1 modules\nvar redux_saga_effects_npm_proxy_esm = __webpack_require__(6);\n\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/api.js\nconst settings = window["wlSettings"];\nfunction autocomplete(query, language, ...excludes) {\n  // eslint-disable-next-line\n  if ("undefined" !== wp.ajax) {\n    // eslint-disable-next-line\n    return wp.ajax.post("wl_autocomplete", {\n      query,\n      // show local entities on post edit screen.\n      show_local_entities: true,\n      // eslint-disable-next-line\n      _wpnonce: settings["wl_autocomplete_nonce"],\n      // eslint-disable-next-line\n      exclude: settings["itemId"],\n      // eslint-disable-next-line\n      scope: settings["autocomplete_scope"]\n    });\n  } else {\n    const url = new URL("http://localhost:8080/wordlift-api/autocomplete");\n    url.searchParams.append("query", query);\n    url.searchParams.append("language", language);\n    if (0 === excludes.length) url.searchParams.append("exclude", "");else excludes.forEach(value => url.searchParams.append("exclude", value));\n    return fetch(url).then(response => response.json());\n  }\n}\n// EXTERNAL MODULE: ./src/Edit/angular/EditPostWidgetController.js\nvar EditPostWidgetController = __webpack_require__(74);\n\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/sagas.js\n/* global wp */\n\n\n\n\n\n\nfunction* loadItems({\n  payload\n}) {\n  if ("undefined" === typeof payload || "" === payload) return;\n  yield Object(redux_saga_effects_npm_proxy_esm["b" /* delay */])(500); // eslint-disable-next-line\n\n  "undefined" !== typeof wp.wordlift && wp.wordlift.trigger("loading", true);\n  const language = // eslint-disable-next-line\n  "undefined" !== typeof wlSettings.language ? wlSettings.language : "en";\n  const items = yield Object(redux_saga_effects_npm_proxy_esm["a" /* call */])(autocomplete, payload, language);\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["g" /* loadItemsSuccess */])(items)); // eslint-disable-next-line\n\n  "undefined" !== typeof wp.wordlift && wp.wordlift.trigger("loading", false);\n}\n\nfunction* requestClose() {\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["c" /* close */])());\n}\n\nfunction editorSelectionChangedChannel() {\n  return Object(redux_saga_core_npm_proxy_esm["b" /* eventChannel */])(emitter => {\n    const hook = params => emitter(params); // eslint-disable-next-line\n\n\n    wp.wordlift.on("editorSelectionChanged", hook); // eslint-disable-next-line\n\n    return () => wp.wordlift.off("editorSelectionChanged", hook);\n  });\n}\n\nfunction* watchForEditorSelectionChanges() {\n  const channel = yield Object(redux_saga_effects_npm_proxy_esm["a" /* call */])(editorSelectionChangedChannel);\n\n  while (true) {\n    const {\n      selection\n    } = yield Object(redux_saga_effects_npm_proxy_esm["g" /* take */])(channel);\n    yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["j" /* setValue */])(selection));\n    if ("" === selection) yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["c" /* close */])());\n  }\n}\n\nfunction* watchForSetValue() {\n  yield Object(redux_saga_effects_npm_proxy_esm["i" /* takeLatest */])(actions["j" /* setValue */], loadItems);\n}\n\nfunction* saga() {\n  yield Object(redux_saga_effects_npm_proxy_esm["c" /* fork */])(watchForEditorSelectionChanges);\n  yield Object(redux_saga_effects_npm_proxy_esm["h" /* takeEvery */])(actions["f" /* createEntitySuccess */], requestClose);\n  yield Object(redux_saga_effects_npm_proxy_esm["h" /* takeEvery */])(actions["b" /* addEntitySuccess */], requestClose); // Watch for setValue only after an open.\n\n  while (true) {\n    yield Object(redux_saga_effects_npm_proxy_esm["g" /* take */])(actions["h" /* open */]);\n    yield Object(redux_saga_effects_npm_proxy_esm["a" /* call */])(loadItems, yield Object(redux_saga_effects_npm_proxy_esm["f" /* select */])(state => ({\n      payload: state.value\n    })));\n    yield Object(redux_saga_effects_npm_proxy_esm["e" /* race */])({\n      task: Object(redux_saga_effects_npm_proxy_esm["a" /* call */])(watchForSetValue),\n      cancel: Object(redux_saga_effects_npm_proxy_esm["g" /* take */])(actions["c" /* close */])\n    });\n  }\n}\n\n/* harmony default export */ var sagas = (saga);\n// EXTERNAL MODULE: ./src/common/constants.js\nvar constants = __webpack_require__(23);\n\n// CONCATENATED MODULE: ./src/Edit/components/AddEntity/index.js\n/**\n * External dependencies\n */\n\n\n\n\n\n\n\n/**\n * WordPress dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n\n // Create the saga middleware.\n\nconst sagaMiddleware = Object(redux_saga_core_npm_proxy_esm["a" /* default */])();\nconst store = Object(redux["e" /* createStore */])(actions["i" /* reducer */], Object(redux["a" /* applyMiddleware */])(sagaMiddleware, redux_logger_default.a)); // Run the saga.\n\nsagaMiddleware.run(sagas); // Receives events that the selection has changed in the editor.\n\nObject(external_Backbone_["on"])(constants["d" /* SELECTION_CHANGED */], ({\n  selection\n}) => store.dispatch(Object(actions["j" /* setValue */])(selection))); // Receives events that an entity has been successfully added.\n//\n// These events are raised from the Block Editor (block-editor/stores/sagas) and are required to update the AddEntity\n// state.\n\nObject(external_this_wp_hooks_["addAction"])("wordlift.addEntitySuccess", "wordlift", () => store.dispatch(Object(actions["b" /* addEntitySuccess */])())); // Temporary hack to allow 3rd parties to close the Entity Select.\n\nObject(external_this_wp_hooks_["addAction"])("unstable_wordlift.closeEntitySelect", "wordlift", () => store.dispatch(Object(actions["c" /* close */])()));\n\nconst AddEntity = ({\n  createEntity,\n  selectEntity,\n  showCreate\n}) => {\n  return /*#__PURE__*/external_this_React_default.a.createElement(es["a" /* Provider */], {\n    store: store\n  }, /*#__PURE__*/external_this_React_default.a.createElement(external_this_React_["Fragment"], null, // Allow 3rd parties to hook and add additional components.\n  Object(external_this_wp_hooks_["applyFilters"])("wordlift.AddEntity.beforeWrapperContainer", []), /*#__PURE__*/external_this_React_default.a.createElement(WrapperContainer, null, /*#__PURE__*/external_this_React_default.a.createElement(ButtonContainer, null, /*#__PURE__*/external_this_React_default.a.createElement(components_Arrow, {\n    height: "8px",\n    color: "white"\n  })), /*#__PURE__*/external_this_React_default.a.createElement(EntitySelectContainer, {\n    createEntity: createEntity,\n    selectEntity: selectEntity,\n    showCreate: showCreate\n  })), // Allow 3rd parties to hook and add additional components.\n  Object(external_this_wp_hooks_["applyFilters"])("wordlift.AddEntity.afterWrapperContainer", [])));\n};\n\nAddEntity.propTypes = {\n  selectEntity: prop_types_default.a.func.isRequired,\n  showCreate: prop_types_default.a.bool.isRequired\n};\n/* harmony default export */ var components_AddEntity = __webpack_exports__["a"] = (AddEntity);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///110\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 16 modules\nvar es = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./src/Edit/actions/index.js\nvar actions = __webpack_require__(34);\n\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/Edit/components/EntityList/List.js\n/**\n * Components: List.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst List = styled_components_browser_esm["default"].ul`\n\tmargin: 0 auto;\n\tpadding-bottom: 8px;\n`; // Finally export the `List` component.\n\n/* harmony default export */ var EntityList_List = (List);\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/Wrapper.js\n/**\n * Components: Wrapper.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Wrapper = styled_components_browser_esm["default"].li`\n\tdisplay: \'block\';\n\tposition: relative;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\tborder-radius: 2px;\n\tmargin: 8px auto;\n\twidth: 248px;\n\tmin-height: 32px;\n\tpadding: 4px 0;\n\tbackground-color: #f5f5f5;\n\tbox-shadow: 0 4px 4px -3px rgba(0,0,0,.25), 0 8px 8px -6px rgba(0,0,0,.25);\n\ttransition: all 100ms linear;\n\t// Prevent dotted outline in FF\n\toutline: 0;\n\t\n\t// Since we removed the box with the number of occurrences we need to pad left.\n\t//\n\t// See https://github.com/insideout10/wordlift-plugin/issues/735\n\tpadding-left: 12px;\n\n\t&:hover {\n\t\ttransform: scale( ${props => 0 < props.entity.occurrences.length ? 1 : 1.01} ); \n\t\tbackground-color: ${props => 0 < props.entity.occurrences.length ? \'#f5f5f5\' : \'#fafafa\'}\n\t\t// Prevent dotted outline in FF\n\t\toutline: 0;\n\t};\n\n\t&:active {\n\t\ttransform: scale(0.99)\n\t\tbackground-color: #f5f5f5;\n\t\t// Prevent dotted outline in FF\n\t\toutline: 0;\n\t};\n\n\t&:focus {\n\t\t// Prevent dotted outline in FF\n\t\toutline: 0;\n\t}\n\n`; // Finally export the `Wrapper`.\n\n/* harmony default export */ var EntityTile_Wrapper = (Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/Main.js\n/**\n * Components: Main.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Main = styled_components_browser_esm["default"].div`\n\tcursor: pointer;\n\tdisplay: block;\n\tposition: relative;\n\tleft: ${props => props.open ? \'-248px\' : 0};\n\ttop: 0;\n\tbox-sizing: border-box;\n\twidth: 236px;\n\tmin-height: 24px;\n\ttransition: left 200ms ease;\n`; // Finally export `Main`.\n\n/* harmony default export */ var EntityTile_Main = (Main);\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/Label.js\n/**\n * Components: Label.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Label = styled_components_browser_esm["default"].div`\n\tdisplay: inline-block;\n\tposition: relative;\n\tbox-sizing: border-box;\n\tmax-width: 180px;\n\tmargin-top: 4px;\n\tmin-height: 16px;\n\tline-height: 16px;\n\tfont-weight: 600;\n\tfont-size: 12px;\n\tuser-select: none;\n\thyphens: auto;\n\tcolor: ${props => 0 < props.entity.occurrences.length ? \'#2e92ff\' : \'#666\'};\n`; // Finally export the `Label`.\n\n/* harmony default export */ var EntityTile_Label = (Label);\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/MainType.js\n/**\n * Components: Label.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst MainType = styled_components_browser_esm["default"].div`\n  display: ${props => props.entity.duplicateLabel ? \'inline-block\' : \'none\'};\n\tmargin-left: 2px;\n\tposition: relative;\n\tfont-weight: 300;\n\tfont-size: 10px;\n`; // Finally export the `MainType`.\n\n/* harmony default export */ var EntityTile_MainType = (MainType);\n// EXTERNAL MODULE: ./src/Edit/components/EntityTile/Cloud.js\nvar Cloud = __webpack_require__(80);\n\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/Drawer.js\n/**\n * Components: Drawer.\n *\n * A container for elements that display when the drawer is open.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Drawer = styled_components_browser_esm["default"].div`\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 248px;\n\ttop: 0;\n\tbottom: 0;\n\tbox-sizing: border-box;\n\twidth: 248px;\n\tmin-height: 24px;\n\tpadding: 8px;\n\tcolor: #626162;\n\ttransition: left 200ms ease;\n\tleft: ${props => props.open ? 0 : \'248px\'};\n`; // Finally export the `Drawer`.\n\n/* harmony default export */ var EntityTile_Drawer = (Drawer);\n// CONCATENATED MODULE: ./src/Edit/components/Switch/Wrapper.js\n/**\n * Components: Wrapper component.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Wrapper_Wrapper = styled_components_browser_esm["default"].div`\n\tdisplay: inline-block;\n\tposition: relative;\n\theight: 16px;\n`; // Finally export the `Wrapper`.\n\n/* harmony default export */ var Switch_Wrapper = (Wrapper_Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/Switch/Background.js\n/**\n * Components: Background.\n *\n * The {@link Switch} background.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Background = styled_components_browser_esm["default"].div`\n\tdisplay: inline-block;\n\tposition: relative;\n\tbox-sizing: border-box;\n\twidth: 24px;\n\theight: 16px;\n\tbackground: ${props => props.selected ? \'#7ed321\' : \'#c7c7c7\'};\n\ttransition: background 200ms ease;\n\tborder-radius: 10px;\n`; // Finally export the `Background`.\n\n/* harmony default export */ var Switch_Background = (Background);\n// CONCATENATED MODULE: ./src/Edit/components/Switch/Bullet.js\n/**\n * Components: Bullet.\n *\n * The {@link Switch} bullet.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Bullet = styled_components_browser_esm["default"].div`\n\tcursor: pointer;\n\tdisplay: inline-block;\n\tposition: absolute;\n\ttop: 2px;\n\tleft: ${props => props.selected ? 10 : 2}px;\n\ttransition: left 150ms ease;\n\twidth: 12px;\n\theight: 12px;\n\tbackground: #FFFFFF;\n\tborder-radius: 50%;\n`; // Finally export the `Bullet`.\n\n/* harmony default export */ var Switch_Bullet = (Bullet);\n// CONCATENATED MODULE: ./src/Edit/components/Switch/Label.js\n/**\n * Components: Label.\n *\n * The {@link Switch} label.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Label_Label = styled_components_browser_esm["default"].div`\n\tdisplay: inline-block;\n\tposition: relative;\n\ttop: -4px;\n\tline-height: 16px;\n\tfont-size: 12px;\n\tmargin: 0 12px 0 4px;\n\ttransition: opacity 150ms ease;\n\topacity: ${props => props.selected ? 1 : 0.5};\n\t\n\t&:after {\n\t\tcontent: \' \';\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\tright: -12px;\n\t\ttop: 6px;\n\t\twidth: 4px;\n\t\theight: 4px;\n\t\tborder-radius: 50%;\n\t\tbackground-color: #626162;\n\t\tmargin-right: 4px;\n\t}\n`; // Finally export the `Label`.\n\n/* harmony default export */ var Switch_Label = (Label_Label);\n// CONCATENATED MODULE: ./src/Edit/components/Switch/index.js\n/**\n * Components: Switch component.\n *\n * Represents a switch, forwards clicks to the parent. State is handled by the\n * parent via the `on` property.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n/**\n * Define the `Switch`.\n *\n * @since 3.11.0\n */\n\nclass Switch_Switch extends external_this_React_default.a.PureComponent {\n  /**\n   * @inheritDoc\n   */\n  constructor(props) {\n    super(props); // Bind the event handler.\n\n    this.onClick = this.onClick.bind(this);\n  }\n  /**\n   * Handle clicks.\n   *\n   * @since 3.11.0\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  onClick(e) {\n    e.preventDefault(); // Forward the click event.\n\n    this.props.onClick(e);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    return /*#__PURE__*/external_this_React_default.a.createElement(Switch_Wrapper, {\n      onClick: this.onClick\n    }, /*#__PURE__*/external_this_React_default.a.createElement(Switch_Background, {\n      selected: this.props.selected\n    }, /*#__PURE__*/external_this_React_default.a.createElement(Switch_Bullet, {\n      selected: this.props.selected\n    })), /*#__PURE__*/external_this_React_default.a.createElement(Switch_Label, {\n      selected: this.props.selected\n    }, this.props.children));\n  }\n\n} // Finally export the `Switch`.\n\n\n/* harmony default export */ var components_Switch = (Switch_Switch);\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/Category.js\n/**\n * Components: Category.\n *\n * The category component.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\nconst Category = styled_components_browser_esm["default"].div`\n\tdisplay: inline-block;\n\tposition: relative;\n\ttop: -4px;\t\n\tline-height: 16px;\n\tfont-size: 12px;\n`; // Finally export the `Category`.\n\n/* harmony default export */ var EntityTile_Category = (Category);\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/EditLink.js\n/**\n * Components: Edit Link.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst EditLink = styled_components_browser_esm["default"].i`\n\tcursor: pointer;\n\tdisplay: ${props => props.edit ? \'block\' : \'none !important\'};\n\tposition: absolute;\n\tright: 20px;\n\ttop: 9px;\n\twidth: 16px;\n\theight: 16px;\n\ttext-align: center;\n\tline-height: 1;\n\tbackground-color: #666;\n\tcolor: #fff;\n\tborder-radius: 2px;\n\t\n\t&:before {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tmargin-top: -7px;\n\t\tmargin-left: -6px;\n\t\tfont-size: 14px;\n\t}\n\t\n\t&:hover {\n\t\tbackground-color: #fccd34;\n\t}\n`; // Finally export the `EditLink`.\n\n/* harmony default export */ var EntityTile_EditLink = (EditLink);\n// CONCATENATED MODULE: ./src/Edit/components/ArrowToggle/Wrapper.js\n/**\n * Components: Wrapper component.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst ArrowToggle_Wrapper_Wrapper = styled_components_browser_esm["default"].div`\n\tcursor: pointer;\n\ttransition: opacity 150ms ease;\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\tbottom: 0;\n\tbox-sizing: border-box;\n\twidth: 16px;\n\tmin-height: 32px;\n\tpadding: 8px 4px;\n\tbackground-color: #f1f1f1;\n\t\n\t// Control the visibility of the element according to the \'show\' property.\n\tdisplay: ${props => props.show ? \'block\' : \'none\'};\n\topacity: ${props => props.show ? 1 : 0}\n`; // Finally export the `Wrapper`.\n\n/* harmony default export */ var ArrowToggle_Wrapper = (ArrowToggle_Wrapper_Wrapper);\n// CONCATENATED MODULE: ./src/Edit/components/ArrowToggle/Arrow.js\n/**\n * Components: Arrow.\n *\n * The `Arrow` component is an arrow on the tile right side which opens/closes\n * the Drawer when clicked.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Arrow = styled_components_browser_esm["default"].div`\n  box-sizing: border-box;\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 8px;\n\twidth: 8px;\n\theight: 8px;\n\tborder-top: 8px solid transparent;\n\tborder-bottom: 8px solid transparent;\n\tborder-left: 8px solid #7d7d7d;\n\tborder-radius: 16px;\n\ttransition: transform 150ms ease;\n\ttransform: rotate( ${props => props.open ? 180 : 0}deg );\n\t&:hover {\n\t\tborder-left-color: #fccd34;\n\t} \n`; // Finally export the `Arrow.\n\n/* harmony default export */ var ArrowToggle_Arrow = (Arrow);\n// CONCATENATED MODULE: ./src/Edit/components/ArrowToggle/index.js\n/**\n * Components: Arrow Toggle component.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * @inheritDoc\n */\n\nclass ArrowToggle_ArrowToggle extends external_this_React_default.a.PureComponent {\n  /**\n   * @inheritDoc\n   */\n  constructor(props) {\n    super(props); // Bind this.\n\n    this.onClick = this.onClick.bind(this);\n  }\n  /**\n   * Handle clicks and forward them to the parent handler.\n   *\n   * @since 3.11.0\n   *\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  onClick(e) {\n    e.preventDefault(); // Forward the click.\n\n    this.props.onClick(e);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    return /*#__PURE__*/external_this_React_default.a.createElement(ArrowToggle_Wrapper, {\n      onClick: this.onClick,\n      show: this.props.show\n    }, /*#__PURE__*/external_this_React_default.a.createElement(ArrowToggle_Arrow, {\n      open: this.props.open\n    }));\n  }\n\n} // Finally export the `ArrowToggle`.\n\n\n/* harmony default export */ var components_ArrowToggle = (ArrowToggle_ArrowToggle);\n// CONCATENATED MODULE: ./src/Edit/components/EntityTile/index.js\n/**\n * Components: Entity Tile.\n *\n * The `EntityTile` component is loaded from an `EntityList` component. It\'s\n * tile representing a single entity. It expects two properties:\n *  * `entity`, representing the entity for the tile,\n *\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @inheritDoc\n */\n\nclass EntityTile_EntityTile extends external_this_React_default.a.Component {\n  /**\n   * @inheritDoc\n   */\n  constructor(props) {\n    super(props); // Create a reference to the DOM element, sine we want focus on the tiles\n    // when they\'re active.\n\n    this.ref = /*#__PURE__*/external_this_React_default.a.createRef(); // Bind our functions.\n\n    this.onEditClick = this.onEditClick.bind(this);\n    this.onSwitchClick = this.onSwitchClick.bind(this);\n    this.onMainClick = this.onMainClick.bind(this);\n    this.onArrowToggleClick = this.onArrowToggleClick.bind(this);\n    this.close = this.close.bind(this); // Set the initial state.\n\n    this.state = {\n      open: false\n    };\n  }\n  /**\n   * Handles clicks on the `QuickEdit` element and forwards it to the parent\n   * handlers.\n   *\n   * @since 3.11.0\n   *\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  onEditClick(e) {\n    // Prevent propagation.\n    e.preventDefault(); // Call the handler.\n\n    this.props.onEditClick(this.props.entity); // Close the drawer.\n\n    this.setState({\n      open: false\n    });\n  }\n  /**\n   * Handle clicks by forwarding the event to the handler (defined in\n   * `EntityListContainer`).\n   *\n   * @since 3.11.0\n   *\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  onMainClick(e) {\n    // Prevent propagation.\n    e.preventDefault(); // Call the handler.\n\n    this.props.onClick(this.props.entity);\n  }\n  /**\n   * Handles clicks on the `LinkWrap` element and forwards them to the parent\n   * handler.\n   *\n   * @since 3.11.0\n   *\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  onSwitchClick(e) {\n    // Prevent propagation.\n    e.preventDefault(); // Call the handler.\n\n    this.props.onLinkClick(this.props.entity);\n  }\n  /**\n   * Handle trigger clicks, toggling the drawer\'s open/close state.\n   *\n   * @since 3.11.0\n   *\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  onArrowToggleClick(e) {\n    e.preventDefault(); // Call the handler.\n\n    this.setState({\n      open: !this.state.open\n    });\n  }\n  /**\n   * Close the `Drawer` (if open).\n   *\n   * @since 3.11.0\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  close(e) {\n    e.preventDefault(); // Close if open.\n\n    if (!e.currentTarget.contains(document.activeElement) && this.state.open) {\n      this.setState({\n        open: false\n      });\n    }\n  }\n  /**\n   * When the component is updated with the open flag, set the focus.\n   *\n   * @since 3.11.0\n   */\n\n\n  componentDidUpdate() {\n    if (this.state.open && this.ref && this.ref.current && this.ref.current.focus) {\n      this.ref.current.focus();\n    }\n  }\n  /**\n   * Render the component.\n   *\n   * @since 3.11.0\n   * @returns {XML} The render tree.\n   */\n\n\n  render() {\n    return /*#__PURE__*/external_this_React_default.a.createElement(EntityTile_Wrapper, {\n      entity: this.props.entity,\n      onBlur: this.close,\n      ref: this.ref,\n      tabIndex: "0",\n      key: this.props.entity.id\n    }, /*#__PURE__*/external_this_React_default.a.createElement(EntityTile_Main, {\n      onClick: this.onMainClick,\n      open: this.state.open\n    }, /*#__PURE__*/external_this_React_default.a.createElement(EntityTile_Label, {\n      entity: this.props.entity\n    }, this.props.entity.label, /*#__PURE__*/external_this_React_default.a.createElement(EntityTile_MainType, {\n      entity: this.props.entity\n    }, this.props.entity.mainType)), this.props.entity.local || /*#__PURE__*/external_this_React_default.a.createElement(Cloud["a" /* default */], {\n      className: "fa fa-cloud"\n    })), /*#__PURE__*/external_this_React_default.a.createElement(EntityTile_Drawer, {\n      open: this.state.open\n    }, /*#__PURE__*/external_this_React_default.a.createElement(components_Switch, {\n      onClick: this.onSwitchClick,\n      selected: this.props.entity.link\n    }, "Link", " "), /*#__PURE__*/external_this_React_default.a.createElement(EntityTile_Category, null, this.props.entity.mainType), /*#__PURE__*/external_this_React_default.a.createElement(EntityTile_EditLink, {\n      onClick: this.onEditClick,\n      edit: this.props.entity.edit,\n      className: "fa fa-pencil"\n    })), /*#__PURE__*/external_this_React_default.a.createElement(components_ArrowToggle, {\n      onClick: this.onArrowToggleClick,\n      open: this.state.open,\n      show: this.props.entity.occurrences && 0 < this.props.entity.occurrences.length\n    }));\n  }\n\n} // Finally export the class.\n\n\n/* harmony default export */ var components_EntityTile = (EntityTile_EntityTile);\n// CONCATENATED MODULE: ./src/Edit/components/EntityList/index.js\n/**\n * Components: Entity List.\n *\n * The `EntityList` components is a list of `EntityTile`s. The `EntityList`\n * feeds each `EntityTile` with the `entity` and with the `onClick` handler.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * The `EntityList` component.\n *\n * @since 3.11.0\n *\n * @param {Object} entities A map of entities, keyed by their id.\n * @param {Function} onClick The click handler.\n * @param {Function} onLinkClick Handler for the link/no link click.\n * @param {Function} onEditClick Handler for the edit click.\n * @constructor\n */\n\nconst EntityList = ({\n  entities,\n  onClick,\n  onLinkClick,\n  onEditClick\n}) => {\n  return /*#__PURE__*/external_this_React_default.a.createElement(EntityList_List, null, // Map each entity to an `EntityTile`.\n  entities.toList().map(entity => /*#__PURE__*/external_this_React_default.a.createElement(components_EntityTile, {\n    entity: entity,\n    tile: {\n      open: false\n    },\n    onClick: onClick,\n    onEditClick: onEditClick,\n    onLinkClick: onLinkClick,\n    key: entity.id\n  })));\n}; // Finally export the `EntityList`.\n\n\n/* harmony default export */ var components_EntityList = (EntityList);\n// CONCATENATED MODULE: ./src/Edit/containers/VisibleEntityList.js\n/**\n * Containers: Entity List.\n *\n * The `EntityListContainer` follows the `react-redux` pattern to bind specific\n * parts of the application state and dispatchers to the contained components.\n *\n * The `EntityListContainer` contains the `EntityList` component.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * Filters the provided map of entities according to the specified filter.\n *\n * @since 3.11.0\n *\n * @param {Object} entities A keyed map of entities.\n * @param {string} annotation The annotation id.\n * @param {string} filter The filter.\n * @returns {Object} The filtered keyed-map of entities.\n */\n\nconst getVisibleEntities = (entities, annotation, filter) => {\n  switch (filter) {\n    // When showing an annotation, we check that the annotation id is\n    // present as key in the annotations property.\n    case "SHOW_ANNOTATION":\n      return entities.filter(x => "undefined" !== typeof x.annotations && annotation in x.annotations);\n\n    case "SHOW_WHO":\n      return entities.filter(x => "undefined" !== typeof x.w && "who" === x.w);\n\n    case "SHOW_WHERE":\n      return entities.filter(x => "undefined" !== typeof x.w && "where" === x.w);\n\n    case "SHOW_WHEN":\n      return entities.filter(x => "undefined" !== typeof x.w && "when" === x.w);\n\n    case "SHOW_WHAT":\n      return entities.filter(x => "undefined" !== typeof x.w && "what" === x.w);\n\n    default:\n      // When showing all the entities, show only the shortlisted ones,\n      // i.e. the most relevant. The `shortlist` flag is set in the\n      // `entities` reducer and is assigned to the first 20 entities\n      // ordered by descending confidence.\n      //\n      // We also show selected entities.\n      return entities.filter(x => x.shortlist || 0 < x.occurrences.length);\n  }\n};\n/**\n * Map the state to React components\' properties.\n *\n * @since 3.11.0\n *\n * @param {object} state A state instance.\n * @returns {{entities}} An object with the list of entities.\n */\n\n\nconst mapStateToProps = state => {\n  return {\n    entities: getVisibleEntities(state.entities, state.annotationFilter, state.visibilityFilter)\n  };\n};\n/**\n * Map dispatchers to React components\' properties.\n *\n * @since 3.11.0\n * @param {function} dispatch Redux\'s dispatch function.\n * @returns {{onClick: (Function), onLinkClick: (Function)}} A list of\n *     dispatchers.\n */\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    /**\n     * The `onClick` dispatchers used by `EntityTile` component.\n     *\n     * @since 3.11.0\n     * @param {Object} entity The entity instance being clicked.\n     */\n    onClick: entity => {\n      dispatch(Object(actions["f" /* toggleEntity */])(entity));\n    },\n\n    /**\n     * The `onLinkClick` function is called when the Link switch is\n     * clicked.\n     * This function will toggle the link/no link on the entity\'s\n     * occurrences.\n     *\n     * @since 3.11.0\n     * @param {Object} entity The entity.\n     */\n    onLinkClick: entity => {\n      dispatch(Object(actions["g" /* toggleLink */])(entity));\n    },\n    onEditClick: entity => {\n      dispatch(Object(actions["d" /* setCurrentEntity */])(entity));\n    }\n  };\n};\n/**\n * The `EntityListContainer` instance built by `react-redux` by connecting the\n * store with the state and dispatchers merged to properties passed to the React\n * components.\n *\n * @since 3.11.0\n */\n\n\nconst VisibleEntityList = Object(es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(components_EntityList); // Finally export the `VisibleEntityList`.\n\n/* harmony default export */ var containers_VisibleEntityList = __webpack_exports__["a"] = (VisibleEntityList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///111\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/Edit/components/Header/Wrapper.js\n/**\n * Components: Wrapper component.\n *\n * The Wrapper component applies styling to its children in order to make them\n * event.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * @inheritDoc\n */\n\nconst Wrapper = styled_components_browser_esm["default"].div`\n\tposition: relative;\n\tmargin: auto;\n\tmax-width: 248px;\n\tborder-radius: 2px;\n\tborder: 1px solid #666;\n\toverflow: hidden;\n\n\t* {\n\t\tbox-sizing: border-box !important;\n\t\tdisplay: inline-block;\n\t\twidth: 20%;\n\t\tborder-right: 1px solid #666;\n\t\tcolor: #666;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\t\n\t\t&:hover {\n\t\t\tcolor: #a0a0a0;\n\t\t}\n\n\t\t&:focus {\n\t\t\t// Overrides WordPress\' styles.\n\t\t\tbox-shadow: none\n\t\t}\n\t}\n\n\t*:last-child {\n\t\tborder-right: none;\n\n\t\t// Fix annoying pixel gap in responsive.\n\t\t&.wl-active {\n\t\t\tbox-shadow: 3px 0 0 0 #666;\n\t\t}\n\t}\n\t\n\t*.wl-active {\n\t\tbackground: #666;\n\t\tcolor: #fff;\n\t}\n`; // Finally export the `Wrapper`.\n\n/* harmony default export */ var Header_Wrapper = (Wrapper);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 16 modules\nvar es = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./src/Edit/actions/index.js\nvar actions = __webpack_require__(34);\n\n// CONCATENATED MODULE: ./src/Edit/components/Link/index.js\n/**\n * Components: Link.\n *\n * The `Link` component is a link which handles an `onClick` event.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Define the `Link` class.\n *\n * @since 3.11.0\n */\n\nclass Link_Link extends external_this_React_default.a.PureComponent {\n  /**\n   * @inheritDoc\n   */\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n  /**\n   * Reroute clicks to the container.\n   *\n   * @since 3.11.0\n   *\n   * @param {Event} e The source {@link Event}.\n   */\n\n\n  onClick(e) {\n    e.preventDefault();\n    this.props.onClick(this.props.filter);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line\n      external_this_React_default.a.createElement("a", {\n        className: this.props.active ? \'wl-active\' : \'\',\n        onClick: this.onClick\n      }, this.props.children)\n    );\n  }\n\n} // Finally export the `Link`.\n\n\n/* harmony default export */ var components_Link = (Link_Link);\n// CONCATENATED MODULE: ./src/Edit/containers/EntityFilter.js\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * @inheritDoc\n */\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    active: ownProps.filter === state.visibilityFilter\n  };\n};\n/**\n * @inheritDoc\n */\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    /**\n     * Set the entity visibility filter when a link is clicked.\n     *\n     * @since 3.11.0\n     *\n     * @param {string} filter The filter (who, where, when, what, all).\n     */\n    onClick: filter => {\n      dispatch(Object(actions["e" /* setEntityVisibility */])(filter));\n    }\n  };\n};\n/**\n * The `EntityListContainer` instance built by `react-redux` by connecting the\n * store with the state and dispatchers merged to properties passed to the React\n * components.\n *\n * @since 3.11.0\n */\n\n\nconst EntityFilter = Object(es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(components_Link); // Finally export the `EntityFilter`.\n\n/* harmony default export */ var containers_EntityFilter = (EntityFilter);\n// CONCATENATED MODULE: ./src/Edit/components/Header/index.js\n/**\n * Components: the classification box header.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * Define the `Header` with the entity filters.\n *\n * @since 3.11.0\n * @return {Function} The `render` function.\n */\n\nconst Header = () => /*#__PURE__*/external_this_React_default.a.createElement(Header_Wrapper, null, /*#__PURE__*/external_this_React_default.a.createElement(containers_EntityFilter, {\n  filter: "SHOW_WHAT"\n}, "what"), /*#__PURE__*/external_this_React_default.a.createElement(containers_EntityFilter, {\n  filter: "SHOW_WHERE"\n}, "where"), /*#__PURE__*/external_this_React_default.a.createElement(containers_EntityFilter, {\n  filter: "SHOW_WHEN"\n}, "when"), /*#__PURE__*/external_this_React_default.a.createElement(containers_EntityFilter, {\n  filter: "SHOW_WHO"\n}, "who"), /*#__PURE__*/external_this_React_default.a.createElement(containers_EntityFilter, {\n  filter: "SHOW_ALL"\n}, "all")); // Finally export the `Header`.\n\n\n/* harmony default export */ var components_Header = __webpack_exports__["a"] = (Header);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///112\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/immutable/dist/immutable.js\nvar immutable = __webpack_require__(63);\n\n// EXTERNAL MODULE: ./src/Edit/constants/ActionTypes.js\nvar ActionTypes = __webpack_require__(18);\n\n// EXTERNAL MODULE: ./src/Edit/services/LinkService.js + 1 modules\nvar LinkService = __webpack_require__(76);\n\n// CONCATENATED MODULE: ./src/Edit/services/WsService.js\n/**\n * Services: Ws Service.\n *\n * A service which determines the `W` according to WordLift\'s configuration.\n *\n * @since 3.11.0\n */\nclass WsService {\n  /**\n   * Get the `W` (who, where, when, what) corresponding to the provided\n   * entity.\n   *\n   * @since 3.11.0\n   *\n   * @param {Object} entity The entity.\n   * @returns {string} The W, or \'unknown\' if there\'s no match.\n   */\n  getW(entity) {\n    return window[\'_wlMetaBoxSettings\'].settings.classificationBoxes.reduce((acc, box) => -1 === box.registeredTypes.indexOf(entity.mainType) ? acc : box.id, "unknown");\n  }\n\n} // Finally export the `WsService`.\n\n\n/* harmony default export */ var services_WsService = (new WsService());\n// CONCATENATED MODULE: ./src/Edit/reducers/entities.js\n/*global wlSettings*/\n\n/**\n * Reducers: Entities.\n *\n * Define the reducers related to entities.\n *\n * @since 3.11.0\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n/**\n * Define the reducers.\n *\n * @since 3.11.0\n * @param {object} state The `state`.\n * @param {object} action The `action`.\n * @returns {object} The new state.\n */\n\nconst entities = function (state = Object(immutable["Map"])(), action) {\n  switch (action.type) {\n    case ActionTypes["a" /* ADD_ENTITY */]:\n      return state.merge(Object(immutable["Map"])({\n        [action.payload.id]: action.payload\n      }));\n    // Legacy: receive analysis\' results.\n\n    case ActionTypes["d" /* RECEIVE_ANALYSIS_RESULTS */]:\n      // Calculate the labels.\n      const labels = Object(immutable["Map"])(action.results.entities).groupBy((v, k) => v.label); // Return a new map of the received entities. The legacy Angular\n      // app doesn\'t set the `link` property on the entity, therefore we\n      // preset it here according to the `occurrences` settings.\n\n      return Object(immutable["Map"])(action.results.entities).map(x => Object.assign({}, x, {\n        link: LinkService["a" /* default */].getLink(x.occurrences),\n        local: 0 === x.id.indexOf(wlSettings["datasetUri"]),\n        w: services_WsService.getW(x),\n        edit: "no" !== wlSettings["can_create_entities"],\n        duplicateLabel: 1 < labels.get(x.label).count()\n      })) // Sort by (1) local/not local, (2) confidence, (3) number of annotations.\n      .sort((x, y) => {\n        // First the local entities.\n        if (x.local !== y.local) return y.local - x.local; // Get the delta confidence.\n\n        const delta = y.confidence - x.confidence; // If the confidence is equal, sort by number of annotations.\n\n        return 0 !== delta ? delta : y.annotations.length - x.annotations.length;\n      }) // Set the shortlist flag to true for the first 20.\n      .mapEntries(([k, v], i) => {\n        v.shortlist = i < 20;\n        return [k, v];\n      }) //          // Then resort them by label.\n      //          .sortBy( x => x.label.toLowerCase() )\n      ;\n\n    case ActionTypes["i" /* TOGGLE_LINK_SUCCESS */]:\n      const {\n        id,\n        link\n      } = action.payload;\n      return state.set(id, // A new object instance with the existing props and the new\n      // occurrences.\n      Object.assign({}, state.get(id), {\n        link\n      }));\n    // Update the entity\'s occurrences. This action is dispatched following\n    // a legacy Angular event. The event is configured in the admin/index.js\n    // app.\n\n    case ActionTypes["j" /* UPDATE_OCCURRENCES_FOR_ENTITY */]:\n      // Update the entity.\n      return state.set(action.entityId, // A new object instance with the existing props and the new\n      // occurrences.\n      Object.assign({}, state.get(action.entityId), {\n        occurrences: action.occurrences,\n        link: LinkService["a" /* default */].getLink(action.occurrences)\n      }));\n\n    default:\n      return state;\n  }\n}; // Finally export the reducer.\n\n\n/* harmony default export */ var reducers_entities = __webpack_exports__["a"] = (entities);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///114\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/Edit/components/Accordion/Lead.js\n\nconst Lead = styled_components_browser_esm["default"].div`\n    ${props => props.open && styled_components_browser_esm["css"]`\n        border-top : 0 !important;\n        border-bottom: 5px solid #007aff;\n    `}\n`;\n/* harmony default export */ var Accordion_Lead = (Lead);\n// CONCATENATED MODULE: ./src/Edit/components/Accordion/index.js\n/**\n * External dependencies\n */\n\n\n\nclass Accordion_Accordion extends external_this_React_default.a.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: props.open\n    };\n    this.switch = this.switch.bind(this);\n  }\n\n  switch() {\n    this.setState(prevState => ({\n      open: !prevState.open\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/external_this_React_default.a.createElement("div", null, /*#__PURE__*/external_this_React_default.a.createElement("div", {\n      className: "wl-tab-lead",\n      onClick: this.switch\n    }, /*#__PURE__*/external_this_React_default.a.createElement("div", {\n      className: "wl-tab-lead-wrap"\n    }, /*#__PURE__*/external_this_React_default.a.createElement("h1", {\n      className: "wl-tab-lead-text"\n    }, this.props.label), /*#__PURE__*/external_this_React_default.a.createElement(Accordion_Lead, {\n      className: "wl-tab-lead-text wl-tab-lead-btn",\n      open: this.state.open\n    }))), /*#__PURE__*/external_this_React_default.a.createElement("div", {\n      className: "wl-tab-wrap",\n      style: {\n        display: this.state.open ? \'block\' : \'none\'\n      }\n    }, this.props.children));\n  }\n\n}\n\n/* harmony default export */ var components_Accordion = __webpack_exports__["a"] = (Accordion_Accordion);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9jb21wb25lbnRzL0FjY29yZGlvbi9MZWFkLmpzPzkyODAiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VkaXQvY29tcG9uZW50cy9BY2NvcmRpb24vaW5kZXguanM/ODkxYSJdLCJuYW1lcyI6WyJMZWFkIiwic3R5bGVkIiwiZGl2IiwicHJvcHMiLCJvcGVuIiwiY3NzIiwiQWNjb3JkaW9uIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInN0YXRlIiwic3dpdGNoIiwiYmluZCIsInNldFN0YXRlIiwicHJldlN0YXRlIiwicmVuZGVyIiwibGFiZWwiLCJkaXNwbGF5IiwiY2hpbGRyZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBRUEsTUFBTUEsSUFBSSxHQUFHQyx3Q0FBTSxDQUFDQyxHQUFJO01BQ2xCQyxLQUFLLElBQUlBLEtBQUssQ0FBQ0MsSUFBTixJQUFjQyxvQ0FBSTs7O0tBRzNCO0NBSk47QUFPZUwsdURBQWYsRTs7QUNUQTs7O0FBR0E7QUFFQTs7QUFFQSxNQUFNTSxtQkFBTixTQUF3QkMsNkJBQUssQ0FBQ0MsU0FBOUIsQ0FBd0M7QUFDcENDLGFBQVcsQ0FBQ04sS0FBRCxFQUFRO0FBQ2YsVUFBTUEsS0FBTjtBQUNBLFNBQUtPLEtBQUwsR0FBYTtBQUFDTixVQUFJLEVBQUVELEtBQUssQ0FBQ0M7QUFBYixLQUFiO0FBRUEsU0FBS08sTUFBTCxHQUFjLEtBQUtBLE1BQUwsQ0FBWUMsSUFBWixDQUFpQixJQUFqQixDQUFkO0FBQ0g7O0FBRURELFFBQU0sR0FBRztBQUNMLFNBQUtFLFFBQUwsQ0FBZUMsU0FBRCxLQUFnQjtBQUMxQlYsVUFBSSxFQUFFLENBQUNVLFNBQVMsQ0FBQ1Y7QUFEUyxLQUFoQixDQUFkO0FBR0g7O0FBRURXLFFBQU0sR0FBRztBQUNMLHdCQUNJLHNFQUNJO0FBQUssZUFBUyxFQUFDLGFBQWY7QUFBNkIsYUFBTyxFQUFFLEtBQUtKO0FBQTNDLG9CQUNJO0FBQUssZUFBUyxFQUFDO0FBQWYsb0JBQ0k7QUFBSSxlQUFTLEVBQUM7QUFBZCxPQUFrQyxLQUFLUixLQUFMLENBQVdhLEtBQTdDLENBREosZUFFSSw0Q0FBQyxjQUFEO0FBQU0sZUFBUyxFQUFDLGtDQUFoQjtBQUFtRCxVQUFJLEVBQUUsS0FBS04sS0FBTCxDQUFXTjtBQUFwRSxNQUZKLENBREosQ0FESixlQU9JO0FBQUssZUFBUyxFQUFDLGFBQWY7QUFBNkIsV0FBSyxFQUFFO0FBQUNhLGVBQU8sRUFBRSxLQUFLUCxLQUFMLENBQVdOLElBQVgsR0FBa0IsT0FBbEIsR0FBNEI7QUFBdEM7QUFBcEMsT0FDSyxLQUFLRCxLQUFMLENBQVdlLFFBRGhCLENBUEosQ0FESjtBQWFIOztBQTVCbUM7O0FBZ0N6QlosdUdBQWYiLCJmaWxlIjoiMTE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCwge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5jb25zdCBMZWFkID0gc3R5bGVkLmRpdmBcbiAgICAke3Byb3BzID0+IHByb3BzLm9wZW4gJiYgY3NzYFxuICAgICAgICBib3JkZXItdG9wIDogMCAhaW1wb3J0YW50O1xuICAgICAgICBib3JkZXItYm90dG9tOiA1cHggc29saWQgIzAwN2FmZjtcbiAgICBgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgTGVhZDtcbiIsIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBMZWFkIGZyb20gJy4vTGVhZCc7XG5cbmNsYXNzIEFjY29yZGlvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge29wZW46IHByb3BzLm9wZW59O1xuXG4gICAgICAgIHRoaXMuc3dpdGNoID0gdGhpcy5zd2l0Y2guYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBzd2l0Y2goKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4gKHtcbiAgICAgICAgICAgIG9wZW46ICFwcmV2U3RhdGUub3BlblxuICAgICAgICB9KSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndsLXRhYi1sZWFkXCIgb25DbGljaz17dGhpcy5zd2l0Y2h9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndsLXRhYi1sZWFkLXdyYXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJ3bC10YWItbGVhZC10ZXh0XCI+e3RoaXMucHJvcHMubGFiZWx9PC9oMT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMZWFkIGNsYXNzTmFtZT1cIndsLXRhYi1sZWFkLXRleHQgd2wtdGFiLWxlYWQtYnRuXCIgb3Blbj17dGhpcy5zdGF0ZS5vcGVufSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndsLXRhYi13cmFwXCIgc3R5bGU9e3tkaXNwbGF5OiB0aGlzLnN0YXRlLm9wZW4gPyAnYmxvY2snIDogJ25vbmUnfX0+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEFjY29yZGlvbjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///115\n')},,,,,,function(module,exports,__webpack_require__){eval('!function(e,t){ true?module.exports=t(__webpack_require__(4),__webpack_require__(0),__webpack_require__(63),__webpack_require__(171)):undefined}(window,(function(e,t,n,r){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=8)}([function(t,n){t.exports=e},function(e,n){e.exports=t},function(e,t){e.exports=n},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i=(r=["\\n  border-left: 5px solid transparent;\\n  border-right: 5px solid transparent;\\n  border-bottom: 5px solid black;\\n"],o=["\\n  border-left: 5px solid transparent;\\n  border-right: 5px solid transparent;\\n  border-bottom: 5px solid black;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),a=u(n(0)),l=u(n(4));function u(e){return e&&e.__esModule?e:{default:e}}var f=(0,a.default)(l.default)(i);t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  display: inline-block;\\n  width: 0;\\n  height: 0;\\n  cursor: pointer;\\n  vertical-align: middle;\\n"],o=["\\n  display: inline-block;\\n  width: 0;\\n  height: 0;\\n  cursor: pointer;\\n  vertical-align: middle;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i=(r=["\\n  border-left: 5px solid transparent;\\n  border-right: 5px solid transparent;\\n  border-top: 5px solid black;\\n"],o=["\\n  border-left: 5px solid transparent;\\n  border-right: 5px solid transparent;\\n  border-top: 5px solid black;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),a=u(n(0)),l=u(n(4));function u(e){return e&&e.__esModule?e:{default:e}}var f=(0,a.default)(l.default)(i);t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=u(n(1)),i=(n(2),u(n(20))),a=u(n(21)),l=u(n(7));function u(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.onData=n.onData.bind(n),e.loader&&(n.loader=e.loader),e.propertyDecorator&&(n.propertyDecorator=e.propertyDecorator),e.propertyInstanceDecorator&&(n.propertyInstanceDecorator=e.propertyInstanceDecorator),n.DecoratedProperty=n.propertyDecorator(a.default),n.state={properties:[]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"componentDidMount",value:function(){this.loader(this.props.selected).then(this.onData)}},{key:"componentDidUpdate",value:function(e,t,n){e.selected!==this.props.selected&&this.loader(this.props.selected).then(this.onData)}},{key:"onData",value:function(e){this.setState({properties:e})}},{key:"propertyDecorator",value:function(e){return e}},{key:"render",value:function(){var e=this;return o.default.createElement(i.default,null,o.default.createElement(l.default.Provider,{value:{loader:this.loader,propertyDecorator:this.propertyDecorator,propertyInstanceDecorator:this.propertyInstanceDecorator}},this.state.properties.map((function(t,n){return o.default.createElement(e.DecoratedProperty,{key:n,property:t,propertyInstanceDecorator:e.propertyInstanceDecorator})}))))}}]),t}(o.default.Component);t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(1);var i=((r=o)&&r.__esModule?r:{default:r}).default.createContext({loader:function(){return Promise.resolve({})}});t.default=i},function(e,t,n){n(9),e.exports=n(10)},function(e,t){e.exports=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FetchLoader=t.Form=t.SchemaClassTree=void 0;var r=a(n(11)),o=a(n(6)),i=a(n(45));function a(e){return e&&e.__esModule?e:{default:e}}t.SchemaClassTree=r.default,t.Form=o.default,t.FetchLoader=i.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=a(n(1)),i=(n(2),a(n(12)));function a(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return console.debug("SchemaClassTree c\'tor",{props:e}),n.childrenSelector=n.childrenSelector.bind(n),n.leafDecorator=e.leafDecorator||function(e){return e},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"childrenSelector",value:function(e,t){return t.filter((function(t){return-1<e.children.map((function(e){return e.id})).indexOf(t.id)}))}},{key:"render",value:function(){return o.default.createElement(i.default,{roots:this.props.roots,childrenSelector:this.childrenSelector,leafDecorator:this.props.leafDecorator,items:this.props.items,isSelected:this.props.isSelected,isOpen:this.props.isOpen,toggleSelected:this.props.toggleSelected,toggleOpen:this.props.toggleOpen})}}]),t}(o.default.Component);t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=l(n(1)),i=l(n(13)),a=l(n(14));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){var t=e.items,n=e.leafDecorator,l=e.roots,u=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["items","leafDecorator","roots"]);return o.default.createElement(i.default,null,l.map((function(e,i){return o.default.createElement(a.default,r({},u,{leafDecorator:n,key:i,item:e,items:t,open:u.isOpen(e),selected:u.isSelected(e),childItems:u.childrenSelector(e,t)}))})))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  list-style: none;\\n  padding-left: 0;\\n"],o=["\\n  list-style: none;\\n  padding-left: 0;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.ul(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=d(n(1)),a=d(n(15)),l=d(n(16)),u=d(n(3)),f=d(n(5)),c=d(n(17));function d(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.leafDecorator=e.leafDecorator||function(e){return e},n.DecoratedCheckbox=n.leafDecorator(c.default),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"shouldComponentUpdate",value:function(e,t){return this.props.open||e.open||this.props.selected!==e.selected}},{key:"render",value:function(){var e=this.props,n=e.childItems,o=e.open,c=e.selected,d=o?u.default:f.default;return i.default.createElement(a.default,e,0<n.length&&i.default.createElement(d,{onClick:function(){return e.toggleOpen(e.item)}}),i.default.createElement(this.DecoratedCheckbox,r({},e,{type:"checkbox",onChange:function(){return e.toggleSelected(e.item)},checked:c}),e.item.name),0<n.length&&o&&i.default.createElement(l.default,null,n.map((function(n,o){return i.default.createElement(t,r({},e,{key:o,item:n,open:e.isOpen(n),selected:e.isSelected(n),childItems:e.childrenSelector(n,e.items)}))}))))}}]),t}(i.default.Component);t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=l(["\\n  // Avoid issues with WordPress own styling.\\n  margin-bottom: 0;\\n  \\n  ",";\\n"],["\\n  // Avoid issues with WordPress own styling.\\n  margin-bottom: 0;\\n  \\n  ",";\\n"]),i=l(["\\n      margin-left: 10px;\\n    "],["\\n      margin-left: 10px;\\n    "]),a=n(0);function l(e,t){return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var u=((r=a)&&r.__esModule?r:{default:r}).default.li(o,(function(e){return 0===e.childItems.length&&(0,a.css)(i)}));t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  list-style: none;\\n  padding-left: 18px;\\n"],o=["\\n  list-style: none;\\n  padding-left: 18px;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.ul(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(1)),o=a(n(18)),i=a(n(19));function a(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){var t=e.onChange,n=e.children,a=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["onChange","children"]);return r.default.createElement(o.default,a,r.default.createElement(i.default,{type:"checkbox",checked:a.checked,onChange:t}),n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  margin: 2px 4px;\\n  white-space: nowrap;\\n\\n  cursor: pointer;\\n  display: inline-block;\\n"],o=["\\n  margin: 2px 4px;\\n  white-space: nowrap;\\n\\n  cursor: pointer;\\n  display: inline-block;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  cursor: pointer;\\n"],o=["\\n  cursor: pointer;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.input(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  color: initial;\\n  font-size: initial;\\n  font-family: initial;\\n"],o=["\\n  color: initial;\\n  font-size: initial;\\n  font-family: initial;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=c(n(1)),i=n(2),a=c(n(22)),l=c(n(27)),u=c(n(28)),f=c(n(29));function c(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleAdd=n.handleAdd.bind(n),n.handleRemove=n.handleRemove.bind(n),n.propertyInstanceDecorator=e.propertyInstanceDecorator||function(e){return e},n.PropertyInstance=n.propertyInstanceDecorator(f.default),n.state={values:(0,i.Map)((e.values||[]).map((function(e){return[(0,u.default)(),e]}))).toOrderedMap()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"handleAdd",value:function(e,t){this.setState((function(e){return{values:e.values.set((0,u.default)(),{type:t.name,value:""})}}))}},{key:"handleRemove",value:function(e){this.setState((function(t){return{values:t.values.delete(e)}}))}},{key:"render",value:function(){var e=this,t=this.props,n=t.property;!function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}(t,["property"]);return o.default.createElement("div",null,o.default.createElement("strong",null,n.name),o.default.createElement(a.default,{property:n,onAdd:this.handleAdd}),this.state.values.map((function(t,r){return o.default.createElement("div",{key:r},o.default.createElement(l.default,{onClick:function(){return e.handleRemove(r)}}),o.default.createElement(e.PropertyInstance,{property:n,propertyValue:t}))})).valueSeq(),o.default.createElement("hr",{style:{color:"#007aff",width:"100%",height:"1px"}}))}}]),t}(o.default.Component);t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=f(n(1)),i=f(n(23)),a=f(n(24)),l=f(n(25)),u=f(n(26));function f(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleAdd=n.handleAdd.bind(n),n.handleClick=n.handleClick.bind(n),n.state={open:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"handleClick",value:function(e){if(e.preventDefault(),1===this.props.property.ranges.length)return this.handleAdd(this.props.property,this.props.property.ranges[0]);this.setState((function(e){return{open:!e.open}}))}},{key:"handleAdd",value:function(e,t){this.props.onAdd&&this.props.onAdd(e,t),this.setState({open:!1})}},{key:"render",value:function(){var e=this,t=this.props.property;return o.default.createElement(i.default,null,o.default.createElement(a.default,{open:this.state.open,onClick:this.handleClick}),o.default.createElement(l.default,null,o.default.createElement(u.default,{open:this.state.open},t.ranges.map((function(n,r){return o.default.createElement("div",{key:r,onClick:function(){return e.handleAdd(t,n)}},n.label)})))))}}]),t}(o.default.Component);t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n    display: inline-block;\\n    margin: 0 4px;\\n"],o=["\\n    display: inline-block;\\n    margin: 0 4px;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  display: inline-block;\\n  cursor: pointer;\\n  background: #007aff;\\n  color: white;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  text-align: center;\\n  font-weight: 600;\\n  border-radius: 2px;\\n\\n  &:after {\\n    content: ",";\\n  }\\n"],o=["\\n  display: inline-block;\\n  cursor: pointer;\\n  background: #007aff;\\n  color: white;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  text-align: center;\\n  font-weight: 600;\\n  border-radius: 2px;\\n\\n  &:after {\\n    content: ",";\\n  }\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a,(function(e){return e.open?"\'-\'":"\'+\'"}));t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  overflow: hidden;\\n  display: inline-block;\\n  height: 20px;\\n  vertical-align: top;\\n  margin-left: -2px;\\n"],o=["\\n  overflow: hidden;\\n  display: inline-block;\\n  height: 20px;\\n  vertical-align: top;\\n  margin-left: -2px;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  display: inline-block;\\n  border: 1px solid #007aff;\\n  border-radius: 2px;\\n  margin-left: ",";\\n  transition: 500ms;\\n  line-height: 20px;\\n  padding-left: 2px;\\n  height: 20px;\\n  box-sizing: border-box;\\n\\n  > div {\\n    display: inline-block;\\n    cursor: pointer;\\n    padding: 0 8px;\\n    border-left: 1px solid #007aff;\\n    color: #007aff;\\n    font-weight: 600;\\n    font-family: sans-serif;\\n    font-size: 12px;\\n\\n    &:hover {\\n      color: #fff;\\n      background: #007aff;\\n    }\\n  }\\n"],o=["\\n  display: inline-block;\\n  border: 1px solid #007aff;\\n  border-radius: 2px;\\n  margin-left: ",";\\n  transition: 500ms;\\n  line-height: 20px;\\n  padding-left: 2px;\\n  height: 20px;\\n  box-sizing: border-box;\\n\\n  > div {\\n    display: inline-block;\\n    cursor: pointer;\\n    padding: 0 8px;\\n    border-left: 1px solid #007aff;\\n    color: #007aff;\\n    font-weight: 600;\\n    font-family: sans-serif;\\n    font-size: 12px;\\n\\n    &:hover {\\n      color: #fff;\\n      background: #007aff;\\n    }\\n  }\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a,(function(e){return e.open?"-4px":"-100%"}));t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=[\'\\n  display: inline-block;\\n  cursor: pointer;\\n  background: #007aff;\\n  color: white;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  text-align: center;\\n  font-weight: 600;\\n  vertical-align: top;\\n  border-radius: 2px 0 0px 2px;\\n  box-sizing: border-box;\\n  margin-top: 1px;\\n\\n  &:after {\\n    content: "-";\\n  }\\n\'],o=[\'\\n  display: inline-block;\\n  cursor: pointer;\\n  background: #007aff;\\n  color: white;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  text-align: center;\\n  font-weight: 600;\\n  vertical-align: top;\\n  border-radius: 2px 0 0px 2px;\\n  box-sizing: border-box;\\n  margin-top: 1px;\\n\\n  &:after {\\n    content: "-";\\n  }\\n\'],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Array(256).fill().map((function(e,t){return(t<16?"0":"")+t.toString(16)})),o=window.crypto&&window.crypto.getRandomValues?function(){var e=new Uint32Array(4);return window.crypto.getRandomValues(e),{d0:e[0],d1:e[1],d2:e[2],d3:e[3]}}:function(){return{d0:4294967296*Math.random()>>>0,d1:4294967296*Math.random()>>>0,d2:4294967296*Math.random()>>>0,d3:4294967296*Math.random()>>>0}};t.default=function(){return e=o(),t=e.d0,n=e.d1,i=e.d2,a=e.d3,r[255&t]+r[t>>8&255]+r[t>>16&255]+r[t>>24&255]+"-"+r[255&n]+r[n>>8&255]+"-"+r[n>>16&15|64]+r[n>>24&255]+"-"+r[63&i|128]+r[i>>8&255]+"-"+r[i>>16&255]+r[i>>24&255]+r[255&a]+r[a>>8&255]+r[a>>16&255]+r[a>>24&255];var e,t,n,i,a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=g(n(1)),a=n(2),l=g(n(30)),u=g(n(31)),f=g(n(32)),c=g(n(33)),d=g(n(34)),p=g(n(35)),s=g(n(36)),h=g(n(37)),b=g(n(38)),x=g(n(39)),v=g(n(40)),y=g(n(41));function g(e){return e&&e.__esModule?e:{default:e}}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function O(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var w=(0,a.Map)({Boolean:l.default,False:u.default,True:f.default,Date:c.default,DateTime:d.default,Number:p.default,Float:s.default,Integer:h.default,Time:b.default,Text:x.default,URL:v.default}),j=function(e){return function(t){function n(e){m(this,n);var t=_(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t.handleChange=t.handleChange.bind(t),t.state={value:e.propertyValue.value},t}return O(n,t),o(n,[{key:"handleChange",value:function(e){this.setState({value:e.target.value})}},{key:"render",value:function(){return i.default.createElement(e,r({},this.props,{value:this.state.value,onChange:this.handleChange}))}}]),n}(i.default.Component)},P=function(e){function t(e){m(this,t);var n=_(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.Component=j(w.get(e.propertyValue.type,y.default)),n}return O(t,e),o(t,[{key:"render",value:function(){return i.default.createElement(this.Component,this.props)}}]),t}(i.default.Component);t.default=P},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],o=["\\n  border: 1px solid #007aff;\\n  min-height: 20px;\\n  height: 20px;\\n  line-height: 20px;\\n  width: 500px;\\n  max-width: calc(100% - 20px);\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.textarea(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  border: 1px solid #007aff;\\n  border-left: 0;\\n  border-radius: 0 2px 2px 0;\\n  vertical-align: bottom;\\n  line-height: 20px;\\n  height: 20px;\\n  width: 500px;\\n  max-width: 100%;\\n  box-sizing: border-box;\\n"],o=["\\n  border: 1px solid #007aff;\\n  border-left: 0;\\n  border-radius: 0 2px 2px 0;\\n  vertical-align: bottom;\\n  line-height: 20px;\\n  height: 20px;\\n  width: 500px;\\n  max-width: 100%;\\n  box-sizing: border-box;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.input(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=d(n(1)),a=d(n(42)),l=d(n(43)),u=n(44),f=d(n(6)),c=d(n(7));function d(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.toggle=n.toggle.bind(n),n.state={open:!0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"toggle",value:function(){this.setState((function(e){return{open:!e.open}}))}},{key:"render",value:function(){var e=this.props,t=e.type,n=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["type"]),o=this.state.open?u.ArrowUp:u.ArrowDown;return i.default.createElement(i.default.Fragment,null,i.default.createElement(a.default,null,i.default.createElement("input",{type:"radio"}),"New or ",i.default.createElement("input",{type:"radio"}),"Select existing"," ",i.default.createElement("select",null)," ",i.default.createElement("a",{href:"#"},"edit"),i.default.createElement(o,{onClick:this.toggle})),i.default.createElement(l.default,{open:this.state.open},i.default.createElement(c.default.Consumer,null,(function(e){return i.default.createElement(f.default,r({},e,{selected:[t]},n))}))))}}]),t}(i.default.Component);t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  display: inline-block;\\n  border: 1px solid #007aff;\\n  border-left: 0;\\n  border-radius: 0 2px 2px 0;\\n  vertical-align: bottom;\\n  min-height: 20px;\\n  // height: 20px;\\n  line-height: 20px;\\n  width: 504px;\\n  max-width: calc(100% - 20px);\\n  box-sizing: border-box;\\n\\n  color: #007aff;\\n  font-weight: 600;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n"],o=["\\n  display: inline-block;\\n  border: 1px solid #007aff;\\n  border-left: 0;\\n  border-radius: 0 2px 2px 0;\\n  vertical-align: bottom;\\n  min-height: 20px;\\n  // height: 20px;\\n  line-height: 20px;\\n  width: 504px;\\n  max-width: calc(100% - 20px);\\n  box-sizing: border-box;\\n\\n  color: #007aff;\\n  font-weight: 600;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a);t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o,i,a=(r=["\\n  display: ",";\\n"],o=["\\n  display: ",";\\n"],Object.freeze(Object.defineProperties(r,{raw:{value:Object.freeze(o)}}))),l=n(0);var u=((i=l)&&i.__esModule?i:{default:i}).default.div(a,(function(e){return e.open?"block":"none"}));t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ArrowUp=t.ArrowDown=void 0;var r=i(n(3)),o=i(n(5));function i(e){return e&&e.__esModule?e:{default:e}}t.ArrowDown=o.default,t.ArrowUp=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e){return function(t){return fetch(e,{method:"POST",body:JSON.stringify({query:"query {\\n\\tschemaProperties(classes: "+JSON.stringify(t)+" ) {\\n\\t\\tname\\n\\t\\tlabel\\n\\t\\tdescription\\n\\t\\tweight\\n        ranges {\\n            name\\n            label\\n        }\\n\\t}\\n}",variables:null}),headers:{"Content-Type":"application/json; charset=UTF-8"}}).then((function(e){return e.json()})).then((function(e){return e.schemaProperties})).then((function(e){return e.sort((function(e,t){var n=e.name.toUpperCase(),r=t.name.toUpperCase();return n<r?-1:n>r?1:0}))}))}}}])}));\n//# sourceMappingURL=wordlift-for-schemaorg.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///121\n')},,,,,,,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9pbmRleC5zY3NzP2UzYjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///128\n")},function(module,exports,__webpack_require__){eval("\nvar clean = __webpack_require__(130)\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdG8tc3BhY2UtY2FzZS9pbmRleC5qcz8zNmQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxZQUFZLG1CQUFPLENBQUMsR0FBWTs7QUFFaEM7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6IjEyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNsZWFuID0gcmVxdWlyZSgndG8tbm8tY2FzZScpXG5cbi8qKlxuICogRXhwb3J0LlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gdG9TcGFjZUNhc2VcblxuLyoqXG4gKiBDb252ZXJ0IGEgYHN0cmluZ2AgdG8gc3BhY2UgY2FzZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gdG9TcGFjZUNhc2Uoc3RyaW5nKSB7XG4gIHJldHVybiBjbGVhbihzdHJpbmcpLnJlcGxhY2UoL1tcXFdfXSsoLnwkKS9nLCBmdW5jdGlvbiAobWF0Y2hlcywgbWF0Y2gpIHtcbiAgICByZXR1cm4gbWF0Y2ggPyAnICcgKyBtYXRjaCA6ICcnXG4gIH0pLnRyaW0oKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///129\n")},function(module,exports){eval("\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdG8tbm8tY2FzZS9pbmRleC5qcz9kYzgzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJmaWxlIjoiMTMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEV4cG9ydC5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRvTm9DYXNlXG5cbi8qKlxuICogVGVzdCB3aGV0aGVyIGEgc3RyaW5nIGlzIGNhbWVsLWNhc2UuXG4gKi9cblxudmFyIGhhc1NwYWNlID0gL1xccy9cbnZhciBoYXNTZXBhcmF0b3IgPSAvKF98LXxcXC58OikvXG52YXIgaGFzQ2FtZWwgPSAvKFthLXpdW0EtWl18W0EtWl1bYS16XSkvXG5cbi8qKlxuICogUmVtb3ZlIGFueSBzdGFydGluZyBjYXNlIGZyb20gYSBgc3RyaW5nYCwgbGlrZSBjYW1lbCBvciBzbmFrZSwgYnV0IGtlZXBcbiAqIHNwYWNlcyBhbmQgcHVuY3R1YXRpb24gdGhhdCBtYXkgYmUgaW1wb3J0YW50IG90aGVyd2lzZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gdG9Ob0Nhc2Uoc3RyaW5nKSB7XG4gIGlmIChoYXNTcGFjZS50ZXN0KHN0cmluZykpIHJldHVybiBzdHJpbmcudG9Mb3dlckNhc2UoKVxuICBpZiAoaGFzU2VwYXJhdG9yLnRlc3Qoc3RyaW5nKSkgcmV0dXJuICh1bnNlcGFyYXRlKHN0cmluZykgfHwgc3RyaW5nKS50b0xvd2VyQ2FzZSgpXG4gIGlmIChoYXNDYW1lbC50ZXN0KHN0cmluZykpIHJldHVybiB1bmNhbWVsaXplKHN0cmluZykudG9Mb3dlckNhc2UoKVxuICByZXR1cm4gc3RyaW5nLnRvTG93ZXJDYXNlKClcbn1cblxuLyoqXG4gKiBTZXBhcmF0b3Igc3BsaXR0ZXIuXG4gKi9cblxudmFyIHNlcGFyYXRvclNwbGl0dGVyID0gL1tcXFdfXSsoLnwkKS9nXG5cbi8qKlxuICogVW4tc2VwYXJhdGUgYSBgc3RyaW5nYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gdW5zZXBhcmF0ZShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHNlcGFyYXRvclNwbGl0dGVyLCBmdW5jdGlvbiAobSwgbmV4dCkge1xuICAgIHJldHVybiBuZXh0ID8gJyAnICsgbmV4dCA6ICcnXG4gIH0pXG59XG5cbi8qKlxuICogQ2FtZWxjYXNlIHNwbGl0dGVyLlxuICovXG5cbnZhciBjYW1lbFNwbGl0dGVyID0gLyguKShbQS1aXSspL2dcblxuLyoqXG4gKiBVbi1jYW1lbGNhc2UgYSBgc3RyaW5nYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gdW5jYW1lbGl6ZShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKGNhbWVsU3BsaXR0ZXIsIGZ1bmN0aW9uIChtLCBwcmV2aW91cywgdXBwZXJzKSB7XG4gICAgcmV0dXJuIHByZXZpb3VzICsgJyAnICsgdXBwZXJzLnRvTG93ZXJDYXNlKCkuc3BsaXQoJycpLmpvaW4oJyAnKVxuICB9KVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///130\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Autocomplete_AutocompleteSelect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * Load the Autocomplete Select.\n *\n * @since 3.20.0\n */\n\n\n // Set a reference to the WordLift\'s settings stored in the window instance.\n\nconst settings = window["wlSettings"] || {};\nlet autocompleteTimeout = null;\n\nconst autocomplete = (query, callback) => {\n  // Minimum 3 characters.\n  if (3 > query.length) {\n    callback(null, {\n      options: []\n    });\n    return;\n  } // Clear any existing query.\n\n\n  if (null !== autocompleteTimeout) clearTimeout(autocompleteTimeout); // Send our query.\n\n  autocompleteTimeout = setTimeout(() => wp.ajax.post("wl_autocomplete", {\n    query,\n    _wpnonce: settings["wl_autocomplete_nonce"],\n    exclude: settings["itemId"]\n  }).done(json => callback(null, {\n    options: json\n  })).fail(() => {\n    console.log("error");\n    callback(null, {\n      options: []\n    });\n  }), 1000);\n}; // ### Render the sameAs metabox field autocomplete select.\n\n\nwindow.addEventListener("load", () => {\n  const element = document.getElementById("wl-metabox-field-sameas"); // Check that the document element is there.\n\n  if (null === element) {\n    return;\n  }\n\n  react_dom__WEBPACK_IMPORTED_MODULE_0___default.a.render( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_components_Autocomplete_AutocompleteSelect__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], {\n    loadOptions: autocomplete,\n    name: "wl_metaboxes[entity_same_as][]",\n    placeholder: "",\n    filterOption: (option, filter) => true,\n    searchPromptText: settings.l10n["Type at least 3 characters to search..."],\n    loadingPlaceholder: settings.l10n["Please wait while we look for entities in the linked data cloud..."],\n    noResultsText: settings.l10n["No results found for your search."]\n  }), element);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9pbmRleC5hdXRvY29tcGxldGUtc2VsZWN0LmpzP2U5YmEiXSwibmFtZXMiOlsic2V0dGluZ3MiLCJ3aW5kb3ciLCJhdXRvY29tcGxldGVUaW1lb3V0IiwiYXV0b2NvbXBsZXRlIiwicXVlcnkiLCJjYWxsYmFjayIsImxlbmd0aCIsIm9wdGlvbnMiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0Iiwid3AiLCJhamF4IiwicG9zdCIsIl93cG5vbmNlIiwiZXhjbHVkZSIsImRvbmUiLCJqc29uIiwiZmFpbCIsImNvbnNvbGUiLCJsb2ciLCJhZGRFdmVudExpc3RlbmVyIiwiZWxlbWVudCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJSZWFjdERPTSIsInJlbmRlciIsIm9wdGlvbiIsImZpbHRlciIsImwxMG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7OztBQUtBO0FBQ0E7Q0FHQTs7QUFDQSxNQUFNQSxRQUFRLEdBQUdDLE1BQU0sQ0FBQyxZQUFELENBQU4sSUFBd0IsRUFBekM7QUFFQSxJQUFJQyxtQkFBbUIsR0FBRyxJQUExQjs7QUFFQSxNQUFNQyxZQUFZLEdBQUcsQ0FBQ0MsS0FBRCxFQUFRQyxRQUFSLEtBQXFCO0FBQ3hDO0FBQ0EsTUFBSSxJQUFJRCxLQUFLLENBQUNFLE1BQWQsRUFBc0I7QUFDcEJELFlBQVEsQ0FBQyxJQUFELEVBQU87QUFBRUUsYUFBTyxFQUFFO0FBQVgsS0FBUCxDQUFSO0FBQ0E7QUFDRCxHQUx1QyxDQU94Qzs7O0FBQ0EsTUFBSSxTQUFTTCxtQkFBYixFQUFrQ00sWUFBWSxDQUFDTixtQkFBRCxDQUFaLENBUk0sQ0FVeEM7O0FBQ0FBLHFCQUFtQixHQUFHTyxVQUFVLENBQzlCLE1BQ0VDLEVBQUUsQ0FBQ0MsSUFBSCxDQUNHQyxJQURILENBQ1EsaUJBRFIsRUFDMkI7QUFDdkJSLFNBRHVCO0FBRXZCUyxZQUFRLEVBQUViLFFBQVEsQ0FBQyx1QkFBRCxDQUZLO0FBR3ZCYyxXQUFPLEVBQUVkLFFBQVEsQ0FBQyxRQUFEO0FBSE0sR0FEM0IsRUFNR2UsSUFOSCxDQU1RQyxJQUFJLElBQUlYLFFBQVEsQ0FBQyxJQUFELEVBQU87QUFBRUUsV0FBTyxFQUFFUztBQUFYLEdBQVAsQ0FOeEIsRUFPR0MsSUFQSCxDQU9RLE1BQU07QUFDVkMsV0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWjtBQUNBZCxZQUFRLENBQUMsSUFBRCxFQUFPO0FBQUVFLGFBQU8sRUFBRTtBQUFYLEtBQVAsQ0FBUjtBQUNELEdBVkgsQ0FGNEIsRUFhOUIsSUFiOEIsQ0FBaEM7QUFlRCxDQTFCRCxDLENBNEJBOzs7QUFDQU4sTUFBTSxDQUFDbUIsZ0JBQVAsQ0FBd0IsTUFBeEIsRUFBZ0MsTUFBTTtBQUNwQyxRQUFNQyxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3Qix5QkFBeEIsQ0FBaEIsQ0FEb0MsQ0FHcEM7O0FBQ0EsTUFBSSxTQUFTRixPQUFiLEVBQXNCO0FBQ3BCO0FBQ0Q7O0FBRURHLGtEQUFRLENBQUNDLE1BQVQsZUFDRSwyREFBQywyRkFBRDtBQUNFLGVBQVcsRUFBRXRCLFlBRGY7QUFFRSxRQUFJLEVBQUMsZ0NBRlA7QUFHRSxlQUFXLEVBQUMsRUFIZDtBQUlFLGdCQUFZLEVBQUUsQ0FBQ3VCLE1BQUQsRUFBU0MsTUFBVCxLQUFvQixJQUpwQztBQUtFLG9CQUFnQixFQUNkM0IsUUFBUSxDQUFDNEIsSUFBVCxDQUFjLHlDQUFkLENBTko7QUFRRSxzQkFBa0IsRUFDaEI1QixRQUFRLENBQUM0QixJQUFULENBQ0Usb0VBREYsQ0FUSjtBQWFFLGlCQUFhLEVBQUU1QixRQUFRLENBQUM0QixJQUFULENBQWMsbUNBQWQ7QUFiakIsSUFERixFQWdCRVAsT0FoQkY7QUFrQkQsQ0ExQkQiLCJmaWxlIjoiMTMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMb2FkIHRoZSBBdXRvY29tcGxldGUgU2VsZWN0LlxuICpcbiAqIEBzaW5jZSAzLjIwLjBcbiAqL1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcbmltcG9ydCBBdXRvY29tcGxldGVTZWxlY3QgZnJvbSBcIi4vY29tcG9uZW50cy9BdXRvY29tcGxldGUvQXV0b2NvbXBsZXRlU2VsZWN0XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbi8vIFNldCBhIHJlZmVyZW5jZSB0byB0aGUgV29yZExpZnQncyBzZXR0aW5ncyBzdG9yZWQgaW4gdGhlIHdpbmRvdyBpbnN0YW5jZS5cbmNvbnN0IHNldHRpbmdzID0gd2luZG93W1wid2xTZXR0aW5nc1wiXSB8fCB7fTtcblxubGV0IGF1dG9jb21wbGV0ZVRpbWVvdXQgPSBudWxsO1xuXG5jb25zdCBhdXRvY29tcGxldGUgPSAocXVlcnksIGNhbGxiYWNrKSA9PiB7XG4gIC8vIE1pbmltdW0gMyBjaGFyYWN0ZXJzLlxuICBpZiAoMyA+IHF1ZXJ5Lmxlbmd0aCkge1xuICAgIGNhbGxiYWNrKG51bGwsIHsgb3B0aW9uczogW10gfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gQ2xlYXIgYW55IGV4aXN0aW5nIHF1ZXJ5LlxuICBpZiAobnVsbCAhPT0gYXV0b2NvbXBsZXRlVGltZW91dCkgY2xlYXJUaW1lb3V0KGF1dG9jb21wbGV0ZVRpbWVvdXQpO1xuXG4gIC8vIFNlbmQgb3VyIHF1ZXJ5LlxuICBhdXRvY29tcGxldGVUaW1lb3V0ID0gc2V0VGltZW91dChcbiAgICAoKSA9PlxuICAgICAgd3AuYWpheFxuICAgICAgICAucG9zdChcIndsX2F1dG9jb21wbGV0ZVwiLCB7XG4gICAgICAgICAgcXVlcnksXG4gICAgICAgICAgX3dwbm9uY2U6IHNldHRpbmdzW1wid2xfYXV0b2NvbXBsZXRlX25vbmNlXCJdLFxuICAgICAgICAgIGV4Y2x1ZGU6IHNldHRpbmdzW1wiaXRlbUlkXCJdXG4gICAgICAgIH0pXG4gICAgICAgIC5kb25lKGpzb24gPT4gY2FsbGJhY2sobnVsbCwgeyBvcHRpb25zOiBqc29uIH0pKVxuICAgICAgICAuZmFpbCgoKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJlcnJvclwiKTtcbiAgICAgICAgICBjYWxsYmFjayhudWxsLCB7IG9wdGlvbnM6IFtdIH0pO1xuICAgICAgICB9KSxcbiAgICAxMDAwXG4gICk7XG59O1xuXG4vLyAjIyMgUmVuZGVyIHRoZSBzYW1lQXMgbWV0YWJveCBmaWVsZCBhdXRvY29tcGxldGUgc2VsZWN0Llxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHtcbiAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2wtbWV0YWJveC1maWVsZC1zYW1lYXNcIik7XG5cbiAgLy8gQ2hlY2sgdGhhdCB0aGUgZG9jdW1lbnQgZWxlbWVudCBpcyB0aGVyZS5cbiAgaWYgKG51bGwgPT09IGVsZW1lbnQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBSZWFjdERPTS5yZW5kZXIoXG4gICAgPEF1dG9jb21wbGV0ZVNlbGVjdFxuICAgICAgbG9hZE9wdGlvbnM9e2F1dG9jb21wbGV0ZX1cbiAgICAgIG5hbWU9XCJ3bF9tZXRhYm94ZXNbZW50aXR5X3NhbWVfYXNdW11cIlxuICAgICAgcGxhY2Vob2xkZXI9XCJcIlxuICAgICAgZmlsdGVyT3B0aW9uPXsob3B0aW9uLCBmaWx0ZXIpID0+IHRydWV9XG4gICAgICBzZWFyY2hQcm9tcHRUZXh0PXtcbiAgICAgICAgc2V0dGluZ3MubDEwbltcIlR5cGUgYXQgbGVhc3QgMyBjaGFyYWN0ZXJzIHRvIHNlYXJjaC4uLlwiXVxuICAgICAgfVxuICAgICAgbG9hZGluZ1BsYWNlaG9sZGVyPXtcbiAgICAgICAgc2V0dGluZ3MubDEwbltcbiAgICAgICAgICBcIlBsZWFzZSB3YWl0IHdoaWxlIHdlIGxvb2sgZm9yIGVudGl0aWVzIGluIHRoZSBsaW5rZWQgZGF0YSBjbG91ZC4uLlwiXG4gICAgICAgIF1cbiAgICAgIH1cbiAgICAgIG5vUmVzdWx0c1RleHQ9e3NldHRpbmdzLmwxMG5bXCJObyByZXN1bHRzIGZvdW5kIGZvciB5b3VyIHNlYXJjaC5cIl19XG4gICAgLz4sXG4gICAgZWxlbWVudFxuICApO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///131\n')},,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);\n/*global wp*/\n\n/**\n * Events: Annotation Event.\n *\n * A redux-thunk action which hooks to Backbone events and dispatches redux\n * actions. Note the `setTimeout` on the dispatch to avoid errors which might\n * arise if we\'re inside a reducer call.\n *\n * @since 3.11.0\n */\n\n/**\n * Internal dependencies\n */\n\n/**\n * Define the `AnnotationEvent` event.\n *\n * @since 3.11.0\n * @returns {Function} The redux-thunk function.\n */\n\nfunction AnnotationEvent() {\n  return function (dispatch) {\n    // Hook other events.\n    wp.wordlift.on(\'annotation\', function (annotation) {\n      // Asynchronously call the dispatch. We need this because we\n      // might be inside a reducer call.\n      setTimeout(function () {\n        dispatch(Object(_actions__WEBPACK_IMPORTED_MODULE_0__[/* setCurrentAnnotation */ "c"])(annotation));\n      }, 0);\n    });\n  };\n} // Finally export the function.\n\n\n/* harmony default export */ __webpack_exports__["a"] = (AnnotationEvent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9hbmd1bGFyL0Fubm90YXRpb25FdmVudC5qcz80YjY4Il0sIm5hbWVzIjpbIkFubm90YXRpb25FdmVudCIsImRpc3BhdGNoIiwid3AiLCJ3b3JkbGlmdCIsIm9uIiwiYW5ub3RhdGlvbiIsInNldFRpbWVvdXQiLCJzZXRDdXJyZW50QW5ub3RhdGlvbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7QUFDQTs7Ozs7Ozs7OztBQVVBOzs7QUFHQTtBQUVBOzs7Ozs7O0FBTUEsU0FBU0EsZUFBVCxHQUE0QjtBQUMxQixTQUFPLFVBQVVDLFFBQVYsRUFBb0I7QUFDekI7QUFDQUMsTUFBRSxDQUFDQyxRQUFILENBQVlDLEVBQVosQ0FBZSxZQUFmLEVBQTZCLFVBQVVDLFVBQVYsRUFBc0I7QUFDakQ7QUFDQTtBQUNBQyxnQkFBVSxDQUFDLFlBQVk7QUFDckJMLGdCQUFRLENBQUNNLDZFQUFvQixDQUFDRixVQUFELENBQXJCLENBQVI7QUFDRCxPQUZTLEVBRVAsQ0FGTyxDQUFWO0FBR0QsS0FORDtBQU9ELEdBVEQ7QUFVRCxDLENBRUQ7OztBQUNlTCx3RUFBZiIsImZpbGUiOiIxNDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmdsb2JhbCB3cCovXG4vKipcbiAqIEV2ZW50czogQW5ub3RhdGlvbiBFdmVudC5cbiAqXG4gKiBBIHJlZHV4LXRodW5rIGFjdGlvbiB3aGljaCBob29rcyB0byBCYWNrYm9uZSBldmVudHMgYW5kIGRpc3BhdGNoZXMgcmVkdXhcbiAqIGFjdGlvbnMuIE5vdGUgdGhlIGBzZXRUaW1lb3V0YCBvbiB0aGUgZGlzcGF0Y2ggdG8gYXZvaWQgZXJyb3JzIHdoaWNoIG1pZ2h0XG4gKiBhcmlzZSBpZiB3ZSdyZSBpbnNpZGUgYSByZWR1Y2VyIGNhbGwuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICovXG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHNldEN1cnJlbnRBbm5vdGF0aW9uIH0gZnJvbSAnLi4vYWN0aW9ucydcblxuLyoqXG4gKiBEZWZpbmUgdGhlIGBBbm5vdGF0aW9uRXZlbnRgIGV2ZW50LlxuICpcbiAqIEBzaW5jZSAzLjExLjBcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gVGhlIHJlZHV4LXRodW5rIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBBbm5vdGF0aW9uRXZlbnQgKCkge1xuICByZXR1cm4gZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgLy8gSG9vayBvdGhlciBldmVudHMuXG4gICAgd3Aud29yZGxpZnQub24oJ2Fubm90YXRpb24nLCBmdW5jdGlvbiAoYW5ub3RhdGlvbikge1xuICAgICAgLy8gQXN5bmNocm9ub3VzbHkgY2FsbCB0aGUgZGlzcGF0Y2guIFdlIG5lZWQgdGhpcyBiZWNhdXNlIHdlXG4gICAgICAvLyBtaWdodCBiZSBpbnNpZGUgYSByZWR1Y2VyIGNhbGwuXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGlzcGF0Y2goc2V0Q3VycmVudEFubm90YXRpb24oYW5ub3RhdGlvbikpXG4gICAgICB9LCAwKVxuICAgIH0pXG4gIH1cbn1cblxuLy8gRmluYWxseSBleHBvcnQgdGhlIGZ1bmN0aW9uLlxuZXhwb3J0IGRlZmF1bHQgQW5ub3RhdGlvbkV2ZW50XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///140\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);\n/*global wp*/\n\n/**\n * Events: Receive Analysis Results Event.\n *\n * A redux-thunk action which hooks to Backbone events and dispatches redux\n * actions. Note the `setTimeout` on the dispatch to avoid errors which might\n * arise if we\'re inside a reducer call.\n *\n * @since 3.11.0\n */\n\n/**\n * Internal dependencies\n */\n\n/**\n * Define the `ReceiveAnalysisResultsEvent` event.\n *\n * @since 3.11.0\n * @returns {Function} The redux-thunk function.\n */\n\nfunction ReceiveAnalysisResultsEvent() {\n  return function (dispatch) {\n    // Hook other events.\n    wp.wordlift.on(\'analysis.result\', function (results) {\n      // Asynchronously call the dispatch. We need this because we\n      // might be inside a reducer call.\n      setTimeout(function () {\n        dispatch(Object(_actions__WEBPACK_IMPORTED_MODULE_0__[/* receiveAnalysisResults */ "b"])(results));\n      }, 0);\n    });\n  };\n} // Finally export the function.\n\n\n/* harmony default export */ __webpack_exports__["a"] = (ReceiveAnalysisResultsEvent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9hbmd1bGFyL1JlY2VpdmVBbmFseXNpc1Jlc3VsdHNFdmVudC5qcz83MTIzIl0sIm5hbWVzIjpbIlJlY2VpdmVBbmFseXNpc1Jlc3VsdHNFdmVudCIsImRpc3BhdGNoIiwid3AiLCJ3b3JkbGlmdCIsIm9uIiwicmVzdWx0cyIsInNldFRpbWVvdXQiLCJyZWNlaXZlQW5hbHlzaXNSZXN1bHRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBVUE7OztBQUdBO0FBRUE7Ozs7Ozs7QUFNQSxTQUFTQSwyQkFBVCxHQUF3QztBQUN0QyxTQUFPLFVBQVVDLFFBQVYsRUFBb0I7QUFDekI7QUFDQUMsTUFBRSxDQUFDQyxRQUFILENBQVlDLEVBQVosQ0FBZSxpQkFBZixFQUFrQyxVQUFVQyxPQUFWLEVBQW1CO0FBQ25EO0FBQ0E7QUFDQUMsZ0JBQVUsQ0FBQyxZQUFZO0FBQ3JCTCxnQkFBUSxDQUFDTSwrRUFBc0IsQ0FBQ0YsT0FBRCxDQUF2QixDQUFSO0FBQ0QsT0FGUyxFQUVQLENBRk8sQ0FBVjtBQUdELEtBTkQ7QUFPRCxHQVREO0FBVUQsQyxDQUVEOzs7QUFDZUwsb0ZBQWYiLCJmaWxlIjoiMTQxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgd3AqL1xuLyoqXG4gKiBFdmVudHM6IFJlY2VpdmUgQW5hbHlzaXMgUmVzdWx0cyBFdmVudC5cbiAqXG4gKiBBIHJlZHV4LXRodW5rIGFjdGlvbiB3aGljaCBob29rcyB0byBCYWNrYm9uZSBldmVudHMgYW5kIGRpc3BhdGNoZXMgcmVkdXhcbiAqIGFjdGlvbnMuIE5vdGUgdGhlIGBzZXRUaW1lb3V0YCBvbiB0aGUgZGlzcGF0Y2ggdG8gYXZvaWQgZXJyb3JzIHdoaWNoIG1pZ2h0XG4gKiBhcmlzZSBpZiB3ZSdyZSBpbnNpZGUgYSByZWR1Y2VyIGNhbGwuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICovXG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHJlY2VpdmVBbmFseXNpc1Jlc3VsdHMgfSBmcm9tICcuLi9hY3Rpb25zJ1xuXG4vKipcbiAqIERlZmluZSB0aGUgYFJlY2VpdmVBbmFseXNpc1Jlc3VsdHNFdmVudGAgZXZlbnQuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICogQHJldHVybnMge0Z1bmN0aW9ufSBUaGUgcmVkdXgtdGh1bmsgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIFJlY2VpdmVBbmFseXNpc1Jlc3VsdHNFdmVudCAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICAvLyBIb29rIG90aGVyIGV2ZW50cy5cbiAgICB3cC53b3JkbGlmdC5vbignYW5hbHlzaXMucmVzdWx0JywgZnVuY3Rpb24gKHJlc3VsdHMpIHtcbiAgICAgIC8vIEFzeW5jaHJvbm91c2x5IGNhbGwgdGhlIGRpc3BhdGNoLiBXZSBuZWVkIHRoaXMgYmVjYXVzZSB3ZVxuICAgICAgLy8gbWlnaHQgYmUgaW5zaWRlIGEgcmVkdWNlciBjYWxsLlxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRpc3BhdGNoKHJlY2VpdmVBbmFseXNpc1Jlc3VsdHMocmVzdWx0cykpXG4gICAgICB9LCAwKVxuICAgIH0pXG4gIH1cbn1cblxuLy8gRmluYWxseSBleHBvcnQgdGhlIGZ1bmN0aW9uLlxuZXhwb3J0IGRlZmF1bHQgUmVjZWl2ZUFuYWx5c2lzUmVzdWx0c0V2ZW50XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///141\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);\n/*global wp*/\n\n/**\n * Events: Update Occurrences for Entity.\n *\n * A redux-thunk action which hooks to Backbone events and dispatches redux\n * actions. Note the `setTimeout` on the dispatch to avoid errors which might\n * arise if we\'re inside a reducer call.\n *\n * @since 3.11.0\n */\n\n/**\n * Internal dependencies\n */\n\n/**\n * Define the `UpdateOccurrencesForEntityEvent` event.\n *\n * @since 3.11.0\n * @returns {Function} The redux-thunk function.\n */\n\nfunction UpdateOccurrencesForEntityEvent() {\n  return function (dispatch) {\n    // Hook other events.\n    wp.wordlift.on(\'updateOccurrencesForEntity\', function ({\n      entityId,\n      occurrences\n    }) {\n      // Asynchronously call the dispatch. We need this because we\n      // might be inside a reducer call.\n      setTimeout(function () {\n        dispatch(Object(_actions__WEBPACK_IMPORTED_MODULE_0__[/* updateOccurrencesForEntity */ "i"])(entityId, occurrences));\n      }, 0);\n    });\n  };\n} // Finally export the function.\n\n\n/* harmony default export */ __webpack_exports__["a"] = (UpdateOccurrencesForEntityEvent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9hbmd1bGFyL1VwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5RXZlbnQuanM/OTE2NiJdLCJuYW1lcyI6WyJVcGRhdGVPY2N1cnJlbmNlc0ZvckVudGl0eUV2ZW50IiwiZGlzcGF0Y2giLCJ3cCIsIndvcmRsaWZ0Iiwib24iLCJlbnRpdHlJZCIsIm9jY3VycmVuY2VzIiwic2V0VGltZW91dCIsInVwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBVUE7OztBQUdBO0FBRUE7Ozs7Ozs7QUFNQSxTQUFTQSwrQkFBVCxHQUE0QztBQUMxQyxTQUFPLFVBQVVDLFFBQVYsRUFBb0I7QUFDekI7QUFDQUMsTUFBRSxDQUFDQyxRQUFILENBQVlDLEVBQVosQ0FBZSw0QkFBZixFQUNFLFVBQVU7QUFBQ0MsY0FBRDtBQUFXQztBQUFYLEtBQVYsRUFBbUM7QUFDakM7QUFDQTtBQUNBQyxnQkFBVSxDQUFDLFlBQVk7QUFDckJOLGdCQUFRLENBQUNPLG1GQUEwQixDQUFDSCxRQUFELEVBQVdDLFdBQVgsQ0FBM0IsQ0FBUjtBQUNELE9BRlMsRUFFUCxDQUZPLENBQVY7QUFHRCxLQVBIO0FBUUQsR0FWRDtBQVdELEMsQ0FFRDs7O0FBQ2VOLHdGQUFmIiwiZmlsZSI6IjE0Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsIHdwKi9cbi8qKlxuICogRXZlbnRzOiBVcGRhdGUgT2NjdXJyZW5jZXMgZm9yIEVudGl0eS5cbiAqXG4gKiBBIHJlZHV4LXRodW5rIGFjdGlvbiB3aGljaCBob29rcyB0byBCYWNrYm9uZSBldmVudHMgYW5kIGRpc3BhdGNoZXMgcmVkdXhcbiAqIGFjdGlvbnMuIE5vdGUgdGhlIGBzZXRUaW1lb3V0YCBvbiB0aGUgZGlzcGF0Y2ggdG8gYXZvaWQgZXJyb3JzIHdoaWNoIG1pZ2h0XG4gKiBhcmlzZSBpZiB3ZSdyZSBpbnNpZGUgYSByZWR1Y2VyIGNhbGwuXG4gKlxuICogQHNpbmNlIDMuMTEuMFxuICovXG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHVwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5IH0gZnJvbSAnLi4vYWN0aW9ucydcblxuLyoqXG4gKiBEZWZpbmUgdGhlIGBVcGRhdGVPY2N1cnJlbmNlc0ZvckVudGl0eUV2ZW50YCBldmVudC5cbiAqXG4gKiBAc2luY2UgMy4xMS4wXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFRoZSByZWR1eC10aHVuayBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gVXBkYXRlT2NjdXJyZW5jZXNGb3JFbnRpdHlFdmVudCAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICAvLyBIb29rIG90aGVyIGV2ZW50cy5cbiAgICB3cC53b3JkbGlmdC5vbigndXBkYXRlT2NjdXJyZW5jZXNGb3JFbnRpdHknLFxuICAgICAgZnVuY3Rpb24gKHtlbnRpdHlJZCwgb2NjdXJyZW5jZXN9KSB7XG4gICAgICAgIC8vIEFzeW5jaHJvbm91c2x5IGNhbGwgdGhlIGRpc3BhdGNoLiBXZSBuZWVkIHRoaXMgYmVjYXVzZSB3ZVxuICAgICAgICAvLyBtaWdodCBiZSBpbnNpZGUgYSByZWR1Y2VyIGNhbGwuXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGRpc3BhdGNoKHVwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5KGVudGl0eUlkLCBvY2N1cnJlbmNlcykpXG4gICAgICAgIH0sIDApXG4gICAgICB9KVxuICB9XG59XG5cbi8vIEZpbmFsbHkgZXhwb3J0IHRoZSBmdW5jdGlvbi5cbmV4cG9ydCBkZWZhdWx0IFVwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5RXZlbnRcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///142\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(34);\n/*global wp*/\n\n/**\n * Events: Editor Selection Changed Event.\n *\n * A redux-thunk action which hooks to Backbone events and dispatches redux\n * actions. Note the `setTimeout` on the dispatch to avoid errors which might\n * arise if we\'re inside a reducer call.\n *\n * @since 3.18.4\n */\n\n/**\n * Internal dependencies\n */\n\n/**\n * Define the `EditorSelectionChangedEvent` event.\n *\n * @since 3.18.4\n * @returns {Function} The redux-thunk function.\n */\n\nfunction EditorSelectionChangedEvent() {\n  return function (dispatch) {\n    // Hook other events.\n    wp.wordlift.on("editorSelectionChanged", function (args) {\n      // Asynchronously call the dispatch. We need this because we\n      // might be inside a reducer call.\n      setTimeout(function () {\n        dispatch(Object(_actions__WEBPACK_IMPORTED_MODULE_0__[/* editorSelectionChanged */ "a"])(args));\n      }, 0);\n    });\n  };\n} // Finally export the function.\n\n\n/* harmony default export */ __webpack_exports__["a"] = (EditorSelectionChangedEvent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9hbmd1bGFyL0VkaXRvclNlbGVjdGlvbkNoYW5nZWRFdmVudC5qcz9mYzliIl0sIm5hbWVzIjpbIkVkaXRvclNlbGVjdGlvbkNoYW5nZWRFdmVudCIsImRpc3BhdGNoIiwid3AiLCJ3b3JkbGlmdCIsIm9uIiwiYXJncyIsInNldFRpbWVvdXQiLCJlZGl0b3JTZWxlY3Rpb25DaGFuZ2VkIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBVUE7OztBQUdBO0FBRUE7Ozs7Ozs7QUFNQSxTQUFTQSwyQkFBVCxHQUF1QztBQUNyQyxTQUFPLFVBQVVDLFFBQVYsRUFBb0I7QUFDekI7QUFDQUMsTUFBRSxDQUFDQyxRQUFILENBQVlDLEVBQVosQ0FBZSx3QkFBZixFQUF5QyxVQUFVQyxJQUFWLEVBQWdCO0FBQ3ZEO0FBQ0E7QUFDQUMsZ0JBQVUsQ0FBQyxZQUFZO0FBQ3JCTCxnQkFBUSxDQUFDTSwrRUFBc0IsQ0FBQ0YsSUFBRCxDQUF2QixDQUFSO0FBQ0QsT0FGUyxFQUVQLENBRk8sQ0FBVjtBQUdELEtBTkQ7QUFPRCxHQVREO0FBVUQsQyxDQUVEOzs7QUFDZUwsb0ZBQWYiLCJmaWxlIjoiMTQzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgd3AqL1xuLyoqXG4gKiBFdmVudHM6IEVkaXRvciBTZWxlY3Rpb24gQ2hhbmdlZCBFdmVudC5cbiAqXG4gKiBBIHJlZHV4LXRodW5rIGFjdGlvbiB3aGljaCBob29rcyB0byBCYWNrYm9uZSBldmVudHMgYW5kIGRpc3BhdGNoZXMgcmVkdXhcbiAqIGFjdGlvbnMuIE5vdGUgdGhlIGBzZXRUaW1lb3V0YCBvbiB0aGUgZGlzcGF0Y2ggdG8gYXZvaWQgZXJyb3JzIHdoaWNoIG1pZ2h0XG4gKiBhcmlzZSBpZiB3ZSdyZSBpbnNpZGUgYSByZWR1Y2VyIGNhbGwuXG4gKlxuICogQHNpbmNlIDMuMTguNFxuICovXG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGVkaXRvclNlbGVjdGlvbkNoYW5nZWQgfSBmcm9tIFwiLi4vYWN0aW9uc1wiO1xuXG4vKipcbiAqIERlZmluZSB0aGUgYEVkaXRvclNlbGVjdGlvbkNoYW5nZWRFdmVudGAgZXZlbnQuXG4gKlxuICogQHNpbmNlIDMuMTguNFxuICogQHJldHVybnMge0Z1bmN0aW9ufSBUaGUgcmVkdXgtdGh1bmsgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIEVkaXRvclNlbGVjdGlvbkNoYW5nZWRFdmVudCgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIC8vIEhvb2sgb3RoZXIgZXZlbnRzLlxuICAgIHdwLndvcmRsaWZ0Lm9uKFwiZWRpdG9yU2VsZWN0aW9uQ2hhbmdlZFwiLCBmdW5jdGlvbiAoYXJncykge1xuICAgICAgLy8gQXN5bmNocm9ub3VzbHkgY2FsbCB0aGUgZGlzcGF0Y2guIFdlIG5lZWQgdGhpcyBiZWNhdXNlIHdlXG4gICAgICAvLyBtaWdodCBiZSBpbnNpZGUgYSByZWR1Y2VyIGNhbGwuXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGlzcGF0Y2goZWRpdG9yU2VsZWN0aW9uQ2hhbmdlZChhcmdzKSk7XG4gICAgICB9LCAwKTtcbiAgICB9KTtcbiAgfTtcbn1cblxuLy8gRmluYWxseSBleHBvcnQgdGhlIGZ1bmN0aW9uLlxuZXhwb3J0IGRlZmF1bHQgRWRpdG9yU2VsZWN0aW9uQ2hhbmdlZEV2ZW50O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///143\n')},,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);\n/* harmony import */ var _stores__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99);\n/* harmony import */ var _components_App__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(105);\n/* harmony import */ var _angular_AnnotationEvent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(140);\n/* harmony import */ var _angular_ReceiveAnalysisResultsEvent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(141);\n/* harmony import */ var _angular_UpdateOccurrencesForEntityEvent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(142);\n/* harmony import */ var _angular_EditorSelectionChangedEvent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(143);\n/**\n * Load the Classification Box.\n *\n * @since 3.20.0\n */\n\n/**\n * External dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n // Start-up the application when the `wlEntityList` Angular directive is\n// loaded.\n\nconst wp = global["wp"];\nwp.wordlift.on("wlEntityList.loaded", function () {\n  // Render the `React` tree at the `wl-entity-list` element.\n  react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(\n  /*#__PURE__*/\n  // Following is `react-redux` syntax for binding the `store` with the\n  // container down to the components.\n  react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_redux__WEBPACK_IMPORTED_MODULE_2__[/* Provider */ "a"], {\n    store: _stores__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"]\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_App__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], null)), document.getElementById("wl-entity-list")); // Listen for annotation selections in TinyMCE and dispatch the\n  // `AnnotationEvent` action.\n\n  _stores__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"].dispatch(Object(_angular_AnnotationEvent__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])()); // Listen for analysis results and dispatch the `receiveAnalysisResults`\n  // action when new results are received.\n\n  _stores__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"].dispatch(Object(_angular_ReceiveAnalysisResultsEvent__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"])()); // Dispatch an redux-thunk action, which hooks to the legacy\n  // `updateOccurrencesForEntity` event and dispatches the related action in\n  // Redux.\n\n  _stores__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"].dispatch(Object(_angular_UpdateOccurrencesForEntityEvent__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"])()); // Dispatch the `editorSelectionChanged` action with the new editor selection.\n\n  _stores__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"].dispatch(Object(_angular_EditorSelectionChangedEvent__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"])());\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(24)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRpdC9pbmRleC5jbGFzc2lmaWNhdGlvbi1ib3guanM/N2FhOSJdLCJuYW1lcyI6WyJ3cCIsImdsb2JhbCIsIndvcmRsaWZ0Iiwib24iLCJSZWFjdERPTSIsInJlbmRlciIsInN0b3JlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImRpc3BhdGNoIiwiQW5ub3RhdGlvbkV2ZW50IiwiUmVjZWl2ZUFuYWx5c2lzUmVzdWx0c0V2ZW50IiwiVXBkYXRlT2NjdXJyZW5jZXNGb3JFbnRpdHlFdmVudCIsIkVkaXRvclNlbGVjdGlvbkNoYW5nZWRFdmVudCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7QUFNQTs7O0FBR0E7QUFDQTtBQUNBO0FBRUE7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0NBR0E7QUFDQTs7QUFDQSxNQUFNQSxFQUFFLEdBQUdDLE1BQU0sQ0FBQyxJQUFELENBQWpCO0FBQ0FELEVBQUUsQ0FBQ0UsUUFBSCxDQUFZQyxFQUFaLENBQWUscUJBQWYsRUFBc0MsWUFBVztBQUUvQztBQUNBQyxrREFBUSxDQUFDQyxNQUFUO0FBQUE7QUFDRTtBQUNBO0FBQ0EsNkRBQUMsNERBQUQ7QUFBVSxTQUFLLEVBQUVDLHVEQUFLQTtBQUF0QixrQkFDRSwyREFBQywrREFBRCxPQURGLENBSEYsRUFNRUMsUUFBUSxDQUFDQyxjQUFULENBQXdCLGdCQUF4QixDQU5GLEVBSCtDLENBWS9DO0FBQ0E7O0FBQ0FGLHlEQUFLLENBQUNHLFFBQU4sQ0FBZUMsZ0ZBQWUsRUFBOUIsRUFkK0MsQ0FnQi9DO0FBQ0E7O0FBQ0FKLHlEQUFLLENBQUNHLFFBQU4sQ0FBZUUsNEZBQTJCLEVBQTFDLEVBbEIrQyxDQW9CL0M7QUFDQTtBQUNBOztBQUNBTCx5REFBSyxDQUFDRyxRQUFOLENBQWVHLGdHQUErQixFQUE5QyxFQXZCK0MsQ0F5Qi9DOztBQUNBTix5REFBSyxDQUFDRyxRQUFOLENBQWVJLDRGQUEyQixFQUExQztBQUNELENBM0JELEUiLCJmaWxlIjoiMTcwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMb2FkIHRoZSBDbGFzc2lmaWNhdGlvbiBCb3guXG4gKlxuICogQHNpbmNlIDMuMjAuMFxuICovXG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgc3RvcmUgZnJvbSBcIi4vc3RvcmVzXCI7XG5pbXBvcnQgQXBwIGZyb20gXCIuL2NvbXBvbmVudHMvQXBwXCI7XG5pbXBvcnQgQW5ub3RhdGlvbkV2ZW50IGZyb20gXCIuL2FuZ3VsYXIvQW5ub3RhdGlvbkV2ZW50XCI7XG5pbXBvcnQgUmVjZWl2ZUFuYWx5c2lzUmVzdWx0c0V2ZW50IGZyb20gXCIuL2FuZ3VsYXIvUmVjZWl2ZUFuYWx5c2lzUmVzdWx0c0V2ZW50XCI7XG5pbXBvcnQgVXBkYXRlT2NjdXJyZW5jZXNGb3JFbnRpdHlFdmVudCBmcm9tIFwiLi9hbmd1bGFyL1VwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5RXZlbnRcIjtcbmltcG9ydCBFZGl0b3JTZWxlY3Rpb25DaGFuZ2VkRXZlbnQgZnJvbSBcIi4vYW5ndWxhci9FZGl0b3JTZWxlY3Rpb25DaGFuZ2VkRXZlbnRcIjtcblxuLy8gU3RhcnQtdXAgdGhlIGFwcGxpY2F0aW9uIHdoZW4gdGhlIGB3bEVudGl0eUxpc3RgIEFuZ3VsYXIgZGlyZWN0aXZlIGlzXG4vLyBsb2FkZWQuXG5jb25zdCB3cCA9IGdsb2JhbFtcIndwXCJdO1xud3Aud29yZGxpZnQub24oXCJ3bEVudGl0eUxpc3QubG9hZGVkXCIsIGZ1bmN0aW9uKCkge1xuXG4gIC8vIFJlbmRlciB0aGUgYFJlYWN0YCB0cmVlIGF0IHRoZSBgd2wtZW50aXR5LWxpc3RgIGVsZW1lbnQuXG4gIFJlYWN0RE9NLnJlbmRlcihcbiAgICAvLyBGb2xsb3dpbmcgaXMgYHJlYWN0LXJlZHV4YCBzeW50YXggZm9yIGJpbmRpbmcgdGhlIGBzdG9yZWAgd2l0aCB0aGVcbiAgICAvLyBjb250YWluZXIgZG93biB0byB0aGUgY29tcG9uZW50cy5cbiAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cbiAgICAgIDxBcHAgLz5cbiAgICA8L1Byb3ZpZGVyPixcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndsLWVudGl0eS1saXN0XCIpXG4gICk7XG5cbiAgLy8gTGlzdGVuIGZvciBhbm5vdGF0aW9uIHNlbGVjdGlvbnMgaW4gVGlueU1DRSBhbmQgZGlzcGF0Y2ggdGhlXG4gIC8vIGBBbm5vdGF0aW9uRXZlbnRgIGFjdGlvbi5cbiAgc3RvcmUuZGlzcGF0Y2goQW5ub3RhdGlvbkV2ZW50KCkpO1xuXG4gIC8vIExpc3RlbiBmb3IgYW5hbHlzaXMgcmVzdWx0cyBhbmQgZGlzcGF0Y2ggdGhlIGByZWNlaXZlQW5hbHlzaXNSZXN1bHRzYFxuICAvLyBhY3Rpb24gd2hlbiBuZXcgcmVzdWx0cyBhcmUgcmVjZWl2ZWQuXG4gIHN0b3JlLmRpc3BhdGNoKFJlY2VpdmVBbmFseXNpc1Jlc3VsdHNFdmVudCgpKTtcblxuICAvLyBEaXNwYXRjaCBhbiByZWR1eC10aHVuayBhY3Rpb24sIHdoaWNoIGhvb2tzIHRvIHRoZSBsZWdhY3lcbiAgLy8gYHVwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5YCBldmVudCBhbmQgZGlzcGF0Y2hlcyB0aGUgcmVsYXRlZCBhY3Rpb24gaW5cbiAgLy8gUmVkdXguXG4gIHN0b3JlLmRpc3BhdGNoKFVwZGF0ZU9jY3VycmVuY2VzRm9yRW50aXR5RXZlbnQoKSk7XG5cbiAgLy8gRGlzcGF0Y2ggdGhlIGBlZGl0b3JTZWxlY3Rpb25DaGFuZ2VkYCBhY3Rpb24gd2l0aCB0aGUgbmV3IGVkaXRvciBzZWxlY3Rpb24uXG4gIHN0b3JlLmRpc3BhdGNoKEVkaXRvclNlbGVjdGlvbkNoYW5nZWRFdmVudCgpKTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///170\n')},function(module,exports){eval("(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///171\n")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/Edit/index.scss\nvar Edit = __webpack_require__(128);\n\n// EXTERNAL MODULE: ./src/Edit/index.classification-box.js\nvar index_classification_box = __webpack_require__(170);\n\n// EXTERNAL MODULE: ./src/Edit/index.autocomplete-select.js\nvar index_autocomplete_select = __webpack_require__(131);\n\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: external {"this":"ReactDOM"}\nvar external_this_ReactDOM_ = __webpack_require__(20);\nvar external_this_ReactDOM_default = /*#__PURE__*/__webpack_require__.n(external_this_ReactDOM_);\n\n// EXTERNAL MODULE: ./node_modules/@wordlift/wordlift-for-schemaorg/build/wordlift-for-schemaorg.js\nvar wordlift_for_schemaorg = __webpack_require__(121);\n\n// CONCATENATED MODULE: ./src/Edit/SchemaClassTree/sortByNameCaseInsensitive.js\n/**\n * Sort the provided data structure by name case insensitive.\n *\n * @since 3.20.0\n * @param {{name}[]} data An array of objects with the name field.\n * @returns {Object[]} The sorted array.\n */\nconst sortByNameCaseInsensitive = data => data.sort((a, b) => {\n  const nameA = a.name.toUpperCase();\n  const nameB = b.name.toUpperCase();\n  if (nameA < nameB) return -1;\n  if (nameA > nameB) return 1;\n  return 0;\n});\n\n/* harmony default export */ var SchemaClassTree_sortByNameCaseInsensitive = (sortByNameCaseInsensitive);\n// CONCATENATED MODULE: ./src/Edit/SchemaClassTree/withLoader.js\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n/**\n * A HOC component which loads the tree data from WordPress.\n *\n * @since 3.20.0\n * @param {Object} Component The target component.\n * @returns {Object} The HOC component.\n */\n\nconst withLoader = Component => class extends external_this_React_default.a.Component {\n  constructor(props) {\n    super(props); // Bind the onData.\n\n    this.onData = this.onData.bind(this); // Set the initial state.\n\n    this.state = {\n      // All the items in the tree.\n      items: [],\n      // The root items.\n      roots: [],\n      // The open items.\n      open: []\n    };\n  }\n  /**\n   * As soon as the component is mounted, load the data from WordPress.\n   *\n   * @since 3.20.0\n   */\n\n\n  componentDidMount() {\n    wp.ajax.post("wl_schemaorg_class", {}).then(json => json["schemaClasses"]).then(SchemaClassTree_sortByNameCaseInsensitive).then(this.onData);\n  }\n  /**\n   * Receive the list of tree items.\n   *\n   * @since 3.20.0\n   * @param {{id, name, dashname, description, children}[]} items An array of tree item.\n   */\n\n\n  onData(items) {\n    // Select `thing` as root.\n    const roots = items.filter(item => "thing" === item.dashname);\n    this.setState({\n      // Set the items to the data.\n      items,\n      // Select `thing` as the root item.\n      roots,\n      // Map the roots to their id.\n      open: roots.map(item => item.id)\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    const {\n      items,\n      roots,\n      open\n    } = this.state;\n    return /*#__PURE__*/external_this_React_default.a.createElement(Component, _extends({}, this.props, {\n      items: items,\n      roots: roots,\n      open: open\n    }));\n  }\n\n};\n\n/* harmony default export */ var SchemaClassTree_withLoader = (withLoader);\n// CONCATENATED MODULE: ./src/Edit/SchemaClassTree/withProps.js\nfunction withProps_extends() { withProps_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return withProps_extends.apply(this, arguments); }\n\n\n\nconst withProp = propName => Component => class extends external_this_React_default.a.Component {\n  constructor(props) {\n    super(props);\n    this.is = this.is.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n    this.on = props[`on${this.capitalize(propName)}`] || (() => {});\n\n    this.state = {\n      [propName]: props[propName]\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props[propName] !== prevProps[propName]) {\n      this.setState({\n        [propName]: this.props[propName]\n      });\n    }\n  }\n\n  is(item) {\n    return -1 < this.state[propName].indexOf(item.id);\n  }\n\n  toggle(item) {\n    this.setState(prevState => ({\n      [propName]: this.is(item) ? prevState[propName].filter(value => item.id !== value) : prevState[propName].concat([item.id])\n    })); // `!this.is(item)` because state hasn\'t yet changed here.\n\n    this.on(item, !this.is(item));\n  }\n\n  capitalize(value) {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n\n  render() {\n    const methods = {\n      [`is${this.capitalize(propName)}`]: this.is,\n      [`toggle${this.capitalize(propName)}`]: this.toggle\n    };\n    return /*#__PURE__*/external_this_React_default.a.createElement(Component, withProps_extends({}, this.props, methods));\n  }\n\n};\n\nconst withProps = (...propNames) => Component => {\n  return propNames.reduce((accumulator, current) => withProp(current)(accumulator), Component);\n};\n\n/* harmony default export */ var SchemaClassTree_withProps = (withProps);\n// CONCATENATED MODULE: ./src/Edit/index.schema-class-tree.js\nfunction index_schema_class_tree_extends() { index_schema_class_tree_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return index_schema_class_tree_extends.apply(this, arguments); }\n\n/**\n * Schema Class Tree start-up.\n *\n * Load the {@link SchemaClassTree} on window load if the target element is\n * present on page.\n *\n * @since 3.20.0\n */\n\n/*\n * External dependencies.\n */\n\n\n\n\n\n\nconst syncWithWordPressTaxonomyMetabox = Component => class extends external_this_React_default.a.Component {\n  constructor(props) {\n    super(props);\n    this.getSelected = this.getSelected.bind(this);\n    this.onData = this.onData.bind(this);\n    this.handleSelected = this.handleSelected.bind(this);\n    this.state = {\n      selected: document.getElementById("wl_entity_typechecklist") ? // Get the selection from WordPress\' own checklist.\n      this.getSelected(document.getElementById("wl_entity_typechecklist")) : []\n    };\n  }\n\n  componentDidMount() {\n    document.querySelectorAll("#wl_entity_typechecklist, #wl_entity_typechecklist-pop").forEach(element => element.addEventListener("click", () => this.onData(this.getSelected(element))));\n  }\n  /**\n   * Return an {@link Array} of selected items.\n   *\n   * @since 3.20.0\n   * @returns {number[]} The Array of selected items\' ids.\n   */\n\n\n  getSelected(element) {\n    return Array.from(element.querySelectorAll("input[type=\'checkbox\']:checked")).map(item => parseInt(item.value));\n  }\n\n  onData(selected) {\n    this.setState({\n      selected\n    });\n  }\n\n  handleSelected(item, selected) {\n    document // Query WordPress\' own checkboxes.\n    .querySelectorAll(`#in-wl_entity_type-${item.id}, #in-popular-wl_entity_type-${item.id}`) // Set them un/checked accordingly.\n    .forEach(element => element.checked = selected);\n    this.setState(prevState => ({\n      selected: selected ? prevState.selected.concat([item.id]) : prevState.selected.filter(value => value !== item.id)\n    }));\n  }\n\n  componentDidUpdate() {\n    window.postMessage({\n      type: "syncWithWordPressTaxonomyMetabox.selected",\n      payload: {\n        selected: this.state.selected\n      }\n    }, document.location.href);\n  }\n\n  render() {\n    // Take out `selected` from the props.\n    const {\n      selected,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/external_this_React_default.a.createElement(Component, index_schema_class_tree_extends({}, props, {\n      selected: this.state.selected,\n      onSelected: this.handleSelected\n    }));\n  }\n\n};\n/*\n * `withLoader` provides us with the `open` property therefore goes after\n * `withProps`.\n */\n\n\nconst DecoratedTree = SchemaClassTree_withLoader(syncWithWordPressTaxonomyMetabox(SchemaClassTree_withProps("open", "selected")(wordlift_for_schemaorg["SchemaClassTree"])));\n/**\n * Add the SchemaClassTree.\n *\n * @since 3.20.0\n */\n\nwindow.addEventListener("load", () => {\n  // Get the target element.\n  const element = document.querySelector("#taxonomy-wl_entity_type #wl-schema-class-tree"); // Bail out if the target element isn\'t found.\n\n  if (null === element) {\n    return;\n  } // // Set a reference to the WordLift\'s settings stored in the window instance.\n  // const settings = window["wlSettings"] || {};\n  // Render the Schema Class Tree.\n\n\n  external_this_ReactDOM_default.a.render( /*#__PURE__*/external_this_React_default.a.createElement(DecoratedTree, null), element);\n});\n// CONCATENATED MODULE: ./src/Edit/uuid.js\nconst lut = Array(256).fill().map((_, i) => (i < 16 ? "0" : "") + i.toString(16));\n\nconst formatUuid = ({\n  d0,\n  d1,\n  d2,\n  d3\n}) => lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + "-" + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + "-" + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + "-" + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + "-" + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\n\nconst getRandomValuesFunc = window.crypto && window.crypto.getRandomValues ? () => {\n  const dvals = new Uint32Array(4);\n  window.crypto.getRandomValues(dvals);\n  return {\n    d0: dvals[0],\n    d1: dvals[1],\n    d2: dvals[2],\n    d3: dvals[3]\n  };\n} : () => ({\n  d0: Math.random() * 0x100000000 >>> 0,\n  d1: Math.random() * 0x100000000 >>> 0,\n  d2: Math.random() * 0x100000000 >>> 0,\n  d3: Math.random() * 0x100000000 >>> 0\n});\n\nconst uuid = () => formatUuid(getRandomValuesFunc());\n\n/* harmony default export */ var Edit_uuid = (uuid);\n// CONCATENATED MODULE: ./src/Edit/index.schema-property-form.js\nfunction index_schema_property_form_extends() { index_schema_property_form_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return index_schema_property_form_extends.apply(this, arguments); }\n\n/**\n * Load the Schema Properties Form.\n *\n * @since 3.20.0\n */\n\n\n\n\n/**\n * Add the SchemaClassTree.\n *\n * @since 3.20.0\n */\n\nwindow.addEventListener("load", () => {\n  const element = document.getElementById("wl-schema-properties-form");\n\n  if (null === element) {\n    return;\n  } // Set a reference to the WordLift\'s settings stored in the window instance.\n\n\n  const settings = window["wlSettings"] || {};\n  const data = settings["properties"];\n\n  const Reader = property => data[property.name];\n\n  const PropertyDecorator = Component => props => /*#__PURE__*/external_this_React_default.a.createElement(Component, index_schema_property_form_extends({\n    values: Reader(props.property)\n  }, props));\n\n  const PropertyInstanceDecorator = Component => props => {\n    const uniqueId = Edit_uuid();\n    const {\n      property,\n      propertyValue,\n      ...pass\n    } = props;\n    return /*#__PURE__*/external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, /*#__PURE__*/external_this_React_default.a.createElement("input", {\n      type: "hidden",\n      name: `_wl_prop[${property.name}][${uniqueId}][type]`,\n      defaultValue: propertyValue.type\n    }), /*#__PURE__*/external_this_React_default.a.createElement("input", {\n      type: "hidden",\n      name: `_wl_prop[${property.name}][${uniqueId}][language]`,\n      defaultValue: propertyValue.language\n    }), /*#__PURE__*/external_this_React_default.a.createElement(Component, index_schema_property_form_extends({}, pass, {\n      property: property,\n      propertyValue: propertyValue,\n      name: `_wl_prop[${property.name}][${uniqueId}][value]`,\n      value: propertyValue.value\n    })));\n  };\n\n  const FetchLoader = selected => {\n    return window["wp"].ajax.post("wl_schemaorg_property", {\n      term_id: selected,\n      _wpnonce: settings["wl_schemaorg_property_nonce"]\n    }).then(json => json["schemaProperties"]).then(properties => // Sort alphabetically.\n    properties.sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      if (nameA < nameB) return -1;\n      if (nameA > nameB) return 1;\n      return 0;\n    }));\n  };\n\n  const syncWithSchemaClassTree = Component => class extends external_this_React_default.a.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        selected: Array.from(document.querySelectorAll("#wl_entity_typechecklist input[type=\'checkbox\']:checked")).map(item => parseInt(item.value))\n      };\n    }\n\n    componentDidMount() {\n      // Listen for messages, specifically whether the Schema.org class selection has changed.\n      window.addEventListener("message", ({\n        data,\n        origin\n      }) => {\n        console.debug("message received", {\n          data,\n          origin\n        }); // Bail out if message isn\'t coming from our page.\n\n        if (0 !== document.location.href.indexOf(origin)) return;\n        if (undefined === data.type || "syncWithWordPressTaxonomyMetabox.selected" !== data.type) return;\n        this.setState({\n          selected: data.payload.selected\n        });\n      }, false);\n    }\n\n    render() {\n      const {\n        selected,\n        ...props\n      } = this.props;\n      return /*#__PURE__*/external_this_React_default.a.createElement(Component, index_schema_property_form_extends({}, props, {\n        selected: this.state.selected\n      }));\n    }\n\n  };\n\n  const DecoratedForm = syncWithSchemaClassTree(wordlift_for_schemaorg["Form"]);\n  external_this_ReactDOM_default.a.render( /*#__PURE__*/external_this_React_default.a.createElement(DecoratedForm, {\n    loader: FetchLoader,\n    propertyDecorator: PropertyDecorator,\n    propertyInstanceDecorator: PropertyInstanceDecorator\n  }), element);\n});\n// CONCATENATED MODULE: ./src/Edit/index.js\n/*global wp jQuery */\n\n/**\n * App: WordLift Admin.\n *\n * This is the main entry point for WordLift\'s admin client application,\n * currently handling the classification box in the post/page edit screen.\n *\n * The application is structured in a Redux provider which encloses:\n *  * an EntityListContainer container, based on `react-redux` binds state and\n *    dispatchers, which contains:\n *  * an EntityList component which, in turn, loads\n *  * an EntityTile component for each entity.\n *\n * The application is activated when an `analysis.result` is fired via WP\'s\n * Backbone subsystem in the `wordlift` namespace.\n *\n * @since 3.20.0 The single load functions are split in the index.*.js files.\n * @since 3.11.0\n */\n\n/*\n * Internal dependencies\n */\n // Load the Classification Box.\n\n // Load the Autocomplete Select.\n\n // Load the Schema Class Tree.\n\n // Load the Schema Properties Form.\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///201\n')}]);